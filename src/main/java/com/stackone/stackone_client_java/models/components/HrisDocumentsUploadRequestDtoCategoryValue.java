/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.core.JacksonException;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

/**
 * <p>Wrapper class for an "open" enum. "Open" enums are those that are expected
 * to evolve (particularly with the addition of enum members over time). If an
 * open enum is used then the appearance of unexpected enum values (say in a 
 * response from an updated an API) will not bring about a runtime error thus 
 * ensuring that non-updated client versions can continue to work without error.
 *
 * <p>Note that instances are immutable and are singletons (an internal thread-safe
 * cache is maintained to ensure that). As a consequence instances created with the 
 * same value will satisfy reference equality (via {@code ==}).
 * 
 * <p>This class is intended to emulate an enum (in terms of common usage and with 
 * reference equality) but with the ability to carry unknown values. Unfortunately
 * Java does not permit the use of an instance in a switch expression but you can 
 * use the {@code asEnum()} method (after dealing with the `Optional` appropriately).
 *
 */
/**
 * HrisDocumentsUploadRequestDtoCategoryValue
 * 
 * <p>The category name to associate with the file
 */
@JsonDeserialize(using = HrisDocumentsUploadRequestDtoCategoryValue._Deserializer.class)
@JsonSerialize(using = HrisDocumentsUploadRequestDtoCategoryValue._Serializer.class)
public class HrisDocumentsUploadRequestDtoCategoryValue {

    public static final HrisDocumentsUploadRequestDtoCategoryValue APPLICATION = new HrisDocumentsUploadRequestDtoCategoryValue("application");
    public static final HrisDocumentsUploadRequestDtoCategoryValue ACADEMIC = new HrisDocumentsUploadRequestDtoCategoryValue("academic");
    public static final HrisDocumentsUploadRequestDtoCategoryValue CONTRACT = new HrisDocumentsUploadRequestDtoCategoryValue("contract");
    public static final HrisDocumentsUploadRequestDtoCategoryValue CERTIFICATES = new HrisDocumentsUploadRequestDtoCategoryValue("certificates");
    public static final HrisDocumentsUploadRequestDtoCategoryValue VISA = new HrisDocumentsUploadRequestDtoCategoryValue("visa");
    public static final HrisDocumentsUploadRequestDtoCategoryValue PASSPORT = new HrisDocumentsUploadRequestDtoCategoryValue("passport");
    public static final HrisDocumentsUploadRequestDtoCategoryValue DRIVER_LICENSE = new HrisDocumentsUploadRequestDtoCategoryValue("driver_license");
    public static final HrisDocumentsUploadRequestDtoCategoryValue PAYSLIP = new HrisDocumentsUploadRequestDtoCategoryValue("payslip");
    public static final HrisDocumentsUploadRequestDtoCategoryValue PAYROLL = new HrisDocumentsUploadRequestDtoCategoryValue("payroll");
    public static final HrisDocumentsUploadRequestDtoCategoryValue APPRAISAL = new HrisDocumentsUploadRequestDtoCategoryValue("appraisal");
    public static final HrisDocumentsUploadRequestDtoCategoryValue RESUME = new HrisDocumentsUploadRequestDtoCategoryValue("resume");
    public static final HrisDocumentsUploadRequestDtoCategoryValue POLICY = new HrisDocumentsUploadRequestDtoCategoryValue("policy");
    public static final HrisDocumentsUploadRequestDtoCategoryValue COVER_LETTER = new HrisDocumentsUploadRequestDtoCategoryValue("cover_letter");
    public static final HrisDocumentsUploadRequestDtoCategoryValue OFFER_LETTER = new HrisDocumentsUploadRequestDtoCategoryValue("offer_letter");
    public static final HrisDocumentsUploadRequestDtoCategoryValue POLICY_AGREEMENT = new HrisDocumentsUploadRequestDtoCategoryValue("policy_agreement");
    public static final HrisDocumentsUploadRequestDtoCategoryValue HOME_ADDRESS = new HrisDocumentsUploadRequestDtoCategoryValue("home_address");
    public static final HrisDocumentsUploadRequestDtoCategoryValue NATIONAL_ID = new HrisDocumentsUploadRequestDtoCategoryValue("national_id");
    public static final HrisDocumentsUploadRequestDtoCategoryValue CONFIDENTIAL = new HrisDocumentsUploadRequestDtoCategoryValue("confidential");
    public static final HrisDocumentsUploadRequestDtoCategoryValue SIGNED = new HrisDocumentsUploadRequestDtoCategoryValue("signed");
    public static final HrisDocumentsUploadRequestDtoCategoryValue SHARED = new HrisDocumentsUploadRequestDtoCategoryValue("shared");
    public static final HrisDocumentsUploadRequestDtoCategoryValue OTHER = new HrisDocumentsUploadRequestDtoCategoryValue("other");
    public static final HrisDocumentsUploadRequestDtoCategoryValue BENEFIT = new HrisDocumentsUploadRequestDtoCategoryValue("benefit");
    public static final HrisDocumentsUploadRequestDtoCategoryValue ID_VERIFICATION = new HrisDocumentsUploadRequestDtoCategoryValue("id_verification");
    public static final HrisDocumentsUploadRequestDtoCategoryValue BACKGROUND_CHECK = new HrisDocumentsUploadRequestDtoCategoryValue("background_check");
    public static final HrisDocumentsUploadRequestDtoCategoryValue UNMAPPED_VALUE = new HrisDocumentsUploadRequestDtoCategoryValue("unmapped_value");

    // This map will grow whenever a Color gets created with a new
    // unrecognized value (a potential memory leak if the user is not
    // careful). Keep this field lower case to avoid clashing with
    // generated member names which will always be upper cased (Java
    // convention)
    private static final Map<String, HrisDocumentsUploadRequestDtoCategoryValue> values = createValuesMap();
    private static final Map<String, HrisDocumentsUploadRequestDtoCategoryValueEnum> enums = createEnumsMap();

    private final String value;

    private HrisDocumentsUploadRequestDtoCategoryValue(String value) {
        this.value = value;
    }

    /**
     * Returns a HrisDocumentsUploadRequestDtoCategoryValue with the given value. For a specific value the 
     * returned object will always be a singleton so reference equality 
     * is satisfied when the values are the same.
     * 
     * @param value value to be wrapped as HrisDocumentsUploadRequestDtoCategoryValue
     */ 
    public static HrisDocumentsUploadRequestDtoCategoryValue of(String value) {
        synchronized (HrisDocumentsUploadRequestDtoCategoryValue.class) {
            return values.computeIfAbsent(value, v -> new HrisDocumentsUploadRequestDtoCategoryValue(v));
        }
    }

    public String value() {
        return value;
    }

    public Optional<HrisDocumentsUploadRequestDtoCategoryValueEnum> asEnum() {
        return Optional.ofNullable(enums.getOrDefault(value, null));
    }

    public boolean isKnown() {
        return asEnum().isPresent();
    }

    @Override
    public int hashCode() {
        return Objects.hash(value);
    }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        HrisDocumentsUploadRequestDtoCategoryValue other = (HrisDocumentsUploadRequestDtoCategoryValue) obj;
        return Objects.equals(value, other.value);
    }

    @Override
    public String toString() {
        return "HrisDocumentsUploadRequestDtoCategoryValue [value=" + value + "]";
    }

    // return an array just like an enum
    public static HrisDocumentsUploadRequestDtoCategoryValue[] values() {
        synchronized (HrisDocumentsUploadRequestDtoCategoryValue.class) {
            return values.values().toArray(new HrisDocumentsUploadRequestDtoCategoryValue[] {});
        }
    }

    private static final Map<String, HrisDocumentsUploadRequestDtoCategoryValue> createValuesMap() {
        Map<String, HrisDocumentsUploadRequestDtoCategoryValue> map = new LinkedHashMap<>();
        map.put("application", APPLICATION);
        map.put("academic", ACADEMIC);
        map.put("contract", CONTRACT);
        map.put("certificates", CERTIFICATES);
        map.put("visa", VISA);
        map.put("passport", PASSPORT);
        map.put("driver_license", DRIVER_LICENSE);
        map.put("payslip", PAYSLIP);
        map.put("payroll", PAYROLL);
        map.put("appraisal", APPRAISAL);
        map.put("resume", RESUME);
        map.put("policy", POLICY);
        map.put("cover_letter", COVER_LETTER);
        map.put("offer_letter", OFFER_LETTER);
        map.put("policy_agreement", POLICY_AGREEMENT);
        map.put("home_address", HOME_ADDRESS);
        map.put("national_id", NATIONAL_ID);
        map.put("confidential", CONFIDENTIAL);
        map.put("signed", SIGNED);
        map.put("shared", SHARED);
        map.put("other", OTHER);
        map.put("benefit", BENEFIT);
        map.put("id_verification", ID_VERIFICATION);
        map.put("background_check", BACKGROUND_CHECK);
        map.put("unmapped_value", UNMAPPED_VALUE);
        return map;
    }

    private static final Map<String, HrisDocumentsUploadRequestDtoCategoryValueEnum> createEnumsMap() {
        Map<String, HrisDocumentsUploadRequestDtoCategoryValueEnum> map = new HashMap<>();
        map.put("application", HrisDocumentsUploadRequestDtoCategoryValueEnum.APPLICATION);
        map.put("academic", HrisDocumentsUploadRequestDtoCategoryValueEnum.ACADEMIC);
        map.put("contract", HrisDocumentsUploadRequestDtoCategoryValueEnum.CONTRACT);
        map.put("certificates", HrisDocumentsUploadRequestDtoCategoryValueEnum.CERTIFICATES);
        map.put("visa", HrisDocumentsUploadRequestDtoCategoryValueEnum.VISA);
        map.put("passport", HrisDocumentsUploadRequestDtoCategoryValueEnum.PASSPORT);
        map.put("driver_license", HrisDocumentsUploadRequestDtoCategoryValueEnum.DRIVER_LICENSE);
        map.put("payslip", HrisDocumentsUploadRequestDtoCategoryValueEnum.PAYSLIP);
        map.put("payroll", HrisDocumentsUploadRequestDtoCategoryValueEnum.PAYROLL);
        map.put("appraisal", HrisDocumentsUploadRequestDtoCategoryValueEnum.APPRAISAL);
        map.put("resume", HrisDocumentsUploadRequestDtoCategoryValueEnum.RESUME);
        map.put("policy", HrisDocumentsUploadRequestDtoCategoryValueEnum.POLICY);
        map.put("cover_letter", HrisDocumentsUploadRequestDtoCategoryValueEnum.COVER_LETTER);
        map.put("offer_letter", HrisDocumentsUploadRequestDtoCategoryValueEnum.OFFER_LETTER);
        map.put("policy_agreement", HrisDocumentsUploadRequestDtoCategoryValueEnum.POLICY_AGREEMENT);
        map.put("home_address", HrisDocumentsUploadRequestDtoCategoryValueEnum.HOME_ADDRESS);
        map.put("national_id", HrisDocumentsUploadRequestDtoCategoryValueEnum.NATIONAL_ID);
        map.put("confidential", HrisDocumentsUploadRequestDtoCategoryValueEnum.CONFIDENTIAL);
        map.put("signed", HrisDocumentsUploadRequestDtoCategoryValueEnum.SIGNED);
        map.put("shared", HrisDocumentsUploadRequestDtoCategoryValueEnum.SHARED);
        map.put("other", HrisDocumentsUploadRequestDtoCategoryValueEnum.OTHER);
        map.put("benefit", HrisDocumentsUploadRequestDtoCategoryValueEnum.BENEFIT);
        map.put("id_verification", HrisDocumentsUploadRequestDtoCategoryValueEnum.ID_VERIFICATION);
        map.put("background_check", HrisDocumentsUploadRequestDtoCategoryValueEnum.BACKGROUND_CHECK);
        map.put("unmapped_value", HrisDocumentsUploadRequestDtoCategoryValueEnum.UNMAPPED_VALUE);
        return map;
    }
    
    @SuppressWarnings("serial")
    public static final class _Serializer extends StdSerializer<HrisDocumentsUploadRequestDtoCategoryValue> {

        protected _Serializer() {
            super(HrisDocumentsUploadRequestDtoCategoryValue.class);
        }

        @Override
        public void serialize(HrisDocumentsUploadRequestDtoCategoryValue value, JsonGenerator g, SerializerProvider provider)
                throws IOException, JsonProcessingException {
            g.writeObject(value.value);
        }
    }

    @SuppressWarnings("serial")
    public static final class _Deserializer extends StdDeserializer<HrisDocumentsUploadRequestDtoCategoryValue> {

        protected _Deserializer() {
            super(HrisDocumentsUploadRequestDtoCategoryValue.class);
        }

        @Override
        public HrisDocumentsUploadRequestDtoCategoryValue deserialize(JsonParser p, DeserializationContext ctxt)
                throws IOException, JacksonException {
            String v = p.readValueAs(new TypeReference<String>() {});
            // use the factory method to ensure we get singletons
            return HrisDocumentsUploadRequestDtoCategoryValue.of(v);
        }
    }
    
    public enum HrisDocumentsUploadRequestDtoCategoryValueEnum {

        APPLICATION("application"),
        ACADEMIC("academic"),
        CONTRACT("contract"),
        CERTIFICATES("certificates"),
        VISA("visa"),
        PASSPORT("passport"),
        DRIVER_LICENSE("driver_license"),
        PAYSLIP("payslip"),
        PAYROLL("payroll"),
        APPRAISAL("appraisal"),
        RESUME("resume"),
        POLICY("policy"),
        COVER_LETTER("cover_letter"),
        OFFER_LETTER("offer_letter"),
        POLICY_AGREEMENT("policy_agreement"),
        HOME_ADDRESS("home_address"),
        NATIONAL_ID("national_id"),
        CONFIDENTIAL("confidential"),
        SIGNED("signed"),
        SHARED("shared"),
        OTHER("other"),
        BENEFIT("benefit"),
        ID_VERIFICATION("id_verification"),
        BACKGROUND_CHECK("background_check"),
        UNMAPPED_VALUE("unmapped_value"),;

        private final String value;

        private HrisDocumentsUploadRequestDtoCategoryValueEnum(String value) {
            this.value = value;
        }

        public String value() {
            return value;
        }
    }
}

