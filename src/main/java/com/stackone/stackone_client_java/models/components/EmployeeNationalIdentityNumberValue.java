/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.core.JacksonException;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

/**
 * <p>Wrapper class for an "open" enum. "Open" enums are those that are expected
 * to evolve (particularly with the addition of enum members over time). If an
 * open enum is used then the appearance of unexpected enum values (say in a 
 * response from an updated an API) will not bring about a runtime error thus 
 * ensuring that non-updated client versions can continue to work without error.
 *
 * <p>Note that instances are immutable and are singletons (an internal thread-safe
 * cache is maintained to ensure that). As a consequence instances created with the 
 * same value will satisfy reference equality (via {@code ==}).
 * 
 * <p>This class is intended to emulate an enum (in terms of common usage and with 
 * reference equality) but with the ability to carry unknown values. Unfortunately
 * Java does not permit the use of an instance in a switch expression but you can 
 * use the {@code asEnum()} method (after dealing with the `Optional` appropriately).
 *
 */
/**
 * EmployeeNationalIdentityNumberValue
 * 
 * <p>The type of the national identity number
 */
@JsonDeserialize(using = EmployeeNationalIdentityNumberValue._Deserializer.class)
@JsonSerialize(using = EmployeeNationalIdentityNumberValue._Serializer.class)
public class EmployeeNationalIdentityNumberValue {

    public static final EmployeeNationalIdentityNumberValue SSN = new EmployeeNationalIdentityNumberValue("ssn");
    public static final EmployeeNationalIdentityNumberValue NIN = new EmployeeNationalIdentityNumberValue("nin");
    public static final EmployeeNationalIdentityNumberValue SIN = new EmployeeNationalIdentityNumberValue("sin");
    public static final EmployeeNationalIdentityNumberValue NID = new EmployeeNationalIdentityNumberValue("nid");
    public static final EmployeeNationalIdentityNumberValue PIN = new EmployeeNationalIdentityNumberValue("pin");
    public static final EmployeeNationalIdentityNumberValue PN = new EmployeeNationalIdentityNumberValue("pn");
    public static final EmployeeNationalIdentityNumberValue UMCN = new EmployeeNationalIdentityNumberValue("umcn");
    public static final EmployeeNationalIdentityNumberValue PIC = new EmployeeNationalIdentityNumberValue("pic");
    public static final EmployeeNationalIdentityNumberValue RIC = new EmployeeNationalIdentityNumberValue("ric");
    public static final EmployeeNationalIdentityNumberValue IDNUM = new EmployeeNationalIdentityNumberValue("idnum");
    public static final EmployeeNationalIdentityNumberValue CID = new EmployeeNationalIdentityNumberValue("cid");
    public static final EmployeeNationalIdentityNumberValue NIDNR = new EmployeeNationalIdentityNumberValue("nidnr");
    public static final EmployeeNationalIdentityNumberValue PAN = new EmployeeNationalIdentityNumberValue("pan");
    public static final EmployeeNationalIdentityNumberValue AADHAAR = new EmployeeNationalIdentityNumberValue("aadhaar");
    public static final EmployeeNationalIdentityNumberValue EPIC = new EmployeeNationalIdentityNumberValue("epic");
    public static final EmployeeNationalIdentityNumberValue PTN = new EmployeeNationalIdentityNumberValue("ptn");
    public static final EmployeeNationalIdentityNumberValue ITIN = new EmployeeNationalIdentityNumberValue("itin");
    public static final EmployeeNationalIdentityNumberValue TIN = new EmployeeNationalIdentityNumberValue("tin");
    public static final EmployeeNationalIdentityNumberValue UPRC = new EmployeeNationalIdentityNumberValue("uprc");
    public static final EmployeeNationalIdentityNumberValue PCODE = new EmployeeNationalIdentityNumberValue("pcode");
    public static final EmployeeNationalIdentityNumberValue SSI = new EmployeeNationalIdentityNumberValue("ssi");
    public static final EmployeeNationalIdentityNumberValue CEDULA = new EmployeeNationalIdentityNumberValue("cedula");
    public static final EmployeeNationalIdentityNumberValue PASSPORT = new EmployeeNationalIdentityNumberValue("passport");
    public static final EmployeeNationalIdentityNumberValue VOTERID = new EmployeeNationalIdentityNumberValue("voterid");
    public static final EmployeeNationalIdentityNumberValue NTIN = new EmployeeNationalIdentityNumberValue("ntin");
    public static final EmployeeNationalIdentityNumberValue BN = new EmployeeNationalIdentityNumberValue("bn");
    public static final EmployeeNationalIdentityNumberValue FNR = new EmployeeNationalIdentityNumberValue("fnr");
    public static final EmployeeNationalIdentityNumberValue MVA = new EmployeeNationalIdentityNumberValue("mva");
    public static final EmployeeNationalIdentityNumberValue CIVIL_ID = new EmployeeNationalIdentityNumberValue("civil_id");
    public static final EmployeeNationalIdentityNumberValue CNIC = new EmployeeNationalIdentityNumberValue("cnic");
    public static final EmployeeNationalIdentityNumberValue NRIC = new EmployeeNationalIdentityNumberValue("nric");
    public static final EmployeeNationalIdentityNumberValue FIN = new EmployeeNationalIdentityNumberValue("fin");
    public static final EmployeeNationalIdentityNumberValue UEN = new EmployeeNationalIdentityNumberValue("uen");
    public static final EmployeeNationalIdentityNumberValue REGISTRATIONNUMBER = new EmployeeNationalIdentityNumberValue("registrationnumber");
    public static final EmployeeNationalIdentityNumberValue NIC = new EmployeeNationalIdentityNumberValue("nic");
    public static final EmployeeNationalIdentityNumberValue PERSONNUMMER = new EmployeeNationalIdentityNumberValue("personnummer");
    public static final EmployeeNationalIdentityNumberValue AHV = new EmployeeNationalIdentityNumberValue("ahv");
    public static final EmployeeNationalIdentityNumberValue ID = new EmployeeNationalIdentityNumberValue("id");
    public static final EmployeeNationalIdentityNumberValue EID = new EmployeeNationalIdentityNumberValue("eid");
    public static final EmployeeNationalIdentityNumberValue VA = new EmployeeNationalIdentityNumberValue("va");
    public static final EmployeeNationalIdentityNumberValue PID = new EmployeeNationalIdentityNumberValue("pid");
    public static final EmployeeNationalIdentityNumberValue NRT = new EmployeeNationalIdentityNumberValue("nrt");
    public static final EmployeeNationalIdentityNumberValue NIPT = new EmployeeNationalIdentityNumberValue("nipt");
    public static final EmployeeNationalIdentityNumberValue CBU = new EmployeeNationalIdentityNumberValue("cbu");
    public static final EmployeeNationalIdentityNumberValue CUIT = new EmployeeNationalIdentityNumberValue("cuit");
    public static final EmployeeNationalIdentityNumberValue DNI = new EmployeeNationalIdentityNumberValue("dni");
    public static final EmployeeNationalIdentityNumberValue BUSINESSID = new EmployeeNationalIdentityNumberValue("businessid");
    public static final EmployeeNationalIdentityNumberValue VNR = new EmployeeNationalIdentityNumberValue("vnr");
    public static final EmployeeNationalIdentityNumberValue ABN = new EmployeeNationalIdentityNumberValue("abn");
    public static final EmployeeNationalIdentityNumberValue ACN = new EmployeeNationalIdentityNumberValue("acn");
    public static final EmployeeNationalIdentityNumberValue TFN = new EmployeeNationalIdentityNumberValue("tfn");
    public static final EmployeeNationalIdentityNumberValue JMBG = new EmployeeNationalIdentityNumberValue("jmbg");
    public static final EmployeeNationalIdentityNumberValue BIS = new EmployeeNationalIdentityNumberValue("bis");
    public static final EmployeeNationalIdentityNumberValue INSZ = new EmployeeNationalIdentityNumberValue("insz");
    public static final EmployeeNationalIdentityNumberValue NN = new EmployeeNationalIdentityNumberValue("nn");
    public static final EmployeeNationalIdentityNumberValue EGN = new EmployeeNationalIdentityNumberValue("egn");
    public static final EmployeeNationalIdentityNumberValue PNF = new EmployeeNationalIdentityNumberValue("pnf");
    public static final EmployeeNationalIdentityNumberValue VAT = new EmployeeNationalIdentityNumberValue("vat");
    public static final EmployeeNationalIdentityNumberValue CNPJ = new EmployeeNationalIdentityNumberValue("cnpj");
    public static final EmployeeNationalIdentityNumberValue UNP = new EmployeeNationalIdentityNumberValue("unp");
    public static final EmployeeNationalIdentityNumberValue GST = new EmployeeNationalIdentityNumberValue("gst");
    public static final EmployeeNationalIdentityNumberValue PST = new EmployeeNationalIdentityNumberValue("pst");
    public static final EmployeeNationalIdentityNumberValue QST = new EmployeeNationalIdentityNumberValue("qst");
    public static final EmployeeNationalIdentityNumberValue NI = new EmployeeNationalIdentityNumberValue("ni");
    public static final EmployeeNationalIdentityNumberValue DIC = new EmployeeNationalIdentityNumberValue("dic");
    public static final EmployeeNationalIdentityNumberValue RC = new EmployeeNationalIdentityNumberValue("rc");
    public static final EmployeeNationalIdentityNumberValue UID = new EmployeeNationalIdentityNumberValue("uid");
    public static final EmployeeNationalIdentityNumberValue RUT = new EmployeeNationalIdentityNumberValue("rut");
    public static final EmployeeNationalIdentityNumberValue USCC = new EmployeeNationalIdentityNumberValue("uscc");
    public static final EmployeeNationalIdentityNumberValue CPF = new EmployeeNationalIdentityNumberValue("cpf");
    public static final EmployeeNationalIdentityNumberValue CPJ = new EmployeeNationalIdentityNumberValue("cpj");
    public static final EmployeeNationalIdentityNumberValue CR = new EmployeeNationalIdentityNumberValue("cr");
    public static final EmployeeNationalIdentityNumberValue STNR = new EmployeeNationalIdentityNumberValue("stnr");
    public static final EmployeeNationalIdentityNumberValue SVNR = new EmployeeNationalIdentityNumberValue("svnr");
    public static final EmployeeNationalIdentityNumberValue NCF = new EmployeeNationalIdentityNumberValue("ncf");
    public static final EmployeeNationalIdentityNumberValue RNC = new EmployeeNationalIdentityNumberValue("rnc");
    public static final EmployeeNationalIdentityNumberValue NIF = new EmployeeNationalIdentityNumberValue("nif");
    public static final EmployeeNationalIdentityNumberValue CI = new EmployeeNationalIdentityNumberValue("ci");
    public static final EmployeeNationalIdentityNumberValue IK = new EmployeeNationalIdentityNumberValue("ik");
    public static final EmployeeNationalIdentityNumberValue KMKR = new EmployeeNationalIdentityNumberValue("kmkr");
    public static final EmployeeNationalIdentityNumberValue REGISTRIKOOD = new EmployeeNationalIdentityNumberValue("registrikood");
    public static final EmployeeNationalIdentityNumberValue TN = new EmployeeNationalIdentityNumberValue("tn");
    public static final EmployeeNationalIdentityNumberValue RUC = new EmployeeNationalIdentityNumberValue("ruc");
    public static final EmployeeNationalIdentityNumberValue NIT = new EmployeeNationalIdentityNumberValue("nit");
    public static final EmployeeNationalIdentityNumberValue ALV = new EmployeeNationalIdentityNumberValue("alv");
    public static final EmployeeNationalIdentityNumberValue HETU = new EmployeeNationalIdentityNumberValue("hetu");
    public static final EmployeeNationalIdentityNumberValue YTUNNUS = new EmployeeNationalIdentityNumberValue("ytunnus");
    public static final EmployeeNationalIdentityNumberValue VN = new EmployeeNationalIdentityNumberValue("vn");
    public static final EmployeeNationalIdentityNumberValue UTR = new EmployeeNationalIdentityNumberValue("utr");
    public static final EmployeeNationalIdentityNumberValue NIFP = new EmployeeNationalIdentityNumberValue("nifp");
    public static final EmployeeNationalIdentityNumberValue AMKA = new EmployeeNationalIdentityNumberValue("amka");
    public static final EmployeeNationalIdentityNumberValue CUI = new EmployeeNationalIdentityNumberValue("cui");
    public static final EmployeeNationalIdentityNumberValue NIR = new EmployeeNationalIdentityNumberValue("nir");
    public static final EmployeeNationalIdentityNumberValue SIREN = new EmployeeNationalIdentityNumberValue("siren");
    public static final EmployeeNationalIdentityNumberValue SIRET = new EmployeeNationalIdentityNumberValue("siret");
    public static final EmployeeNationalIdentityNumberValue TVA = new EmployeeNationalIdentityNumberValue("tva");
    public static final EmployeeNationalIdentityNumberValue OIB = new EmployeeNationalIdentityNumberValue("oib");
    public static final EmployeeNationalIdentityNumberValue HKID = new EmployeeNationalIdentityNumberValue("hkid");
    public static final EmployeeNationalIdentityNumberValue ANUM = new EmployeeNationalIdentityNumberValue("anum");
    public static final EmployeeNationalIdentityNumberValue KENNITALA = new EmployeeNationalIdentityNumberValue("kennitala");
    public static final EmployeeNationalIdentityNumberValue VSK = new EmployeeNationalIdentityNumberValue("vsk");
    public static final EmployeeNationalIdentityNumberValue NPWP = new EmployeeNationalIdentityNumberValue("npwp");
    public static final EmployeeNationalIdentityNumberValue PPS = new EmployeeNationalIdentityNumberValue("pps");
    public static final EmployeeNationalIdentityNumberValue GSTIN = new EmployeeNationalIdentityNumberValue("gstin");
    public static final EmployeeNationalIdentityNumberValue IDNR = new EmployeeNationalIdentityNumberValue("idnr");
    public static final EmployeeNationalIdentityNumberValue HR = new EmployeeNationalIdentityNumberValue("hr");
    public static final EmployeeNationalIdentityNumberValue AIC = new EmployeeNationalIdentityNumberValue("aic");
    public static final EmployeeNationalIdentityNumberValue CODICEFISCALE = new EmployeeNationalIdentityNumberValue("codicefiscale");
    public static final EmployeeNationalIdentityNumberValue IVA = new EmployeeNationalIdentityNumberValue("iva");
    public static final EmployeeNationalIdentityNumberValue PEID = new EmployeeNationalIdentityNumberValue("peid");
    public static final EmployeeNationalIdentityNumberValue ASMENS = new EmployeeNationalIdentityNumberValue("asmens");
    public static final EmployeeNationalIdentityNumberValue PVM = new EmployeeNationalIdentityNumberValue("pvm");
    public static final EmployeeNationalIdentityNumberValue CTPS = new EmployeeNationalIdentityNumberValue("ctps");
    public static final EmployeeNationalIdentityNumberValue VRN = new EmployeeNationalIdentityNumberValue("vrn");
    public static final EmployeeNationalIdentityNumberValue VTK = new EmployeeNationalIdentityNumberValue("vtk");
    public static final EmployeeNationalIdentityNumberValue INT = new EmployeeNationalIdentityNumberValue("int");
    public static final EmployeeNationalIdentityNumberValue TK = new EmployeeNationalIdentityNumberValue("tk");
    public static final EmployeeNationalIdentityNumberValue PAS = new EmployeeNationalIdentityNumberValue("pas");
    public static final EmployeeNationalIdentityNumberValue RNE = new EmployeeNationalIdentityNumberValue("rne");
    public static final EmployeeNationalIdentityNumberValue RG = new EmployeeNationalIdentityNumberValue("rg");
    public static final EmployeeNationalIdentityNumberValue NCI = new EmployeeNationalIdentityNumberValue("nci");
    public static final EmployeeNationalIdentityNumberValue CRNM = new EmployeeNationalIdentityNumberValue("crnm");
    public static final EmployeeNationalIdentityNumberValue PIS = new EmployeeNationalIdentityNumberValue("pis");
    public static final EmployeeNationalIdentityNumberValue INSEE = new EmployeeNationalIdentityNumberValue("insee");
    public static final EmployeeNationalIdentityNumberValue TAX = new EmployeeNationalIdentityNumberValue("tax");
    public static final EmployeeNationalIdentityNumberValue MPF = new EmployeeNationalIdentityNumberValue("mpf");
    public static final EmployeeNationalIdentityNumberValue EPFO = new EmployeeNationalIdentityNumberValue("epfo");
    public static final EmployeeNationalIdentityNumberValue ESI = new EmployeeNationalIdentityNumberValue("esi");
    public static final EmployeeNationalIdentityNumberValue PRAN = new EmployeeNationalIdentityNumberValue("pran");
    public static final EmployeeNationalIdentityNumberValue UAN = new EmployeeNationalIdentityNumberValue("uan");
    public static final EmployeeNationalIdentityNumberValue IDK = new EmployeeNationalIdentityNumberValue("idk");
    public static final EmployeeNationalIdentityNumberValue BSN = new EmployeeNationalIdentityNumberValue("bsn");
    public static final EmployeeNationalIdentityNumberValue MID = new EmployeeNationalIdentityNumberValue("mid");
    public static final EmployeeNationalIdentityNumberValue SSS = new EmployeeNationalIdentityNumberValue("sss");
    public static final EmployeeNationalIdentityNumberValue NIE = new EmployeeNationalIdentityNumberValue("nie");
    public static final EmployeeNationalIdentityNumberValue NSS = new EmployeeNationalIdentityNumberValue("nss");
    public static final EmployeeNationalIdentityNumberValue ARC = new EmployeeNationalIdentityNumberValue("arc");
    public static final EmployeeNationalIdentityNumberValue CURP = new EmployeeNationalIdentityNumberValue("curp");
    public static final EmployeeNationalIdentityNumberValue IMSS = new EmployeeNationalIdentityNumberValue("imss");
    public static final EmployeeNationalIdentityNumberValue RFC = new EmployeeNationalIdentityNumberValue("rfc");
    public static final EmployeeNationalIdentityNumberValue EIN = new EmployeeNationalIdentityNumberValue("ein");
    public static final EmployeeNationalIdentityNumberValue OTHER = new EmployeeNationalIdentityNumberValue("other");
    public static final EmployeeNationalIdentityNumberValue UNKNOWN = new EmployeeNationalIdentityNumberValue("unknown");
    public static final EmployeeNationalIdentityNumberValue UNMAPPED_VALUE = new EmployeeNationalIdentityNumberValue("unmapped_value");

    // This map will grow whenever a Color gets created with a new
    // unrecognized value (a potential memory leak if the user is not
    // careful). Keep this field lower case to avoid clashing with
    // generated member names which will always be upper cased (Java
    // convention)
    private static final Map<String, EmployeeNationalIdentityNumberValue> values = createValuesMap();
    private static final Map<String, EmployeeNationalIdentityNumberValueEnum> enums = createEnumsMap();

    private final String value;

    private EmployeeNationalIdentityNumberValue(String value) {
        this.value = value;
    }

    /**
     * Returns a EmployeeNationalIdentityNumberValue with the given value. For a specific value the 
     * returned object will always be a singleton so reference equality 
     * is satisfied when the values are the same.
     * 
     * @param value value to be wrapped as EmployeeNationalIdentityNumberValue
     */ 
    public static EmployeeNationalIdentityNumberValue of(String value) {
        synchronized (EmployeeNationalIdentityNumberValue.class) {
            return values.computeIfAbsent(value, v -> new EmployeeNationalIdentityNumberValue(v));
        }
    }

    public String value() {
        return value;
    }

    public Optional<EmployeeNationalIdentityNumberValueEnum> asEnum() {
        return Optional.ofNullable(enums.getOrDefault(value, null));
    }

    public boolean isKnown() {
        return asEnum().isPresent();
    }

    @Override
    public int hashCode() {
        return Objects.hash(value);
    }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        EmployeeNationalIdentityNumberValue other = (EmployeeNationalIdentityNumberValue) obj;
        return Objects.equals(value, other.value);
    }

    @Override
    public String toString() {
        return "EmployeeNationalIdentityNumberValue [value=" + value + "]";
    }

    // return an array just like an enum
    public static EmployeeNationalIdentityNumberValue[] values() {
        synchronized (EmployeeNationalIdentityNumberValue.class) {
            return values.values().toArray(new EmployeeNationalIdentityNumberValue[] {});
        }
    }

    private static final Map<String, EmployeeNationalIdentityNumberValue> createValuesMap() {
        Map<String, EmployeeNationalIdentityNumberValue> map = new LinkedHashMap<>();
        map.put("ssn", SSN);
        map.put("nin", NIN);
        map.put("sin", SIN);
        map.put("nid", NID);
        map.put("pin", PIN);
        map.put("pn", PN);
        map.put("umcn", UMCN);
        map.put("pic", PIC);
        map.put("ric", RIC);
        map.put("idnum", IDNUM);
        map.put("cid", CID);
        map.put("nidnr", NIDNR);
        map.put("pan", PAN);
        map.put("aadhaar", AADHAAR);
        map.put("epic", EPIC);
        map.put("ptn", PTN);
        map.put("itin", ITIN);
        map.put("tin", TIN);
        map.put("uprc", UPRC);
        map.put("pcode", PCODE);
        map.put("ssi", SSI);
        map.put("cedula", CEDULA);
        map.put("passport", PASSPORT);
        map.put("voterid", VOTERID);
        map.put("ntin", NTIN);
        map.put("bn", BN);
        map.put("fnr", FNR);
        map.put("mva", MVA);
        map.put("civil_id", CIVIL_ID);
        map.put("cnic", CNIC);
        map.put("nric", NRIC);
        map.put("fin", FIN);
        map.put("uen", UEN);
        map.put("registrationnumber", REGISTRATIONNUMBER);
        map.put("nic", NIC);
        map.put("personnummer", PERSONNUMMER);
        map.put("ahv", AHV);
        map.put("id", ID);
        map.put("eid", EID);
        map.put("va", VA);
        map.put("pid", PID);
        map.put("nrt", NRT);
        map.put("nipt", NIPT);
        map.put("cbu", CBU);
        map.put("cuit", CUIT);
        map.put("dni", DNI);
        map.put("businessid", BUSINESSID);
        map.put("vnr", VNR);
        map.put("abn", ABN);
        map.put("acn", ACN);
        map.put("tfn", TFN);
        map.put("jmbg", JMBG);
        map.put("bis", BIS);
        map.put("insz", INSZ);
        map.put("nn", NN);
        map.put("egn", EGN);
        map.put("pnf", PNF);
        map.put("vat", VAT);
        map.put("cnpj", CNPJ);
        map.put("unp", UNP);
        map.put("gst", GST);
        map.put("pst", PST);
        map.put("qst", QST);
        map.put("ni", NI);
        map.put("dic", DIC);
        map.put("rc", RC);
        map.put("uid", UID);
        map.put("rut", RUT);
        map.put("uscc", USCC);
        map.put("cpf", CPF);
        map.put("cpj", CPJ);
        map.put("cr", CR);
        map.put("stnr", STNR);
        map.put("svnr", SVNR);
        map.put("ncf", NCF);
        map.put("rnc", RNC);
        map.put("nif", NIF);
        map.put("ci", CI);
        map.put("ik", IK);
        map.put("kmkr", KMKR);
        map.put("registrikood", REGISTRIKOOD);
        map.put("tn", TN);
        map.put("ruc", RUC);
        map.put("nit", NIT);
        map.put("alv", ALV);
        map.put("hetu", HETU);
        map.put("ytunnus", YTUNNUS);
        map.put("vn", VN);
        map.put("utr", UTR);
        map.put("nifp", NIFP);
        map.put("amka", AMKA);
        map.put("cui", CUI);
        map.put("nir", NIR);
        map.put("siren", SIREN);
        map.put("siret", SIRET);
        map.put("tva", TVA);
        map.put("oib", OIB);
        map.put("hkid", HKID);
        map.put("anum", ANUM);
        map.put("kennitala", KENNITALA);
        map.put("vsk", VSK);
        map.put("npwp", NPWP);
        map.put("pps", PPS);
        map.put("gstin", GSTIN);
        map.put("idnr", IDNR);
        map.put("hr", HR);
        map.put("aic", AIC);
        map.put("codicefiscale", CODICEFISCALE);
        map.put("iva", IVA);
        map.put("peid", PEID);
        map.put("asmens", ASMENS);
        map.put("pvm", PVM);
        map.put("ctps", CTPS);
        map.put("vrn", VRN);
        map.put("vtk", VTK);
        map.put("int", INT);
        map.put("tk", TK);
        map.put("pas", PAS);
        map.put("rne", RNE);
        map.put("rg", RG);
        map.put("nci", NCI);
        map.put("crnm", CRNM);
        map.put("pis", PIS);
        map.put("insee", INSEE);
        map.put("tax", TAX);
        map.put("mpf", MPF);
        map.put("epfo", EPFO);
        map.put("esi", ESI);
        map.put("pran", PRAN);
        map.put("uan", UAN);
        map.put("idk", IDK);
        map.put("bsn", BSN);
        map.put("mid", MID);
        map.put("sss", SSS);
        map.put("nie", NIE);
        map.put("nss", NSS);
        map.put("arc", ARC);
        map.put("curp", CURP);
        map.put("imss", IMSS);
        map.put("rfc", RFC);
        map.put("ein", EIN);
        map.put("other", OTHER);
        map.put("unknown", UNKNOWN);
        map.put("unmapped_value", UNMAPPED_VALUE);
        return map;
    }

    private static final Map<String, EmployeeNationalIdentityNumberValueEnum> createEnumsMap() {
        Map<String, EmployeeNationalIdentityNumberValueEnum> map = new HashMap<>();
        map.put("ssn", EmployeeNationalIdentityNumberValueEnum.SSN);
        map.put("nin", EmployeeNationalIdentityNumberValueEnum.NIN);
        map.put("sin", EmployeeNationalIdentityNumberValueEnum.SIN);
        map.put("nid", EmployeeNationalIdentityNumberValueEnum.NID);
        map.put("pin", EmployeeNationalIdentityNumberValueEnum.PIN);
        map.put("pn", EmployeeNationalIdentityNumberValueEnum.PN);
        map.put("umcn", EmployeeNationalIdentityNumberValueEnum.UMCN);
        map.put("pic", EmployeeNationalIdentityNumberValueEnum.PIC);
        map.put("ric", EmployeeNationalIdentityNumberValueEnum.RIC);
        map.put("idnum", EmployeeNationalIdentityNumberValueEnum.IDNUM);
        map.put("cid", EmployeeNationalIdentityNumberValueEnum.CID);
        map.put("nidnr", EmployeeNationalIdentityNumberValueEnum.NIDNR);
        map.put("pan", EmployeeNationalIdentityNumberValueEnum.PAN);
        map.put("aadhaar", EmployeeNationalIdentityNumberValueEnum.AADHAAR);
        map.put("epic", EmployeeNationalIdentityNumberValueEnum.EPIC);
        map.put("ptn", EmployeeNationalIdentityNumberValueEnum.PTN);
        map.put("itin", EmployeeNationalIdentityNumberValueEnum.ITIN);
        map.put("tin", EmployeeNationalIdentityNumberValueEnum.TIN);
        map.put("uprc", EmployeeNationalIdentityNumberValueEnum.UPRC);
        map.put("pcode", EmployeeNationalIdentityNumberValueEnum.PCODE);
        map.put("ssi", EmployeeNationalIdentityNumberValueEnum.SSI);
        map.put("cedula", EmployeeNationalIdentityNumberValueEnum.CEDULA);
        map.put("passport", EmployeeNationalIdentityNumberValueEnum.PASSPORT);
        map.put("voterid", EmployeeNationalIdentityNumberValueEnum.VOTERID);
        map.put("ntin", EmployeeNationalIdentityNumberValueEnum.NTIN);
        map.put("bn", EmployeeNationalIdentityNumberValueEnum.BN);
        map.put("fnr", EmployeeNationalIdentityNumberValueEnum.FNR);
        map.put("mva", EmployeeNationalIdentityNumberValueEnum.MVA);
        map.put("civil_id", EmployeeNationalIdentityNumberValueEnum.CIVIL_ID);
        map.put("cnic", EmployeeNationalIdentityNumberValueEnum.CNIC);
        map.put("nric", EmployeeNationalIdentityNumberValueEnum.NRIC);
        map.put("fin", EmployeeNationalIdentityNumberValueEnum.FIN);
        map.put("uen", EmployeeNationalIdentityNumberValueEnum.UEN);
        map.put("registrationnumber", EmployeeNationalIdentityNumberValueEnum.REGISTRATIONNUMBER);
        map.put("nic", EmployeeNationalIdentityNumberValueEnum.NIC);
        map.put("personnummer", EmployeeNationalIdentityNumberValueEnum.PERSONNUMMER);
        map.put("ahv", EmployeeNationalIdentityNumberValueEnum.AHV);
        map.put("id", EmployeeNationalIdentityNumberValueEnum.ID);
        map.put("eid", EmployeeNationalIdentityNumberValueEnum.EID);
        map.put("va", EmployeeNationalIdentityNumberValueEnum.VA);
        map.put("pid", EmployeeNationalIdentityNumberValueEnum.PID);
        map.put("nrt", EmployeeNationalIdentityNumberValueEnum.NRT);
        map.put("nipt", EmployeeNationalIdentityNumberValueEnum.NIPT);
        map.put("cbu", EmployeeNationalIdentityNumberValueEnum.CBU);
        map.put("cuit", EmployeeNationalIdentityNumberValueEnum.CUIT);
        map.put("dni", EmployeeNationalIdentityNumberValueEnum.DNI);
        map.put("businessid", EmployeeNationalIdentityNumberValueEnum.BUSINESSID);
        map.put("vnr", EmployeeNationalIdentityNumberValueEnum.VNR);
        map.put("abn", EmployeeNationalIdentityNumberValueEnum.ABN);
        map.put("acn", EmployeeNationalIdentityNumberValueEnum.ACN);
        map.put("tfn", EmployeeNationalIdentityNumberValueEnum.TFN);
        map.put("jmbg", EmployeeNationalIdentityNumberValueEnum.JMBG);
        map.put("bis", EmployeeNationalIdentityNumberValueEnum.BIS);
        map.put("insz", EmployeeNationalIdentityNumberValueEnum.INSZ);
        map.put("nn", EmployeeNationalIdentityNumberValueEnum.NN);
        map.put("egn", EmployeeNationalIdentityNumberValueEnum.EGN);
        map.put("pnf", EmployeeNationalIdentityNumberValueEnum.PNF);
        map.put("vat", EmployeeNationalIdentityNumberValueEnum.VAT);
        map.put("cnpj", EmployeeNationalIdentityNumberValueEnum.CNPJ);
        map.put("unp", EmployeeNationalIdentityNumberValueEnum.UNP);
        map.put("gst", EmployeeNationalIdentityNumberValueEnum.GST);
        map.put("pst", EmployeeNationalIdentityNumberValueEnum.PST);
        map.put("qst", EmployeeNationalIdentityNumberValueEnum.QST);
        map.put("ni", EmployeeNationalIdentityNumberValueEnum.NI);
        map.put("dic", EmployeeNationalIdentityNumberValueEnum.DIC);
        map.put("rc", EmployeeNationalIdentityNumberValueEnum.RC);
        map.put("uid", EmployeeNationalIdentityNumberValueEnum.UID);
        map.put("rut", EmployeeNationalIdentityNumberValueEnum.RUT);
        map.put("uscc", EmployeeNationalIdentityNumberValueEnum.USCC);
        map.put("cpf", EmployeeNationalIdentityNumberValueEnum.CPF);
        map.put("cpj", EmployeeNationalIdentityNumberValueEnum.CPJ);
        map.put("cr", EmployeeNationalIdentityNumberValueEnum.CR);
        map.put("stnr", EmployeeNationalIdentityNumberValueEnum.STNR);
        map.put("svnr", EmployeeNationalIdentityNumberValueEnum.SVNR);
        map.put("ncf", EmployeeNationalIdentityNumberValueEnum.NCF);
        map.put("rnc", EmployeeNationalIdentityNumberValueEnum.RNC);
        map.put("nif", EmployeeNationalIdentityNumberValueEnum.NIF);
        map.put("ci", EmployeeNationalIdentityNumberValueEnum.CI);
        map.put("ik", EmployeeNationalIdentityNumberValueEnum.IK);
        map.put("kmkr", EmployeeNationalIdentityNumberValueEnum.KMKR);
        map.put("registrikood", EmployeeNationalIdentityNumberValueEnum.REGISTRIKOOD);
        map.put("tn", EmployeeNationalIdentityNumberValueEnum.TN);
        map.put("ruc", EmployeeNationalIdentityNumberValueEnum.RUC);
        map.put("nit", EmployeeNationalIdentityNumberValueEnum.NIT);
        map.put("alv", EmployeeNationalIdentityNumberValueEnum.ALV);
        map.put("hetu", EmployeeNationalIdentityNumberValueEnum.HETU);
        map.put("ytunnus", EmployeeNationalIdentityNumberValueEnum.YTUNNUS);
        map.put("vn", EmployeeNationalIdentityNumberValueEnum.VN);
        map.put("utr", EmployeeNationalIdentityNumberValueEnum.UTR);
        map.put("nifp", EmployeeNationalIdentityNumberValueEnum.NIFP);
        map.put("amka", EmployeeNationalIdentityNumberValueEnum.AMKA);
        map.put("cui", EmployeeNationalIdentityNumberValueEnum.CUI);
        map.put("nir", EmployeeNationalIdentityNumberValueEnum.NIR);
        map.put("siren", EmployeeNationalIdentityNumberValueEnum.SIREN);
        map.put("siret", EmployeeNationalIdentityNumberValueEnum.SIRET);
        map.put("tva", EmployeeNationalIdentityNumberValueEnum.TVA);
        map.put("oib", EmployeeNationalIdentityNumberValueEnum.OIB);
        map.put("hkid", EmployeeNationalIdentityNumberValueEnum.HKID);
        map.put("anum", EmployeeNationalIdentityNumberValueEnum.ANUM);
        map.put("kennitala", EmployeeNationalIdentityNumberValueEnum.KENNITALA);
        map.put("vsk", EmployeeNationalIdentityNumberValueEnum.VSK);
        map.put("npwp", EmployeeNationalIdentityNumberValueEnum.NPWP);
        map.put("pps", EmployeeNationalIdentityNumberValueEnum.PPS);
        map.put("gstin", EmployeeNationalIdentityNumberValueEnum.GSTIN);
        map.put("idnr", EmployeeNationalIdentityNumberValueEnum.IDNR);
        map.put("hr", EmployeeNationalIdentityNumberValueEnum.HR);
        map.put("aic", EmployeeNationalIdentityNumberValueEnum.AIC);
        map.put("codicefiscale", EmployeeNationalIdentityNumberValueEnum.CODICEFISCALE);
        map.put("iva", EmployeeNationalIdentityNumberValueEnum.IVA);
        map.put("peid", EmployeeNationalIdentityNumberValueEnum.PEID);
        map.put("asmens", EmployeeNationalIdentityNumberValueEnum.ASMENS);
        map.put("pvm", EmployeeNationalIdentityNumberValueEnum.PVM);
        map.put("ctps", EmployeeNationalIdentityNumberValueEnum.CTPS);
        map.put("vrn", EmployeeNationalIdentityNumberValueEnum.VRN);
        map.put("vtk", EmployeeNationalIdentityNumberValueEnum.VTK);
        map.put("int", EmployeeNationalIdentityNumberValueEnum.INT);
        map.put("tk", EmployeeNationalIdentityNumberValueEnum.TK);
        map.put("pas", EmployeeNationalIdentityNumberValueEnum.PAS);
        map.put("rne", EmployeeNationalIdentityNumberValueEnum.RNE);
        map.put("rg", EmployeeNationalIdentityNumberValueEnum.RG);
        map.put("nci", EmployeeNationalIdentityNumberValueEnum.NCI);
        map.put("crnm", EmployeeNationalIdentityNumberValueEnum.CRNM);
        map.put("pis", EmployeeNationalIdentityNumberValueEnum.PIS);
        map.put("insee", EmployeeNationalIdentityNumberValueEnum.INSEE);
        map.put("tax", EmployeeNationalIdentityNumberValueEnum.TAX);
        map.put("mpf", EmployeeNationalIdentityNumberValueEnum.MPF);
        map.put("epfo", EmployeeNationalIdentityNumberValueEnum.EPFO);
        map.put("esi", EmployeeNationalIdentityNumberValueEnum.ESI);
        map.put("pran", EmployeeNationalIdentityNumberValueEnum.PRAN);
        map.put("uan", EmployeeNationalIdentityNumberValueEnum.UAN);
        map.put("idk", EmployeeNationalIdentityNumberValueEnum.IDK);
        map.put("bsn", EmployeeNationalIdentityNumberValueEnum.BSN);
        map.put("mid", EmployeeNationalIdentityNumberValueEnum.MID);
        map.put("sss", EmployeeNationalIdentityNumberValueEnum.SSS);
        map.put("nie", EmployeeNationalIdentityNumberValueEnum.NIE);
        map.put("nss", EmployeeNationalIdentityNumberValueEnum.NSS);
        map.put("arc", EmployeeNationalIdentityNumberValueEnum.ARC);
        map.put("curp", EmployeeNationalIdentityNumberValueEnum.CURP);
        map.put("imss", EmployeeNationalIdentityNumberValueEnum.IMSS);
        map.put("rfc", EmployeeNationalIdentityNumberValueEnum.RFC);
        map.put("ein", EmployeeNationalIdentityNumberValueEnum.EIN);
        map.put("other", EmployeeNationalIdentityNumberValueEnum.OTHER);
        map.put("unknown", EmployeeNationalIdentityNumberValueEnum.UNKNOWN);
        map.put("unmapped_value", EmployeeNationalIdentityNumberValueEnum.UNMAPPED_VALUE);
        return map;
    }
    
    @SuppressWarnings("serial")
    public static final class _Serializer extends StdSerializer<EmployeeNationalIdentityNumberValue> {

        protected _Serializer() {
            super(EmployeeNationalIdentityNumberValue.class);
        }

        @Override
        public void serialize(EmployeeNationalIdentityNumberValue value, JsonGenerator g, SerializerProvider provider)
                throws IOException, JsonProcessingException {
            g.writeObject(value.value);
        }
    }

    @SuppressWarnings("serial")
    public static final class _Deserializer extends StdDeserializer<EmployeeNationalIdentityNumberValue> {

        protected _Deserializer() {
            super(EmployeeNationalIdentityNumberValue.class);
        }

        @Override
        public EmployeeNationalIdentityNumberValue deserialize(JsonParser p, DeserializationContext ctxt)
                throws IOException, JacksonException {
            String v = p.readValueAs(new TypeReference<String>() {});
            // use the factory method to ensure we get singletons
            return EmployeeNationalIdentityNumberValue.of(v);
        }
    }
    
    public enum EmployeeNationalIdentityNumberValueEnum {

        SSN("ssn"),
        NIN("nin"),
        SIN("sin"),
        NID("nid"),
        PIN("pin"),
        PN("pn"),
        UMCN("umcn"),
        PIC("pic"),
        RIC("ric"),
        IDNUM("idnum"),
        CID("cid"),
        NIDNR("nidnr"),
        PAN("pan"),
        AADHAAR("aadhaar"),
        EPIC("epic"),
        PTN("ptn"),
        ITIN("itin"),
        TIN("tin"),
        UPRC("uprc"),
        PCODE("pcode"),
        SSI("ssi"),
        CEDULA("cedula"),
        PASSPORT("passport"),
        VOTERID("voterid"),
        NTIN("ntin"),
        BN("bn"),
        FNR("fnr"),
        MVA("mva"),
        CIVIL_ID("civil_id"),
        CNIC("cnic"),
        NRIC("nric"),
        FIN("fin"),
        UEN("uen"),
        REGISTRATIONNUMBER("registrationnumber"),
        NIC("nic"),
        PERSONNUMMER("personnummer"),
        AHV("ahv"),
        ID("id"),
        EID("eid"),
        VA("va"),
        PID("pid"),
        NRT("nrt"),
        NIPT("nipt"),
        CBU("cbu"),
        CUIT("cuit"),
        DNI("dni"),
        BUSINESSID("businessid"),
        VNR("vnr"),
        ABN("abn"),
        ACN("acn"),
        TFN("tfn"),
        JMBG("jmbg"),
        BIS("bis"),
        INSZ("insz"),
        NN("nn"),
        EGN("egn"),
        PNF("pnf"),
        VAT("vat"),
        CNPJ("cnpj"),
        UNP("unp"),
        GST("gst"),
        PST("pst"),
        QST("qst"),
        NI("ni"),
        DIC("dic"),
        RC("rc"),
        UID("uid"),
        RUT("rut"),
        USCC("uscc"),
        CPF("cpf"),
        CPJ("cpj"),
        CR("cr"),
        STNR("stnr"),
        SVNR("svnr"),
        NCF("ncf"),
        RNC("rnc"),
        NIF("nif"),
        CI("ci"),
        IK("ik"),
        KMKR("kmkr"),
        REGISTRIKOOD("registrikood"),
        TN("tn"),
        RUC("ruc"),
        NIT("nit"),
        ALV("alv"),
        HETU("hetu"),
        YTUNNUS("ytunnus"),
        VN("vn"),
        UTR("utr"),
        NIFP("nifp"),
        AMKA("amka"),
        CUI("cui"),
        NIR("nir"),
        SIREN("siren"),
        SIRET("siret"),
        TVA("tva"),
        OIB("oib"),
        HKID("hkid"),
        ANUM("anum"),
        KENNITALA("kennitala"),
        VSK("vsk"),
        NPWP("npwp"),
        PPS("pps"),
        GSTIN("gstin"),
        IDNR("idnr"),
        HR("hr"),
        AIC("aic"),
        CODICEFISCALE("codicefiscale"),
        IVA("iva"),
        PEID("peid"),
        ASMENS("asmens"),
        PVM("pvm"),
        CTPS("ctps"),
        VRN("vrn"),
        VTK("vtk"),
        INT("int"),
        TK("tk"),
        PAS("pas"),
        RNE("rne"),
        RG("rg"),
        NCI("nci"),
        CRNM("crnm"),
        PIS("pis"),
        INSEE("insee"),
        TAX("tax"),
        MPF("mpf"),
        EPFO("epfo"),
        ESI("esi"),
        PRAN("pran"),
        UAN("uan"),
        IDK("idk"),
        BSN("bsn"),
        MID("mid"),
        SSS("sss"),
        NIE("nie"),
        NSS("nss"),
        ARC("arc"),
        CURP("curp"),
        IMSS("imss"),
        RFC("rfc"),
        EIN("ein"),
        OTHER("other"),
        UNKNOWN("unknown"),
        UNMAPPED_VALUE("unmapped_value"),;

        private final String value;

        private EmployeeNationalIdentityNumberValueEnum(String value) {
            this.value = value;
        }

        public String value() {
            return value;
        }
    }
}

