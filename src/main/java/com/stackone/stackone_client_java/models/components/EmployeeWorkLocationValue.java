/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.stackone.stackone_client_java.models.components;
import com.fasterxml.jackson.core.JacksonException;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;


/**
 * <p>Wrapper class for an "open" enum. "Open" enums are those that are expected
 * to evolve (particularly with the addition of enum members over time). If an
 * open enum is used then the appearance of unexpected enum values (say in a 
 * response from an updated an API) will not bring about a runtime error thus 
 * ensuring that non-updated client versions can continue to work without error.
 *
 * <p>Note that instances are immutable and are singletons (an internal thread-safe
 * cache is maintained to ensure that). As a consequence instances created with the 
 * same value will satisfy reference equality (via {@code ==}).
 * 
 * <p>This class is intended to emulate an enum (in terms of common usage and with 
 * reference equality) but with the ability to carry unknown values. Unfortunately
 * Java does not permit the use of an instance in a switch expression but you can 
 * use the {@code asEnum()} method (after dealing with the `Optional` appropriately).
 *
 */
/**
 * EmployeeWorkLocationValue - The ISO3166-1 Alpha2 Code of the Country
 */
@JsonDeserialize(using = EmployeeWorkLocationValue._Deserializer.class)
@JsonSerialize(using = EmployeeWorkLocationValue._Serializer.class)
public class EmployeeWorkLocationValue {

    public static final EmployeeWorkLocationValue AF = new EmployeeWorkLocationValue("AF");
    public static final EmployeeWorkLocationValue AL = new EmployeeWorkLocationValue("AL");
    public static final EmployeeWorkLocationValue DZ = new EmployeeWorkLocationValue("DZ");
    public static final EmployeeWorkLocationValue AS = new EmployeeWorkLocationValue("AS");
    public static final EmployeeWorkLocationValue AD = new EmployeeWorkLocationValue("AD");
    public static final EmployeeWorkLocationValue AO = new EmployeeWorkLocationValue("AO");
    public static final EmployeeWorkLocationValue AI = new EmployeeWorkLocationValue("AI");
    public static final EmployeeWorkLocationValue AQ = new EmployeeWorkLocationValue("AQ");
    public static final EmployeeWorkLocationValue AG = new EmployeeWorkLocationValue("AG");
    public static final EmployeeWorkLocationValue AR = new EmployeeWorkLocationValue("AR");
    public static final EmployeeWorkLocationValue AM = new EmployeeWorkLocationValue("AM");
    public static final EmployeeWorkLocationValue AW = new EmployeeWorkLocationValue("AW");
    public static final EmployeeWorkLocationValue AU = new EmployeeWorkLocationValue("AU");
    public static final EmployeeWorkLocationValue AT = new EmployeeWorkLocationValue("AT");
    public static final EmployeeWorkLocationValue AZ = new EmployeeWorkLocationValue("AZ");
    public static final EmployeeWorkLocationValue BS = new EmployeeWorkLocationValue("BS");
    public static final EmployeeWorkLocationValue BH = new EmployeeWorkLocationValue("BH");
    public static final EmployeeWorkLocationValue BD = new EmployeeWorkLocationValue("BD");
    public static final EmployeeWorkLocationValue BB = new EmployeeWorkLocationValue("BB");
    public static final EmployeeWorkLocationValue BY = new EmployeeWorkLocationValue("BY");
    public static final EmployeeWorkLocationValue BE = new EmployeeWorkLocationValue("BE");
    public static final EmployeeWorkLocationValue BZ = new EmployeeWorkLocationValue("BZ");
    public static final EmployeeWorkLocationValue BJ = new EmployeeWorkLocationValue("BJ");
    public static final EmployeeWorkLocationValue BM = new EmployeeWorkLocationValue("BM");
    public static final EmployeeWorkLocationValue BT = new EmployeeWorkLocationValue("BT");
    public static final EmployeeWorkLocationValue BO = new EmployeeWorkLocationValue("BO");
    public static final EmployeeWorkLocationValue BQ = new EmployeeWorkLocationValue("BQ");
    public static final EmployeeWorkLocationValue BA = new EmployeeWorkLocationValue("BA");
    public static final EmployeeWorkLocationValue BW = new EmployeeWorkLocationValue("BW");
    public static final EmployeeWorkLocationValue BV = new EmployeeWorkLocationValue("BV");
    public static final EmployeeWorkLocationValue BR = new EmployeeWorkLocationValue("BR");
    public static final EmployeeWorkLocationValue IO = new EmployeeWorkLocationValue("IO");
    public static final EmployeeWorkLocationValue BN = new EmployeeWorkLocationValue("BN");
    public static final EmployeeWorkLocationValue BG = new EmployeeWorkLocationValue("BG");
    public static final EmployeeWorkLocationValue BF = new EmployeeWorkLocationValue("BF");
    public static final EmployeeWorkLocationValue BI = new EmployeeWorkLocationValue("BI");
    public static final EmployeeWorkLocationValue KH = new EmployeeWorkLocationValue("KH");
    public static final EmployeeWorkLocationValue CM = new EmployeeWorkLocationValue("CM");
    public static final EmployeeWorkLocationValue CA = new EmployeeWorkLocationValue("CA");
    public static final EmployeeWorkLocationValue CV = new EmployeeWorkLocationValue("CV");
    public static final EmployeeWorkLocationValue KY = new EmployeeWorkLocationValue("KY");
    public static final EmployeeWorkLocationValue CF = new EmployeeWorkLocationValue("CF");
    public static final EmployeeWorkLocationValue TD = new EmployeeWorkLocationValue("TD");
    public static final EmployeeWorkLocationValue CL = new EmployeeWorkLocationValue("CL");
    public static final EmployeeWorkLocationValue CN = new EmployeeWorkLocationValue("CN");
    public static final EmployeeWorkLocationValue CX = new EmployeeWorkLocationValue("CX");
    public static final EmployeeWorkLocationValue CC = new EmployeeWorkLocationValue("CC");
    public static final EmployeeWorkLocationValue CO = new EmployeeWorkLocationValue("CO");
    public static final EmployeeWorkLocationValue KM = new EmployeeWorkLocationValue("KM");
    public static final EmployeeWorkLocationValue CG = new EmployeeWorkLocationValue("CG");
    public static final EmployeeWorkLocationValue CD = new EmployeeWorkLocationValue("CD");
    public static final EmployeeWorkLocationValue CK = new EmployeeWorkLocationValue("CK");
    public static final EmployeeWorkLocationValue CR = new EmployeeWorkLocationValue("CR");
    public static final EmployeeWorkLocationValue HR = new EmployeeWorkLocationValue("HR");
    public static final EmployeeWorkLocationValue CU = new EmployeeWorkLocationValue("CU");
    public static final EmployeeWorkLocationValue CW = new EmployeeWorkLocationValue("CW");
    public static final EmployeeWorkLocationValue CY = new EmployeeWorkLocationValue("CY");
    public static final EmployeeWorkLocationValue CZ = new EmployeeWorkLocationValue("CZ");
    public static final EmployeeWorkLocationValue CI = new EmployeeWorkLocationValue("CI");
    public static final EmployeeWorkLocationValue DK = new EmployeeWorkLocationValue("DK");
    public static final EmployeeWorkLocationValue DJ = new EmployeeWorkLocationValue("DJ");
    public static final EmployeeWorkLocationValue DM = new EmployeeWorkLocationValue("DM");
    public static final EmployeeWorkLocationValue DO = new EmployeeWorkLocationValue("DO");
    public static final EmployeeWorkLocationValue EC = new EmployeeWorkLocationValue("EC");
    public static final EmployeeWorkLocationValue EG = new EmployeeWorkLocationValue("EG");
    public static final EmployeeWorkLocationValue SV = new EmployeeWorkLocationValue("SV");
    public static final EmployeeWorkLocationValue GQ = new EmployeeWorkLocationValue("GQ");
    public static final EmployeeWorkLocationValue ER = new EmployeeWorkLocationValue("ER");
    public static final EmployeeWorkLocationValue EE = new EmployeeWorkLocationValue("EE");
    public static final EmployeeWorkLocationValue ET = new EmployeeWorkLocationValue("ET");
    public static final EmployeeWorkLocationValue FK = new EmployeeWorkLocationValue("FK");
    public static final EmployeeWorkLocationValue FO = new EmployeeWorkLocationValue("FO");
    public static final EmployeeWorkLocationValue FJ = new EmployeeWorkLocationValue("FJ");
    public static final EmployeeWorkLocationValue FI = new EmployeeWorkLocationValue("FI");
    public static final EmployeeWorkLocationValue FR = new EmployeeWorkLocationValue("FR");
    public static final EmployeeWorkLocationValue GF = new EmployeeWorkLocationValue("GF");
    public static final EmployeeWorkLocationValue PF = new EmployeeWorkLocationValue("PF");
    public static final EmployeeWorkLocationValue TF = new EmployeeWorkLocationValue("TF");
    public static final EmployeeWorkLocationValue GA = new EmployeeWorkLocationValue("GA");
    public static final EmployeeWorkLocationValue GM = new EmployeeWorkLocationValue("GM");
    public static final EmployeeWorkLocationValue GE = new EmployeeWorkLocationValue("GE");
    public static final EmployeeWorkLocationValue DE = new EmployeeWorkLocationValue("DE");
    public static final EmployeeWorkLocationValue GH = new EmployeeWorkLocationValue("GH");
    public static final EmployeeWorkLocationValue GI = new EmployeeWorkLocationValue("GI");
    public static final EmployeeWorkLocationValue GR = new EmployeeWorkLocationValue("GR");
    public static final EmployeeWorkLocationValue GL = new EmployeeWorkLocationValue("GL");
    public static final EmployeeWorkLocationValue GD = new EmployeeWorkLocationValue("GD");
    public static final EmployeeWorkLocationValue GP = new EmployeeWorkLocationValue("GP");
    public static final EmployeeWorkLocationValue GU = new EmployeeWorkLocationValue("GU");
    public static final EmployeeWorkLocationValue GT = new EmployeeWorkLocationValue("GT");
    public static final EmployeeWorkLocationValue GG = new EmployeeWorkLocationValue("GG");
    public static final EmployeeWorkLocationValue GN = new EmployeeWorkLocationValue("GN");
    public static final EmployeeWorkLocationValue GW = new EmployeeWorkLocationValue("GW");
    public static final EmployeeWorkLocationValue GY = new EmployeeWorkLocationValue("GY");
    public static final EmployeeWorkLocationValue HT = new EmployeeWorkLocationValue("HT");
    public static final EmployeeWorkLocationValue HM = new EmployeeWorkLocationValue("HM");
    public static final EmployeeWorkLocationValue VA = new EmployeeWorkLocationValue("VA");
    public static final EmployeeWorkLocationValue HN = new EmployeeWorkLocationValue("HN");
    public static final EmployeeWorkLocationValue HK = new EmployeeWorkLocationValue("HK");
    public static final EmployeeWorkLocationValue HU = new EmployeeWorkLocationValue("HU");
    public static final EmployeeWorkLocationValue IS = new EmployeeWorkLocationValue("IS");
    public static final EmployeeWorkLocationValue IN = new EmployeeWorkLocationValue("IN");
    public static final EmployeeWorkLocationValue ID = new EmployeeWorkLocationValue("ID");
    public static final EmployeeWorkLocationValue IR = new EmployeeWorkLocationValue("IR");
    public static final EmployeeWorkLocationValue IQ = new EmployeeWorkLocationValue("IQ");
    public static final EmployeeWorkLocationValue IE = new EmployeeWorkLocationValue("IE");
    public static final EmployeeWorkLocationValue IM = new EmployeeWorkLocationValue("IM");
    public static final EmployeeWorkLocationValue IL = new EmployeeWorkLocationValue("IL");
    public static final EmployeeWorkLocationValue IT = new EmployeeWorkLocationValue("IT");
    public static final EmployeeWorkLocationValue JM = new EmployeeWorkLocationValue("JM");
    public static final EmployeeWorkLocationValue JP = new EmployeeWorkLocationValue("JP");
    public static final EmployeeWorkLocationValue JE = new EmployeeWorkLocationValue("JE");
    public static final EmployeeWorkLocationValue JO = new EmployeeWorkLocationValue("JO");
    public static final EmployeeWorkLocationValue KZ = new EmployeeWorkLocationValue("KZ");
    public static final EmployeeWorkLocationValue KE = new EmployeeWorkLocationValue("KE");
    public static final EmployeeWorkLocationValue KI = new EmployeeWorkLocationValue("KI");
    public static final EmployeeWorkLocationValue KP = new EmployeeWorkLocationValue("KP");
    public static final EmployeeWorkLocationValue KR = new EmployeeWorkLocationValue("KR");
    public static final EmployeeWorkLocationValue KW = new EmployeeWorkLocationValue("KW");
    public static final EmployeeWorkLocationValue KG = new EmployeeWorkLocationValue("KG");
    public static final EmployeeWorkLocationValue LA = new EmployeeWorkLocationValue("LA");
    public static final EmployeeWorkLocationValue LV = new EmployeeWorkLocationValue("LV");
    public static final EmployeeWorkLocationValue LB = new EmployeeWorkLocationValue("LB");
    public static final EmployeeWorkLocationValue LS = new EmployeeWorkLocationValue("LS");
    public static final EmployeeWorkLocationValue LR = new EmployeeWorkLocationValue("LR");
    public static final EmployeeWorkLocationValue LY = new EmployeeWorkLocationValue("LY");
    public static final EmployeeWorkLocationValue LI = new EmployeeWorkLocationValue("LI");
    public static final EmployeeWorkLocationValue LT = new EmployeeWorkLocationValue("LT");
    public static final EmployeeWorkLocationValue LU = new EmployeeWorkLocationValue("LU");
    public static final EmployeeWorkLocationValue MO = new EmployeeWorkLocationValue("MO");
    public static final EmployeeWorkLocationValue MK = new EmployeeWorkLocationValue("MK");
    public static final EmployeeWorkLocationValue MG = new EmployeeWorkLocationValue("MG");
    public static final EmployeeWorkLocationValue MW = new EmployeeWorkLocationValue("MW");
    public static final EmployeeWorkLocationValue MY = new EmployeeWorkLocationValue("MY");
    public static final EmployeeWorkLocationValue MV = new EmployeeWorkLocationValue("MV");
    public static final EmployeeWorkLocationValue ML = new EmployeeWorkLocationValue("ML");
    public static final EmployeeWorkLocationValue MT = new EmployeeWorkLocationValue("MT");
    public static final EmployeeWorkLocationValue MH = new EmployeeWorkLocationValue("MH");
    public static final EmployeeWorkLocationValue MQ = new EmployeeWorkLocationValue("MQ");
    public static final EmployeeWorkLocationValue MR = new EmployeeWorkLocationValue("MR");
    public static final EmployeeWorkLocationValue MU = new EmployeeWorkLocationValue("MU");
    public static final EmployeeWorkLocationValue YT = new EmployeeWorkLocationValue("YT");
    public static final EmployeeWorkLocationValue MX = new EmployeeWorkLocationValue("MX");
    public static final EmployeeWorkLocationValue FM = new EmployeeWorkLocationValue("FM");
    public static final EmployeeWorkLocationValue MD = new EmployeeWorkLocationValue("MD");
    public static final EmployeeWorkLocationValue MC = new EmployeeWorkLocationValue("MC");
    public static final EmployeeWorkLocationValue MN = new EmployeeWorkLocationValue("MN");
    public static final EmployeeWorkLocationValue ME = new EmployeeWorkLocationValue("ME");
    public static final EmployeeWorkLocationValue MS = new EmployeeWorkLocationValue("MS");
    public static final EmployeeWorkLocationValue MA = new EmployeeWorkLocationValue("MA");
    public static final EmployeeWorkLocationValue MZ = new EmployeeWorkLocationValue("MZ");
    public static final EmployeeWorkLocationValue MM = new EmployeeWorkLocationValue("MM");
    public static final EmployeeWorkLocationValue NA = new EmployeeWorkLocationValue("NA");
    public static final EmployeeWorkLocationValue NR = new EmployeeWorkLocationValue("NR");
    public static final EmployeeWorkLocationValue NP = new EmployeeWorkLocationValue("NP");
    public static final EmployeeWorkLocationValue NL = new EmployeeWorkLocationValue("NL");
    public static final EmployeeWorkLocationValue NC = new EmployeeWorkLocationValue("NC");
    public static final EmployeeWorkLocationValue NZ = new EmployeeWorkLocationValue("NZ");
    public static final EmployeeWorkLocationValue NI = new EmployeeWorkLocationValue("NI");
    public static final EmployeeWorkLocationValue NE = new EmployeeWorkLocationValue("NE");
    public static final EmployeeWorkLocationValue NG = new EmployeeWorkLocationValue("NG");
    public static final EmployeeWorkLocationValue NU = new EmployeeWorkLocationValue("NU");
    public static final EmployeeWorkLocationValue NF = new EmployeeWorkLocationValue("NF");
    public static final EmployeeWorkLocationValue MP = new EmployeeWorkLocationValue("MP");
    public static final EmployeeWorkLocationValue NO = new EmployeeWorkLocationValue("NO");
    public static final EmployeeWorkLocationValue OM = new EmployeeWorkLocationValue("OM");
    public static final EmployeeWorkLocationValue PK = new EmployeeWorkLocationValue("PK");
    public static final EmployeeWorkLocationValue PW = new EmployeeWorkLocationValue("PW");
    public static final EmployeeWorkLocationValue PS = new EmployeeWorkLocationValue("PS");
    public static final EmployeeWorkLocationValue PA = new EmployeeWorkLocationValue("PA");
    public static final EmployeeWorkLocationValue PG = new EmployeeWorkLocationValue("PG");
    public static final EmployeeWorkLocationValue PY = new EmployeeWorkLocationValue("PY");
    public static final EmployeeWorkLocationValue PE = new EmployeeWorkLocationValue("PE");
    public static final EmployeeWorkLocationValue PH = new EmployeeWorkLocationValue("PH");
    public static final EmployeeWorkLocationValue PN = new EmployeeWorkLocationValue("PN");
    public static final EmployeeWorkLocationValue PL = new EmployeeWorkLocationValue("PL");
    public static final EmployeeWorkLocationValue PT = new EmployeeWorkLocationValue("PT");
    public static final EmployeeWorkLocationValue PR = new EmployeeWorkLocationValue("PR");
    public static final EmployeeWorkLocationValue QA = new EmployeeWorkLocationValue("QA");
    public static final EmployeeWorkLocationValue RO = new EmployeeWorkLocationValue("RO");
    public static final EmployeeWorkLocationValue RU = new EmployeeWorkLocationValue("RU");
    public static final EmployeeWorkLocationValue RW = new EmployeeWorkLocationValue("RW");
    public static final EmployeeWorkLocationValue RE = new EmployeeWorkLocationValue("RE");
    public static final EmployeeWorkLocationValue BL = new EmployeeWorkLocationValue("BL");
    public static final EmployeeWorkLocationValue SH = new EmployeeWorkLocationValue("SH");
    public static final EmployeeWorkLocationValue KN = new EmployeeWorkLocationValue("KN");
    public static final EmployeeWorkLocationValue LC = new EmployeeWorkLocationValue("LC");
    public static final EmployeeWorkLocationValue MF = new EmployeeWorkLocationValue("MF");
    public static final EmployeeWorkLocationValue PM = new EmployeeWorkLocationValue("PM");
    public static final EmployeeWorkLocationValue VC = new EmployeeWorkLocationValue("VC");
    public static final EmployeeWorkLocationValue WS = new EmployeeWorkLocationValue("WS");
    public static final EmployeeWorkLocationValue SM = new EmployeeWorkLocationValue("SM");
    public static final EmployeeWorkLocationValue ST = new EmployeeWorkLocationValue("ST");
    public static final EmployeeWorkLocationValue SA = new EmployeeWorkLocationValue("SA");
    public static final EmployeeWorkLocationValue SN = new EmployeeWorkLocationValue("SN");
    public static final EmployeeWorkLocationValue RS = new EmployeeWorkLocationValue("RS");
    public static final EmployeeWorkLocationValue SC = new EmployeeWorkLocationValue("SC");
    public static final EmployeeWorkLocationValue SL = new EmployeeWorkLocationValue("SL");
    public static final EmployeeWorkLocationValue SG = new EmployeeWorkLocationValue("SG");
    public static final EmployeeWorkLocationValue SX = new EmployeeWorkLocationValue("SX");
    public static final EmployeeWorkLocationValue SK = new EmployeeWorkLocationValue("SK");
    public static final EmployeeWorkLocationValue SI = new EmployeeWorkLocationValue("SI");
    public static final EmployeeWorkLocationValue SB = new EmployeeWorkLocationValue("SB");
    public static final EmployeeWorkLocationValue SO = new EmployeeWorkLocationValue("SO");
    public static final EmployeeWorkLocationValue ZA = new EmployeeWorkLocationValue("ZA");
    public static final EmployeeWorkLocationValue GS = new EmployeeWorkLocationValue("GS");
    public static final EmployeeWorkLocationValue SS = new EmployeeWorkLocationValue("SS");
    public static final EmployeeWorkLocationValue ES = new EmployeeWorkLocationValue("ES");
    public static final EmployeeWorkLocationValue LK = new EmployeeWorkLocationValue("LK");
    public static final EmployeeWorkLocationValue SD = new EmployeeWorkLocationValue("SD");
    public static final EmployeeWorkLocationValue SR = new EmployeeWorkLocationValue("SR");
    public static final EmployeeWorkLocationValue SJ = new EmployeeWorkLocationValue("SJ");
    public static final EmployeeWorkLocationValue SZ = new EmployeeWorkLocationValue("SZ");
    public static final EmployeeWorkLocationValue SE = new EmployeeWorkLocationValue("SE");
    public static final EmployeeWorkLocationValue CH = new EmployeeWorkLocationValue("CH");
    public static final EmployeeWorkLocationValue SY = new EmployeeWorkLocationValue("SY");
    public static final EmployeeWorkLocationValue TW = new EmployeeWorkLocationValue("TW");
    public static final EmployeeWorkLocationValue TJ = new EmployeeWorkLocationValue("TJ");
    public static final EmployeeWorkLocationValue TZ = new EmployeeWorkLocationValue("TZ");
    public static final EmployeeWorkLocationValue TH = new EmployeeWorkLocationValue("TH");
    public static final EmployeeWorkLocationValue TL = new EmployeeWorkLocationValue("TL");
    public static final EmployeeWorkLocationValue TG = new EmployeeWorkLocationValue("TG");
    public static final EmployeeWorkLocationValue TK = new EmployeeWorkLocationValue("TK");
    public static final EmployeeWorkLocationValue TO = new EmployeeWorkLocationValue("TO");
    public static final EmployeeWorkLocationValue TT = new EmployeeWorkLocationValue("TT");
    public static final EmployeeWorkLocationValue TN = new EmployeeWorkLocationValue("TN");
    public static final EmployeeWorkLocationValue TR = new EmployeeWorkLocationValue("TR");
    public static final EmployeeWorkLocationValue TM = new EmployeeWorkLocationValue("TM");
    public static final EmployeeWorkLocationValue TC = new EmployeeWorkLocationValue("TC");
    public static final EmployeeWorkLocationValue TV = new EmployeeWorkLocationValue("TV");
    public static final EmployeeWorkLocationValue UG = new EmployeeWorkLocationValue("UG");
    public static final EmployeeWorkLocationValue UA = new EmployeeWorkLocationValue("UA");
    public static final EmployeeWorkLocationValue AE = new EmployeeWorkLocationValue("AE");
    public static final EmployeeWorkLocationValue GB = new EmployeeWorkLocationValue("GB");
    public static final EmployeeWorkLocationValue US = new EmployeeWorkLocationValue("US");
    public static final EmployeeWorkLocationValue UM = new EmployeeWorkLocationValue("UM");
    public static final EmployeeWorkLocationValue UY = new EmployeeWorkLocationValue("UY");
    public static final EmployeeWorkLocationValue UZ = new EmployeeWorkLocationValue("UZ");
    public static final EmployeeWorkLocationValue VU = new EmployeeWorkLocationValue("VU");
    public static final EmployeeWorkLocationValue VE = new EmployeeWorkLocationValue("VE");
    public static final EmployeeWorkLocationValue VN = new EmployeeWorkLocationValue("VN");
    public static final EmployeeWorkLocationValue VG = new EmployeeWorkLocationValue("VG");
    public static final EmployeeWorkLocationValue VI = new EmployeeWorkLocationValue("VI");
    public static final EmployeeWorkLocationValue WF = new EmployeeWorkLocationValue("WF");
    public static final EmployeeWorkLocationValue EH = new EmployeeWorkLocationValue("EH");
    public static final EmployeeWorkLocationValue YE = new EmployeeWorkLocationValue("YE");
    public static final EmployeeWorkLocationValue ZM = new EmployeeWorkLocationValue("ZM");
    public static final EmployeeWorkLocationValue ZW = new EmployeeWorkLocationValue("ZW");
    public static final EmployeeWorkLocationValue UNMAPPED_VALUE = new EmployeeWorkLocationValue("unmapped_value");

    // This map will grow whenever a Color gets created with a new
    // unrecognized value (a potential memory leak if the user is not
    // careful). Keep this field lower case to avoid clashing with
    // generated member names which will always be upper cased (Java
    // convention)
    private static final Map<String, EmployeeWorkLocationValue> values = createValuesMap();
    private static final Map<String, EmployeeWorkLocationValueEnum> enums = createEnumsMap();

    private final String value;

    private EmployeeWorkLocationValue(String value) {
        this.value = value;
    }

    /**
     * Returns a EmployeeWorkLocationValue with the given value. For a specific value the 
     * returned object will always be a singleton so reference equality 
     * is satisfied when the values are the same.
     * 
     * @param value value to be wrapped as EmployeeWorkLocationValue
     */ 
    public static EmployeeWorkLocationValue of(String value) {
        synchronized (EmployeeWorkLocationValue.class) {
            return values.computeIfAbsent(value, v -> new EmployeeWorkLocationValue(v));
        }
    }

    public String value() {
        return value;
    }

    public Optional<EmployeeWorkLocationValueEnum> asEnum() {
        return Optional.ofNullable(enums.getOrDefault(value, null));
    }

    public boolean isKnown() {
        return asEnum().isPresent();
    }

    @Override
    public int hashCode() {
        return Objects.hash(value);
    }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        EmployeeWorkLocationValue other = (EmployeeWorkLocationValue) obj;
        return Objects.equals(value, other.value);
    }

    @Override
    public String toString() {
        return "EmployeeWorkLocationValue [value=" + value + "]";
    }

    // return an array just like an enum
    public static EmployeeWorkLocationValue[] values() {
        synchronized (EmployeeWorkLocationValue.class) {
            return values.values().toArray(new EmployeeWorkLocationValue[] {});
        }
    }

    private static final Map<String, EmployeeWorkLocationValue> createValuesMap() {
        Map<String, EmployeeWorkLocationValue> map = new LinkedHashMap<>();
        map.put("AF", AF);
        map.put("AL", AL);
        map.put("DZ", DZ);
        map.put("AS", AS);
        map.put("AD", AD);
        map.put("AO", AO);
        map.put("AI", AI);
        map.put("AQ", AQ);
        map.put("AG", AG);
        map.put("AR", AR);
        map.put("AM", AM);
        map.put("AW", AW);
        map.put("AU", AU);
        map.put("AT", AT);
        map.put("AZ", AZ);
        map.put("BS", BS);
        map.put("BH", BH);
        map.put("BD", BD);
        map.put("BB", BB);
        map.put("BY", BY);
        map.put("BE", BE);
        map.put("BZ", BZ);
        map.put("BJ", BJ);
        map.put("BM", BM);
        map.put("BT", BT);
        map.put("BO", BO);
        map.put("BQ", BQ);
        map.put("BA", BA);
        map.put("BW", BW);
        map.put("BV", BV);
        map.put("BR", BR);
        map.put("IO", IO);
        map.put("BN", BN);
        map.put("BG", BG);
        map.put("BF", BF);
        map.put("BI", BI);
        map.put("KH", KH);
        map.put("CM", CM);
        map.put("CA", CA);
        map.put("CV", CV);
        map.put("KY", KY);
        map.put("CF", CF);
        map.put("TD", TD);
        map.put("CL", CL);
        map.put("CN", CN);
        map.put("CX", CX);
        map.put("CC", CC);
        map.put("CO", CO);
        map.put("KM", KM);
        map.put("CG", CG);
        map.put("CD", CD);
        map.put("CK", CK);
        map.put("CR", CR);
        map.put("HR", HR);
        map.put("CU", CU);
        map.put("CW", CW);
        map.put("CY", CY);
        map.put("CZ", CZ);
        map.put("CI", CI);
        map.put("DK", DK);
        map.put("DJ", DJ);
        map.put("DM", DM);
        map.put("DO", DO);
        map.put("EC", EC);
        map.put("EG", EG);
        map.put("SV", SV);
        map.put("GQ", GQ);
        map.put("ER", ER);
        map.put("EE", EE);
        map.put("ET", ET);
        map.put("FK", FK);
        map.put("FO", FO);
        map.put("FJ", FJ);
        map.put("FI", FI);
        map.put("FR", FR);
        map.put("GF", GF);
        map.put("PF", PF);
        map.put("TF", TF);
        map.put("GA", GA);
        map.put("GM", GM);
        map.put("GE", GE);
        map.put("DE", DE);
        map.put("GH", GH);
        map.put("GI", GI);
        map.put("GR", GR);
        map.put("GL", GL);
        map.put("GD", GD);
        map.put("GP", GP);
        map.put("GU", GU);
        map.put("GT", GT);
        map.put("GG", GG);
        map.put("GN", GN);
        map.put("GW", GW);
        map.put("GY", GY);
        map.put("HT", HT);
        map.put("HM", HM);
        map.put("VA", VA);
        map.put("HN", HN);
        map.put("HK", HK);
        map.put("HU", HU);
        map.put("IS", IS);
        map.put("IN", IN);
        map.put("ID", ID);
        map.put("IR", IR);
        map.put("IQ", IQ);
        map.put("IE", IE);
        map.put("IM", IM);
        map.put("IL", IL);
        map.put("IT", IT);
        map.put("JM", JM);
        map.put("JP", JP);
        map.put("JE", JE);
        map.put("JO", JO);
        map.put("KZ", KZ);
        map.put("KE", KE);
        map.put("KI", KI);
        map.put("KP", KP);
        map.put("KR", KR);
        map.put("KW", KW);
        map.put("KG", KG);
        map.put("LA", LA);
        map.put("LV", LV);
        map.put("LB", LB);
        map.put("LS", LS);
        map.put("LR", LR);
        map.put("LY", LY);
        map.put("LI", LI);
        map.put("LT", LT);
        map.put("LU", LU);
        map.put("MO", MO);
        map.put("MK", MK);
        map.put("MG", MG);
        map.put("MW", MW);
        map.put("MY", MY);
        map.put("MV", MV);
        map.put("ML", ML);
        map.put("MT", MT);
        map.put("MH", MH);
        map.put("MQ", MQ);
        map.put("MR", MR);
        map.put("MU", MU);
        map.put("YT", YT);
        map.put("MX", MX);
        map.put("FM", FM);
        map.put("MD", MD);
        map.put("MC", MC);
        map.put("MN", MN);
        map.put("ME", ME);
        map.put("MS", MS);
        map.put("MA", MA);
        map.put("MZ", MZ);
        map.put("MM", MM);
        map.put("NA", NA);
        map.put("NR", NR);
        map.put("NP", NP);
        map.put("NL", NL);
        map.put("NC", NC);
        map.put("NZ", NZ);
        map.put("NI", NI);
        map.put("NE", NE);
        map.put("NG", NG);
        map.put("NU", NU);
        map.put("NF", NF);
        map.put("MP", MP);
        map.put("NO", NO);
        map.put("OM", OM);
        map.put("PK", PK);
        map.put("PW", PW);
        map.put("PS", PS);
        map.put("PA", PA);
        map.put("PG", PG);
        map.put("PY", PY);
        map.put("PE", PE);
        map.put("PH", PH);
        map.put("PN", PN);
        map.put("PL", PL);
        map.put("PT", PT);
        map.put("PR", PR);
        map.put("QA", QA);
        map.put("RO", RO);
        map.put("RU", RU);
        map.put("RW", RW);
        map.put("RE", RE);
        map.put("BL", BL);
        map.put("SH", SH);
        map.put("KN", KN);
        map.put("LC", LC);
        map.put("MF", MF);
        map.put("PM", PM);
        map.put("VC", VC);
        map.put("WS", WS);
        map.put("SM", SM);
        map.put("ST", ST);
        map.put("SA", SA);
        map.put("SN", SN);
        map.put("RS", RS);
        map.put("SC", SC);
        map.put("SL", SL);
        map.put("SG", SG);
        map.put("SX", SX);
        map.put("SK", SK);
        map.put("SI", SI);
        map.put("SB", SB);
        map.put("SO", SO);
        map.put("ZA", ZA);
        map.put("GS", GS);
        map.put("SS", SS);
        map.put("ES", ES);
        map.put("LK", LK);
        map.put("SD", SD);
        map.put("SR", SR);
        map.put("SJ", SJ);
        map.put("SZ", SZ);
        map.put("SE", SE);
        map.put("CH", CH);
        map.put("SY", SY);
        map.put("TW", TW);
        map.put("TJ", TJ);
        map.put("TZ", TZ);
        map.put("TH", TH);
        map.put("TL", TL);
        map.put("TG", TG);
        map.put("TK", TK);
        map.put("TO", TO);
        map.put("TT", TT);
        map.put("TN", TN);
        map.put("TR", TR);
        map.put("TM", TM);
        map.put("TC", TC);
        map.put("TV", TV);
        map.put("UG", UG);
        map.put("UA", UA);
        map.put("AE", AE);
        map.put("GB", GB);
        map.put("US", US);
        map.put("UM", UM);
        map.put("UY", UY);
        map.put("UZ", UZ);
        map.put("VU", VU);
        map.put("VE", VE);
        map.put("VN", VN);
        map.put("VG", VG);
        map.put("VI", VI);
        map.put("WF", WF);
        map.put("EH", EH);
        map.put("YE", YE);
        map.put("ZM", ZM);
        map.put("ZW", ZW);
        map.put("unmapped_value", UNMAPPED_VALUE);
        return map;
    }

    private static final Map<String, EmployeeWorkLocationValueEnum> createEnumsMap() {
        Map<String, EmployeeWorkLocationValueEnum> map = new HashMap<>();
        map.put("AF", EmployeeWorkLocationValueEnum.AF);
        map.put("AL", EmployeeWorkLocationValueEnum.AL);
        map.put("DZ", EmployeeWorkLocationValueEnum.DZ);
        map.put("AS", EmployeeWorkLocationValueEnum.AS);
        map.put("AD", EmployeeWorkLocationValueEnum.AD);
        map.put("AO", EmployeeWorkLocationValueEnum.AO);
        map.put("AI", EmployeeWorkLocationValueEnum.AI);
        map.put("AQ", EmployeeWorkLocationValueEnum.AQ);
        map.put("AG", EmployeeWorkLocationValueEnum.AG);
        map.put("AR", EmployeeWorkLocationValueEnum.AR);
        map.put("AM", EmployeeWorkLocationValueEnum.AM);
        map.put("AW", EmployeeWorkLocationValueEnum.AW);
        map.put("AU", EmployeeWorkLocationValueEnum.AU);
        map.put("AT", EmployeeWorkLocationValueEnum.AT);
        map.put("AZ", EmployeeWorkLocationValueEnum.AZ);
        map.put("BS", EmployeeWorkLocationValueEnum.BS);
        map.put("BH", EmployeeWorkLocationValueEnum.BH);
        map.put("BD", EmployeeWorkLocationValueEnum.BD);
        map.put("BB", EmployeeWorkLocationValueEnum.BB);
        map.put("BY", EmployeeWorkLocationValueEnum.BY);
        map.put("BE", EmployeeWorkLocationValueEnum.BE);
        map.put("BZ", EmployeeWorkLocationValueEnum.BZ);
        map.put("BJ", EmployeeWorkLocationValueEnum.BJ);
        map.put("BM", EmployeeWorkLocationValueEnum.BM);
        map.put("BT", EmployeeWorkLocationValueEnum.BT);
        map.put("BO", EmployeeWorkLocationValueEnum.BO);
        map.put("BQ", EmployeeWorkLocationValueEnum.BQ);
        map.put("BA", EmployeeWorkLocationValueEnum.BA);
        map.put("BW", EmployeeWorkLocationValueEnum.BW);
        map.put("BV", EmployeeWorkLocationValueEnum.BV);
        map.put("BR", EmployeeWorkLocationValueEnum.BR);
        map.put("IO", EmployeeWorkLocationValueEnum.IO);
        map.put("BN", EmployeeWorkLocationValueEnum.BN);
        map.put("BG", EmployeeWorkLocationValueEnum.BG);
        map.put("BF", EmployeeWorkLocationValueEnum.BF);
        map.put("BI", EmployeeWorkLocationValueEnum.BI);
        map.put("KH", EmployeeWorkLocationValueEnum.KH);
        map.put("CM", EmployeeWorkLocationValueEnum.CM);
        map.put("CA", EmployeeWorkLocationValueEnum.CA);
        map.put("CV", EmployeeWorkLocationValueEnum.CV);
        map.put("KY", EmployeeWorkLocationValueEnum.KY);
        map.put("CF", EmployeeWorkLocationValueEnum.CF);
        map.put("TD", EmployeeWorkLocationValueEnum.TD);
        map.put("CL", EmployeeWorkLocationValueEnum.CL);
        map.put("CN", EmployeeWorkLocationValueEnum.CN);
        map.put("CX", EmployeeWorkLocationValueEnum.CX);
        map.put("CC", EmployeeWorkLocationValueEnum.CC);
        map.put("CO", EmployeeWorkLocationValueEnum.CO);
        map.put("KM", EmployeeWorkLocationValueEnum.KM);
        map.put("CG", EmployeeWorkLocationValueEnum.CG);
        map.put("CD", EmployeeWorkLocationValueEnum.CD);
        map.put("CK", EmployeeWorkLocationValueEnum.CK);
        map.put("CR", EmployeeWorkLocationValueEnum.CR);
        map.put("HR", EmployeeWorkLocationValueEnum.HR);
        map.put("CU", EmployeeWorkLocationValueEnum.CU);
        map.put("CW", EmployeeWorkLocationValueEnum.CW);
        map.put("CY", EmployeeWorkLocationValueEnum.CY);
        map.put("CZ", EmployeeWorkLocationValueEnum.CZ);
        map.put("CI", EmployeeWorkLocationValueEnum.CI);
        map.put("DK", EmployeeWorkLocationValueEnum.DK);
        map.put("DJ", EmployeeWorkLocationValueEnum.DJ);
        map.put("DM", EmployeeWorkLocationValueEnum.DM);
        map.put("DO", EmployeeWorkLocationValueEnum.DO);
        map.put("EC", EmployeeWorkLocationValueEnum.EC);
        map.put("EG", EmployeeWorkLocationValueEnum.EG);
        map.put("SV", EmployeeWorkLocationValueEnum.SV);
        map.put("GQ", EmployeeWorkLocationValueEnum.GQ);
        map.put("ER", EmployeeWorkLocationValueEnum.ER);
        map.put("EE", EmployeeWorkLocationValueEnum.EE);
        map.put("ET", EmployeeWorkLocationValueEnum.ET);
        map.put("FK", EmployeeWorkLocationValueEnum.FK);
        map.put("FO", EmployeeWorkLocationValueEnum.FO);
        map.put("FJ", EmployeeWorkLocationValueEnum.FJ);
        map.put("FI", EmployeeWorkLocationValueEnum.FI);
        map.put("FR", EmployeeWorkLocationValueEnum.FR);
        map.put("GF", EmployeeWorkLocationValueEnum.GF);
        map.put("PF", EmployeeWorkLocationValueEnum.PF);
        map.put("TF", EmployeeWorkLocationValueEnum.TF);
        map.put("GA", EmployeeWorkLocationValueEnum.GA);
        map.put("GM", EmployeeWorkLocationValueEnum.GM);
        map.put("GE", EmployeeWorkLocationValueEnum.GE);
        map.put("DE", EmployeeWorkLocationValueEnum.DE);
        map.put("GH", EmployeeWorkLocationValueEnum.GH);
        map.put("GI", EmployeeWorkLocationValueEnum.GI);
        map.put("GR", EmployeeWorkLocationValueEnum.GR);
        map.put("GL", EmployeeWorkLocationValueEnum.GL);
        map.put("GD", EmployeeWorkLocationValueEnum.GD);
        map.put("GP", EmployeeWorkLocationValueEnum.GP);
        map.put("GU", EmployeeWorkLocationValueEnum.GU);
        map.put("GT", EmployeeWorkLocationValueEnum.GT);
        map.put("GG", EmployeeWorkLocationValueEnum.GG);
        map.put("GN", EmployeeWorkLocationValueEnum.GN);
        map.put("GW", EmployeeWorkLocationValueEnum.GW);
        map.put("GY", EmployeeWorkLocationValueEnum.GY);
        map.put("HT", EmployeeWorkLocationValueEnum.HT);
        map.put("HM", EmployeeWorkLocationValueEnum.HM);
        map.put("VA", EmployeeWorkLocationValueEnum.VA);
        map.put("HN", EmployeeWorkLocationValueEnum.HN);
        map.put("HK", EmployeeWorkLocationValueEnum.HK);
        map.put("HU", EmployeeWorkLocationValueEnum.HU);
        map.put("IS", EmployeeWorkLocationValueEnum.IS);
        map.put("IN", EmployeeWorkLocationValueEnum.IN);
        map.put("ID", EmployeeWorkLocationValueEnum.ID);
        map.put("IR", EmployeeWorkLocationValueEnum.IR);
        map.put("IQ", EmployeeWorkLocationValueEnum.IQ);
        map.put("IE", EmployeeWorkLocationValueEnum.IE);
        map.put("IM", EmployeeWorkLocationValueEnum.IM);
        map.put("IL", EmployeeWorkLocationValueEnum.IL);
        map.put("IT", EmployeeWorkLocationValueEnum.IT);
        map.put("JM", EmployeeWorkLocationValueEnum.JM);
        map.put("JP", EmployeeWorkLocationValueEnum.JP);
        map.put("JE", EmployeeWorkLocationValueEnum.JE);
        map.put("JO", EmployeeWorkLocationValueEnum.JO);
        map.put("KZ", EmployeeWorkLocationValueEnum.KZ);
        map.put("KE", EmployeeWorkLocationValueEnum.KE);
        map.put("KI", EmployeeWorkLocationValueEnum.KI);
        map.put("KP", EmployeeWorkLocationValueEnum.KP);
        map.put("KR", EmployeeWorkLocationValueEnum.KR);
        map.put("KW", EmployeeWorkLocationValueEnum.KW);
        map.put("KG", EmployeeWorkLocationValueEnum.KG);
        map.put("LA", EmployeeWorkLocationValueEnum.LA);
        map.put("LV", EmployeeWorkLocationValueEnum.LV);
        map.put("LB", EmployeeWorkLocationValueEnum.LB);
        map.put("LS", EmployeeWorkLocationValueEnum.LS);
        map.put("LR", EmployeeWorkLocationValueEnum.LR);
        map.put("LY", EmployeeWorkLocationValueEnum.LY);
        map.put("LI", EmployeeWorkLocationValueEnum.LI);
        map.put("LT", EmployeeWorkLocationValueEnum.LT);
        map.put("LU", EmployeeWorkLocationValueEnum.LU);
        map.put("MO", EmployeeWorkLocationValueEnum.MO);
        map.put("MK", EmployeeWorkLocationValueEnum.MK);
        map.put("MG", EmployeeWorkLocationValueEnum.MG);
        map.put("MW", EmployeeWorkLocationValueEnum.MW);
        map.put("MY", EmployeeWorkLocationValueEnum.MY);
        map.put("MV", EmployeeWorkLocationValueEnum.MV);
        map.put("ML", EmployeeWorkLocationValueEnum.ML);
        map.put("MT", EmployeeWorkLocationValueEnum.MT);
        map.put("MH", EmployeeWorkLocationValueEnum.MH);
        map.put("MQ", EmployeeWorkLocationValueEnum.MQ);
        map.put("MR", EmployeeWorkLocationValueEnum.MR);
        map.put("MU", EmployeeWorkLocationValueEnum.MU);
        map.put("YT", EmployeeWorkLocationValueEnum.YT);
        map.put("MX", EmployeeWorkLocationValueEnum.MX);
        map.put("FM", EmployeeWorkLocationValueEnum.FM);
        map.put("MD", EmployeeWorkLocationValueEnum.MD);
        map.put("MC", EmployeeWorkLocationValueEnum.MC);
        map.put("MN", EmployeeWorkLocationValueEnum.MN);
        map.put("ME", EmployeeWorkLocationValueEnum.ME);
        map.put("MS", EmployeeWorkLocationValueEnum.MS);
        map.put("MA", EmployeeWorkLocationValueEnum.MA);
        map.put("MZ", EmployeeWorkLocationValueEnum.MZ);
        map.put("MM", EmployeeWorkLocationValueEnum.MM);
        map.put("NA", EmployeeWorkLocationValueEnum.NA);
        map.put("NR", EmployeeWorkLocationValueEnum.NR);
        map.put("NP", EmployeeWorkLocationValueEnum.NP);
        map.put("NL", EmployeeWorkLocationValueEnum.NL);
        map.put("NC", EmployeeWorkLocationValueEnum.NC);
        map.put("NZ", EmployeeWorkLocationValueEnum.NZ);
        map.put("NI", EmployeeWorkLocationValueEnum.NI);
        map.put("NE", EmployeeWorkLocationValueEnum.NE);
        map.put("NG", EmployeeWorkLocationValueEnum.NG);
        map.put("NU", EmployeeWorkLocationValueEnum.NU);
        map.put("NF", EmployeeWorkLocationValueEnum.NF);
        map.put("MP", EmployeeWorkLocationValueEnum.MP);
        map.put("NO", EmployeeWorkLocationValueEnum.NO);
        map.put("OM", EmployeeWorkLocationValueEnum.OM);
        map.put("PK", EmployeeWorkLocationValueEnum.PK);
        map.put("PW", EmployeeWorkLocationValueEnum.PW);
        map.put("PS", EmployeeWorkLocationValueEnum.PS);
        map.put("PA", EmployeeWorkLocationValueEnum.PA);
        map.put("PG", EmployeeWorkLocationValueEnum.PG);
        map.put("PY", EmployeeWorkLocationValueEnum.PY);
        map.put("PE", EmployeeWorkLocationValueEnum.PE);
        map.put("PH", EmployeeWorkLocationValueEnum.PH);
        map.put("PN", EmployeeWorkLocationValueEnum.PN);
        map.put("PL", EmployeeWorkLocationValueEnum.PL);
        map.put("PT", EmployeeWorkLocationValueEnum.PT);
        map.put("PR", EmployeeWorkLocationValueEnum.PR);
        map.put("QA", EmployeeWorkLocationValueEnum.QA);
        map.put("RO", EmployeeWorkLocationValueEnum.RO);
        map.put("RU", EmployeeWorkLocationValueEnum.RU);
        map.put("RW", EmployeeWorkLocationValueEnum.RW);
        map.put("RE", EmployeeWorkLocationValueEnum.RE);
        map.put("BL", EmployeeWorkLocationValueEnum.BL);
        map.put("SH", EmployeeWorkLocationValueEnum.SH);
        map.put("KN", EmployeeWorkLocationValueEnum.KN);
        map.put("LC", EmployeeWorkLocationValueEnum.LC);
        map.put("MF", EmployeeWorkLocationValueEnum.MF);
        map.put("PM", EmployeeWorkLocationValueEnum.PM);
        map.put("VC", EmployeeWorkLocationValueEnum.VC);
        map.put("WS", EmployeeWorkLocationValueEnum.WS);
        map.put("SM", EmployeeWorkLocationValueEnum.SM);
        map.put("ST", EmployeeWorkLocationValueEnum.ST);
        map.put("SA", EmployeeWorkLocationValueEnum.SA);
        map.put("SN", EmployeeWorkLocationValueEnum.SN);
        map.put("RS", EmployeeWorkLocationValueEnum.RS);
        map.put("SC", EmployeeWorkLocationValueEnum.SC);
        map.put("SL", EmployeeWorkLocationValueEnum.SL);
        map.put("SG", EmployeeWorkLocationValueEnum.SG);
        map.put("SX", EmployeeWorkLocationValueEnum.SX);
        map.put("SK", EmployeeWorkLocationValueEnum.SK);
        map.put("SI", EmployeeWorkLocationValueEnum.SI);
        map.put("SB", EmployeeWorkLocationValueEnum.SB);
        map.put("SO", EmployeeWorkLocationValueEnum.SO);
        map.put("ZA", EmployeeWorkLocationValueEnum.ZA);
        map.put("GS", EmployeeWorkLocationValueEnum.GS);
        map.put("SS", EmployeeWorkLocationValueEnum.SS);
        map.put("ES", EmployeeWorkLocationValueEnum.ES);
        map.put("LK", EmployeeWorkLocationValueEnum.LK);
        map.put("SD", EmployeeWorkLocationValueEnum.SD);
        map.put("SR", EmployeeWorkLocationValueEnum.SR);
        map.put("SJ", EmployeeWorkLocationValueEnum.SJ);
        map.put("SZ", EmployeeWorkLocationValueEnum.SZ);
        map.put("SE", EmployeeWorkLocationValueEnum.SE);
        map.put("CH", EmployeeWorkLocationValueEnum.CH);
        map.put("SY", EmployeeWorkLocationValueEnum.SY);
        map.put("TW", EmployeeWorkLocationValueEnum.TW);
        map.put("TJ", EmployeeWorkLocationValueEnum.TJ);
        map.put("TZ", EmployeeWorkLocationValueEnum.TZ);
        map.put("TH", EmployeeWorkLocationValueEnum.TH);
        map.put("TL", EmployeeWorkLocationValueEnum.TL);
        map.put("TG", EmployeeWorkLocationValueEnum.TG);
        map.put("TK", EmployeeWorkLocationValueEnum.TK);
        map.put("TO", EmployeeWorkLocationValueEnum.TO);
        map.put("TT", EmployeeWorkLocationValueEnum.TT);
        map.put("TN", EmployeeWorkLocationValueEnum.TN);
        map.put("TR", EmployeeWorkLocationValueEnum.TR);
        map.put("TM", EmployeeWorkLocationValueEnum.TM);
        map.put("TC", EmployeeWorkLocationValueEnum.TC);
        map.put("TV", EmployeeWorkLocationValueEnum.TV);
        map.put("UG", EmployeeWorkLocationValueEnum.UG);
        map.put("UA", EmployeeWorkLocationValueEnum.UA);
        map.put("AE", EmployeeWorkLocationValueEnum.AE);
        map.put("GB", EmployeeWorkLocationValueEnum.GB);
        map.put("US", EmployeeWorkLocationValueEnum.US);
        map.put("UM", EmployeeWorkLocationValueEnum.UM);
        map.put("UY", EmployeeWorkLocationValueEnum.UY);
        map.put("UZ", EmployeeWorkLocationValueEnum.UZ);
        map.put("VU", EmployeeWorkLocationValueEnum.VU);
        map.put("VE", EmployeeWorkLocationValueEnum.VE);
        map.put("VN", EmployeeWorkLocationValueEnum.VN);
        map.put("VG", EmployeeWorkLocationValueEnum.VG);
        map.put("VI", EmployeeWorkLocationValueEnum.VI);
        map.put("WF", EmployeeWorkLocationValueEnum.WF);
        map.put("EH", EmployeeWorkLocationValueEnum.EH);
        map.put("YE", EmployeeWorkLocationValueEnum.YE);
        map.put("ZM", EmployeeWorkLocationValueEnum.ZM);
        map.put("ZW", EmployeeWorkLocationValueEnum.ZW);
        map.put("unmapped_value", EmployeeWorkLocationValueEnum.UNMAPPED_VALUE);
        return map;
    }
    
    @SuppressWarnings("serial")
    public static final class _Serializer extends StdSerializer<EmployeeWorkLocationValue> {

        protected _Serializer() {
            super(EmployeeWorkLocationValue.class);
        }

        @Override
        public void serialize(EmployeeWorkLocationValue value, JsonGenerator g, SerializerProvider provider)
                throws IOException, JsonProcessingException {
            g.writeObject(value.value);
        }
    }

    @SuppressWarnings("serial")
    public static final class _Deserializer extends StdDeserializer<EmployeeWorkLocationValue> {

        protected _Deserializer() {
            super(EmployeeWorkLocationValue.class);
        }

        @Override
        public EmployeeWorkLocationValue deserialize(JsonParser p, DeserializationContext ctxt)
                throws IOException, JacksonException {
            String v = p.readValueAs(new TypeReference<String>() {});
            // use the factory method to ensure we get singletons
            return EmployeeWorkLocationValue.of(v);
        }
    }
    
    public enum EmployeeWorkLocationValueEnum {

        AF("AF"),
        AL("AL"),
        DZ("DZ"),
        AS("AS"),
        AD("AD"),
        AO("AO"),
        AI("AI"),
        AQ("AQ"),
        AG("AG"),
        AR("AR"),
        AM("AM"),
        AW("AW"),
        AU("AU"),
        AT("AT"),
        AZ("AZ"),
        BS("BS"),
        BH("BH"),
        BD("BD"),
        BB("BB"),
        BY("BY"),
        BE("BE"),
        BZ("BZ"),
        BJ("BJ"),
        BM("BM"),
        BT("BT"),
        BO("BO"),
        BQ("BQ"),
        BA("BA"),
        BW("BW"),
        BV("BV"),
        BR("BR"),
        IO("IO"),
        BN("BN"),
        BG("BG"),
        BF("BF"),
        BI("BI"),
        KH("KH"),
        CM("CM"),
        CA("CA"),
        CV("CV"),
        KY("KY"),
        CF("CF"),
        TD("TD"),
        CL("CL"),
        CN("CN"),
        CX("CX"),
        CC("CC"),
        CO("CO"),
        KM("KM"),
        CG("CG"),
        CD("CD"),
        CK("CK"),
        CR("CR"),
        HR("HR"),
        CU("CU"),
        CW("CW"),
        CY("CY"),
        CZ("CZ"),
        CI("CI"),
        DK("DK"),
        DJ("DJ"),
        DM("DM"),
        DO("DO"),
        EC("EC"),
        EG("EG"),
        SV("SV"),
        GQ("GQ"),
        ER("ER"),
        EE("EE"),
        ET("ET"),
        FK("FK"),
        FO("FO"),
        FJ("FJ"),
        FI("FI"),
        FR("FR"),
        GF("GF"),
        PF("PF"),
        TF("TF"),
        GA("GA"),
        GM("GM"),
        GE("GE"),
        DE("DE"),
        GH("GH"),
        GI("GI"),
        GR("GR"),
        GL("GL"),
        GD("GD"),
        GP("GP"),
        GU("GU"),
        GT("GT"),
        GG("GG"),
        GN("GN"),
        GW("GW"),
        GY("GY"),
        HT("HT"),
        HM("HM"),
        VA("VA"),
        HN("HN"),
        HK("HK"),
        HU("HU"),
        IS("IS"),
        IN("IN"),
        ID("ID"),
        IR("IR"),
        IQ("IQ"),
        IE("IE"),
        IM("IM"),
        IL("IL"),
        IT("IT"),
        JM("JM"),
        JP("JP"),
        JE("JE"),
        JO("JO"),
        KZ("KZ"),
        KE("KE"),
        KI("KI"),
        KP("KP"),
        KR("KR"),
        KW("KW"),
        KG("KG"),
        LA("LA"),
        LV("LV"),
        LB("LB"),
        LS("LS"),
        LR("LR"),
        LY("LY"),
        LI("LI"),
        LT("LT"),
        LU("LU"),
        MO("MO"),
        MK("MK"),
        MG("MG"),
        MW("MW"),
        MY("MY"),
        MV("MV"),
        ML("ML"),
        MT("MT"),
        MH("MH"),
        MQ("MQ"),
        MR("MR"),
        MU("MU"),
        YT("YT"),
        MX("MX"),
        FM("FM"),
        MD("MD"),
        MC("MC"),
        MN("MN"),
        ME("ME"),
        MS("MS"),
        MA("MA"),
        MZ("MZ"),
        MM("MM"),
        NA("NA"),
        NR("NR"),
        NP("NP"),
        NL("NL"),
        NC("NC"),
        NZ("NZ"),
        NI("NI"),
        NE("NE"),
        NG("NG"),
        NU("NU"),
        NF("NF"),
        MP("MP"),
        NO("NO"),
        OM("OM"),
        PK("PK"),
        PW("PW"),
        PS("PS"),
        PA("PA"),
        PG("PG"),
        PY("PY"),
        PE("PE"),
        PH("PH"),
        PN("PN"),
        PL("PL"),
        PT("PT"),
        PR("PR"),
        QA("QA"),
        RO("RO"),
        RU("RU"),
        RW("RW"),
        RE("RE"),
        BL("BL"),
        SH("SH"),
        KN("KN"),
        LC("LC"),
        MF("MF"),
        PM("PM"),
        VC("VC"),
        WS("WS"),
        SM("SM"),
        ST("ST"),
        SA("SA"),
        SN("SN"),
        RS("RS"),
        SC("SC"),
        SL("SL"),
        SG("SG"),
        SX("SX"),
        SK("SK"),
        SI("SI"),
        SB("SB"),
        SO("SO"),
        ZA("ZA"),
        GS("GS"),
        SS("SS"),
        ES("ES"),
        LK("LK"),
        SD("SD"),
        SR("SR"),
        SJ("SJ"),
        SZ("SZ"),
        SE("SE"),
        CH("CH"),
        SY("SY"),
        TW("TW"),
        TJ("TJ"),
        TZ("TZ"),
        TH("TH"),
        TL("TL"),
        TG("TG"),
        TK("TK"),
        TO("TO"),
        TT("TT"),
        TN("TN"),
        TR("TR"),
        TM("TM"),
        TC("TC"),
        TV("TV"),
        UG("UG"),
        UA("UA"),
        AE("AE"),
        GB("GB"),
        US("US"),
        UM("UM"),
        UY("UY"),
        UZ("UZ"),
        VU("VU"),
        VE("VE"),
        VN("VN"),
        VG("VG"),
        VI("VI"),
        WF("WF"),
        EH("EH"),
        YE("YE"),
        ZM("ZM"),
        ZW("ZW"),
        UNMAPPED_VALUE("unmapped_value"),;

        private final String value;

        private EmployeeWorkLocationValueEnum(String value) {
            this.value = value;
        }

        public String value() {
            return value;
        }
    }
}
