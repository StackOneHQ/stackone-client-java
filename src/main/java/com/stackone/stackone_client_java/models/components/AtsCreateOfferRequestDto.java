/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.stackone.stackone_client_java.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Double;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class AtsCreateOfferRequestDto {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("application_id")
    private JsonNullable<String> applicationId;

    /**
     * Date of creation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_date")
    private JsonNullable<OffsetDateTime> startDate;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offer_status")
    private JsonNullable<? extends AtsCreateOfferRequestDtoOfferStatus> offerStatus;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salary")
    private JsonNullable<Double> salary;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    private JsonNullable<String> currency;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offer_history")
    private JsonNullable<? extends List<OfferHistory>> offerHistory;

    /**
     * Value to pass through to the provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passthrough")
    private JsonNullable<? extends Map<String, Object>> passthrough;

    @JsonCreator
    public AtsCreateOfferRequestDto(
            @JsonProperty("application_id") JsonNullable<String> applicationId,
            @JsonProperty("start_date") JsonNullable<OffsetDateTime> startDate,
            @JsonProperty("offer_status") JsonNullable<? extends AtsCreateOfferRequestDtoOfferStatus> offerStatus,
            @JsonProperty("salary") JsonNullable<Double> salary,
            @JsonProperty("currency") JsonNullable<String> currency,
            @JsonProperty("offer_history") JsonNullable<? extends List<OfferHistory>> offerHistory,
            @JsonProperty("passthrough") JsonNullable<? extends Map<String, Object>> passthrough) {
        Utils.checkNotNull(applicationId, "applicationId");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(offerStatus, "offerStatus");
        Utils.checkNotNull(salary, "salary");
        Utils.checkNotNull(currency, "currency");
        Utils.checkNotNull(offerHistory, "offerHistory");
        Utils.checkNotNull(passthrough, "passthrough");
        this.applicationId = applicationId;
        this.startDate = startDate;
        this.offerStatus = offerStatus;
        this.salary = salary;
        this.currency = currency;
        this.offerHistory = offerHistory;
        this.passthrough = passthrough;
    }
    
    public AtsCreateOfferRequestDto() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> applicationId() {
        return applicationId;
    }

    /**
     * Date of creation
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> startDate() {
        return startDate;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AtsCreateOfferRequestDtoOfferStatus> offerStatus() {
        return (JsonNullable<AtsCreateOfferRequestDtoOfferStatus>) offerStatus;
    }

    @JsonIgnore
    public JsonNullable<Double> salary() {
        return salary;
    }

    @JsonIgnore
    public JsonNullable<String> currency() {
        return currency;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<OfferHistory>> offerHistory() {
        return (JsonNullable<List<OfferHistory>>) offerHistory;
    }

    /**
     * Value to pass through to the provider
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, Object>> passthrough() {
        return (JsonNullable<Map<String, Object>>) passthrough;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AtsCreateOfferRequestDto withApplicationId(String applicationId) {
        Utils.checkNotNull(applicationId, "applicationId");
        this.applicationId = JsonNullable.of(applicationId);
        return this;
    }

    public AtsCreateOfferRequestDto withApplicationId(JsonNullable<String> applicationId) {
        Utils.checkNotNull(applicationId, "applicationId");
        this.applicationId = applicationId;
        return this;
    }

    /**
     * Date of creation
     */
    public AtsCreateOfferRequestDto withStartDate(OffsetDateTime startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = JsonNullable.of(startDate);
        return this;
    }

    /**
     * Date of creation
     */
    public AtsCreateOfferRequestDto withStartDate(JsonNullable<OffsetDateTime> startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    public AtsCreateOfferRequestDto withOfferStatus(AtsCreateOfferRequestDtoOfferStatus offerStatus) {
        Utils.checkNotNull(offerStatus, "offerStatus");
        this.offerStatus = JsonNullable.of(offerStatus);
        return this;
    }

    public AtsCreateOfferRequestDto withOfferStatus(JsonNullable<? extends AtsCreateOfferRequestDtoOfferStatus> offerStatus) {
        Utils.checkNotNull(offerStatus, "offerStatus");
        this.offerStatus = offerStatus;
        return this;
    }

    public AtsCreateOfferRequestDto withSalary(double salary) {
        Utils.checkNotNull(salary, "salary");
        this.salary = JsonNullable.of(salary);
        return this;
    }

    public AtsCreateOfferRequestDto withSalary(JsonNullable<Double> salary) {
        Utils.checkNotNull(salary, "salary");
        this.salary = salary;
        return this;
    }

    public AtsCreateOfferRequestDto withCurrency(String currency) {
        Utils.checkNotNull(currency, "currency");
        this.currency = JsonNullable.of(currency);
        return this;
    }

    public AtsCreateOfferRequestDto withCurrency(JsonNullable<String> currency) {
        Utils.checkNotNull(currency, "currency");
        this.currency = currency;
        return this;
    }

    public AtsCreateOfferRequestDto withOfferHistory(List<OfferHistory> offerHistory) {
        Utils.checkNotNull(offerHistory, "offerHistory");
        this.offerHistory = JsonNullable.of(offerHistory);
        return this;
    }

    public AtsCreateOfferRequestDto withOfferHistory(JsonNullable<? extends List<OfferHistory>> offerHistory) {
        Utils.checkNotNull(offerHistory, "offerHistory");
        this.offerHistory = offerHistory;
        return this;
    }

    /**
     * Value to pass through to the provider
     */
    public AtsCreateOfferRequestDto withPassthrough(Map<String, Object> passthrough) {
        Utils.checkNotNull(passthrough, "passthrough");
        this.passthrough = JsonNullable.of(passthrough);
        return this;
    }

    /**
     * Value to pass through to the provider
     */
    public AtsCreateOfferRequestDto withPassthrough(JsonNullable<? extends Map<String, Object>> passthrough) {
        Utils.checkNotNull(passthrough, "passthrough");
        this.passthrough = passthrough;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AtsCreateOfferRequestDto other = (AtsCreateOfferRequestDto) o;
        return 
            Objects.deepEquals(this.applicationId, other.applicationId) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.offerStatus, other.offerStatus) &&
            Objects.deepEquals(this.salary, other.salary) &&
            Objects.deepEquals(this.currency, other.currency) &&
            Objects.deepEquals(this.offerHistory, other.offerHistory) &&
            Objects.deepEquals(this.passthrough, other.passthrough);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            applicationId,
            startDate,
            offerStatus,
            salary,
            currency,
            offerHistory,
            passthrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AtsCreateOfferRequestDto.class,
                "applicationId", applicationId,
                "startDate", startDate,
                "offerStatus", offerStatus,
                "salary", salary,
                "currency", currency,
                "offerHistory", offerHistory,
                "passthrough", passthrough);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> applicationId = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> startDate = JsonNullable.undefined();
 
        private JsonNullable<? extends AtsCreateOfferRequestDtoOfferStatus> offerStatus = JsonNullable.undefined();
 
        private JsonNullable<Double> salary = JsonNullable.undefined();
 
        private JsonNullable<String> currency = JsonNullable.undefined();
 
        private JsonNullable<? extends List<OfferHistory>> offerHistory = JsonNullable.undefined();
 
        private JsonNullable<? extends Map<String, Object>> passthrough = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder applicationId(String applicationId) {
            Utils.checkNotNull(applicationId, "applicationId");
            this.applicationId = JsonNullable.of(applicationId);
            return this;
        }

        public Builder applicationId(JsonNullable<String> applicationId) {
            Utils.checkNotNull(applicationId, "applicationId");
            this.applicationId = applicationId;
            return this;
        }

        /**
         * Date of creation
         */
        public Builder startDate(OffsetDateTime startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = JsonNullable.of(startDate);
            return this;
        }

        /**
         * Date of creation
         */
        public Builder startDate(JsonNullable<OffsetDateTime> startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        public Builder offerStatus(AtsCreateOfferRequestDtoOfferStatus offerStatus) {
            Utils.checkNotNull(offerStatus, "offerStatus");
            this.offerStatus = JsonNullable.of(offerStatus);
            return this;
        }

        public Builder offerStatus(JsonNullable<? extends AtsCreateOfferRequestDtoOfferStatus> offerStatus) {
            Utils.checkNotNull(offerStatus, "offerStatus");
            this.offerStatus = offerStatus;
            return this;
        }

        public Builder salary(double salary) {
            Utils.checkNotNull(salary, "salary");
            this.salary = JsonNullable.of(salary);
            return this;
        }

        public Builder salary(JsonNullable<Double> salary) {
            Utils.checkNotNull(salary, "salary");
            this.salary = salary;
            return this;
        }

        public Builder currency(String currency) {
            Utils.checkNotNull(currency, "currency");
            this.currency = JsonNullable.of(currency);
            return this;
        }

        public Builder currency(JsonNullable<String> currency) {
            Utils.checkNotNull(currency, "currency");
            this.currency = currency;
            return this;
        }

        public Builder offerHistory(List<OfferHistory> offerHistory) {
            Utils.checkNotNull(offerHistory, "offerHistory");
            this.offerHistory = JsonNullable.of(offerHistory);
            return this;
        }

        public Builder offerHistory(JsonNullable<? extends List<OfferHistory>> offerHistory) {
            Utils.checkNotNull(offerHistory, "offerHistory");
            this.offerHistory = offerHistory;
            return this;
        }

        /**
         * Value to pass through to the provider
         */
        public Builder passthrough(Map<String, Object> passthrough) {
            Utils.checkNotNull(passthrough, "passthrough");
            this.passthrough = JsonNullable.of(passthrough);
            return this;
        }

        /**
         * Value to pass through to the provider
         */
        public Builder passthrough(JsonNullable<? extends Map<String, Object>> passthrough) {
            Utils.checkNotNull(passthrough, "passthrough");
            this.passthrough = passthrough;
            return this;
        }
        
        public AtsCreateOfferRequestDto build() {
            return new AtsCreateOfferRequestDto(
                applicationId,
                startDate,
                offerStatus,
                salary,
                currency,
                offerHistory,
                passthrough);
        }
    }
}

