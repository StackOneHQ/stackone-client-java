/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class ProviderErrorApiModel {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private JsonNullable<Double> status;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    private JsonNullable<String> url;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("raw")
    private JsonNullable<? extends ProviderErrorApiModelRaw> raw;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    private JsonNullable<? extends ProviderErrorApiModelHeaders> headers;

    @JsonCreator
    public ProviderErrorApiModel(
            @JsonProperty("status") JsonNullable<Double> status,
            @JsonProperty("url") JsonNullable<String> url,
            @JsonProperty("raw") JsonNullable<? extends ProviderErrorApiModelRaw> raw,
            @JsonProperty("headers") JsonNullable<? extends ProviderErrorApiModelHeaders> headers) {
        Utils.checkNotNull(status, "status");
        Utils.checkNotNull(url, "url");
        Utils.checkNotNull(raw, "raw");
        Utils.checkNotNull(headers, "headers");
        this.status = status;
        this.url = url;
        this.raw = raw;
        this.headers = headers;
    }
    
    public ProviderErrorApiModel() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<Double> status() {
        return status;
    }

    @JsonIgnore
    public JsonNullable<String> url() {
        return url;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ProviderErrorApiModelRaw> raw() {
        return (JsonNullable<ProviderErrorApiModelRaw>) raw;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ProviderErrorApiModelHeaders> headers() {
        return (JsonNullable<ProviderErrorApiModelHeaders>) headers;
    }

    public static Builder builder() {
        return new Builder();
    }


    public ProviderErrorApiModel withStatus(double status) {
        Utils.checkNotNull(status, "status");
        this.status = JsonNullable.of(status);
        return this;
    }

    public ProviderErrorApiModel withStatus(JsonNullable<Double> status) {
        Utils.checkNotNull(status, "status");
        this.status = status;
        return this;
    }

    public ProviderErrorApiModel withUrl(String url) {
        Utils.checkNotNull(url, "url");
        this.url = JsonNullable.of(url);
        return this;
    }

    public ProviderErrorApiModel withUrl(JsonNullable<String> url) {
        Utils.checkNotNull(url, "url");
        this.url = url;
        return this;
    }

    public ProviderErrorApiModel withRaw(ProviderErrorApiModelRaw raw) {
        Utils.checkNotNull(raw, "raw");
        this.raw = JsonNullable.of(raw);
        return this;
    }

    public ProviderErrorApiModel withRaw(JsonNullable<? extends ProviderErrorApiModelRaw> raw) {
        Utils.checkNotNull(raw, "raw");
        this.raw = raw;
        return this;
    }

    public ProviderErrorApiModel withHeaders(ProviderErrorApiModelHeaders headers) {
        Utils.checkNotNull(headers, "headers");
        this.headers = JsonNullable.of(headers);
        return this;
    }

    public ProviderErrorApiModel withHeaders(JsonNullable<? extends ProviderErrorApiModelHeaders> headers) {
        Utils.checkNotNull(headers, "headers");
        this.headers = headers;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProviderErrorApiModel other = (ProviderErrorApiModel) o;
        return 
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.url, other.url) &&
            Utils.enhancedDeepEquals(this.raw, other.raw) &&
            Utils.enhancedDeepEquals(this.headers, other.headers);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            status, url, raw,
            headers);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProviderErrorApiModel.class,
                "status", status,
                "url", url,
                "raw", raw,
                "headers", headers);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Double> status = JsonNullable.undefined();

        private JsonNullable<String> url = JsonNullable.undefined();

        private JsonNullable<? extends ProviderErrorApiModelRaw> raw = JsonNullable.undefined();

        private JsonNullable<? extends ProviderErrorApiModelHeaders> headers = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder status(double status) {
            Utils.checkNotNull(status, "status");
            this.status = JsonNullable.of(status);
            return this;
        }

        public Builder status(JsonNullable<Double> status) {
            Utils.checkNotNull(status, "status");
            this.status = status;
            return this;
        }


        public Builder url(String url) {
            Utils.checkNotNull(url, "url");
            this.url = JsonNullable.of(url);
            return this;
        }

        public Builder url(JsonNullable<String> url) {
            Utils.checkNotNull(url, "url");
            this.url = url;
            return this;
        }


        public Builder raw(ProviderErrorApiModelRaw raw) {
            Utils.checkNotNull(raw, "raw");
            this.raw = JsonNullable.of(raw);
            return this;
        }

        public Builder raw(JsonNullable<? extends ProviderErrorApiModelRaw> raw) {
            Utils.checkNotNull(raw, "raw");
            this.raw = raw;
            return this;
        }


        public Builder headers(ProviderErrorApiModelHeaders headers) {
            Utils.checkNotNull(headers, "headers");
            this.headers = JsonNullable.of(headers);
            return this;
        }

        public Builder headers(JsonNullable<? extends ProviderErrorApiModelHeaders> headers) {
            Utils.checkNotNull(headers, "headers");
            this.headers = headers;
            return this;
        }

        public ProviderErrorApiModel build() {

            return new ProviderErrorApiModel(
                status, url, raw,
                headers);
        }

    }
}
