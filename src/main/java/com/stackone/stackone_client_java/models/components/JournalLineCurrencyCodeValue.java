/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.core.JacksonException;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

/**
 * <p>Wrapper class for an "open" enum. "Open" enums are those that are expected
 * to evolve (particularly with the addition of enum members over time). If an
 * open enum is used then the appearance of unexpected enum values (say in a 
 * response from an updated an API) will not bring about a runtime error thus 
 * ensuring that non-updated client versions can continue to work without error.
 *
 * <p>Note that instances are immutable and are singletons (an internal thread-safe
 * cache is maintained to ensure that). As a consequence instances created with the 
 * same value will satisfy reference equality (via {@code ==}).
 * 
 * <p>This class is intended to emulate an enum (in terms of common usage and with 
 * reference equality) but with the ability to carry unknown values. Unfortunately
 * Java does not permit the use of an instance in a switch expression but you can 
 * use the {@code asEnum()} method (after dealing with the `Optional` appropriately).
 *
 */
/**
 * JournalLineCurrencyCodeValue
 * 
 * <p>Default currency for the company
 */
@JsonDeserialize(using = JournalLineCurrencyCodeValue._Deserializer.class)
@JsonSerialize(using = JournalLineCurrencyCodeValue._Serializer.class)
public class JournalLineCurrencyCodeValue {

    public static final JournalLineCurrencyCodeValue AED = new JournalLineCurrencyCodeValue("AED");
    public static final JournalLineCurrencyCodeValue AFN = new JournalLineCurrencyCodeValue("AFN");
    public static final JournalLineCurrencyCodeValue ALL = new JournalLineCurrencyCodeValue("ALL");
    public static final JournalLineCurrencyCodeValue AMD = new JournalLineCurrencyCodeValue("AMD");
    public static final JournalLineCurrencyCodeValue ANG = new JournalLineCurrencyCodeValue("ANG");
    public static final JournalLineCurrencyCodeValue AOA = new JournalLineCurrencyCodeValue("AOA");
    public static final JournalLineCurrencyCodeValue ARS = new JournalLineCurrencyCodeValue("ARS");
    public static final JournalLineCurrencyCodeValue AUD = new JournalLineCurrencyCodeValue("AUD");
    public static final JournalLineCurrencyCodeValue AWG = new JournalLineCurrencyCodeValue("AWG");
    public static final JournalLineCurrencyCodeValue AZN = new JournalLineCurrencyCodeValue("AZN");
    public static final JournalLineCurrencyCodeValue BAM = new JournalLineCurrencyCodeValue("BAM");
    public static final JournalLineCurrencyCodeValue BBD = new JournalLineCurrencyCodeValue("BBD");
    public static final JournalLineCurrencyCodeValue BDT = new JournalLineCurrencyCodeValue("BDT");
    public static final JournalLineCurrencyCodeValue BGN = new JournalLineCurrencyCodeValue("BGN");
    public static final JournalLineCurrencyCodeValue BHD = new JournalLineCurrencyCodeValue("BHD");
    public static final JournalLineCurrencyCodeValue BIF = new JournalLineCurrencyCodeValue("BIF");
    public static final JournalLineCurrencyCodeValue BMD = new JournalLineCurrencyCodeValue("BMD");
    public static final JournalLineCurrencyCodeValue BND = new JournalLineCurrencyCodeValue("BND");
    public static final JournalLineCurrencyCodeValue BOB = new JournalLineCurrencyCodeValue("BOB");
    public static final JournalLineCurrencyCodeValue BRL = new JournalLineCurrencyCodeValue("BRL");
    public static final JournalLineCurrencyCodeValue BSD = new JournalLineCurrencyCodeValue("BSD");
    public static final JournalLineCurrencyCodeValue BTN = new JournalLineCurrencyCodeValue("BTN");
    public static final JournalLineCurrencyCodeValue BWP = new JournalLineCurrencyCodeValue("BWP");
    public static final JournalLineCurrencyCodeValue BYN = new JournalLineCurrencyCodeValue("BYN");
    public static final JournalLineCurrencyCodeValue BZD = new JournalLineCurrencyCodeValue("BZD");
    public static final JournalLineCurrencyCodeValue CAD = new JournalLineCurrencyCodeValue("CAD");
    public static final JournalLineCurrencyCodeValue CDF = new JournalLineCurrencyCodeValue("CDF");
    public static final JournalLineCurrencyCodeValue CHF = new JournalLineCurrencyCodeValue("CHF");
    public static final JournalLineCurrencyCodeValue CLP = new JournalLineCurrencyCodeValue("CLP");
    public static final JournalLineCurrencyCodeValue CNY = new JournalLineCurrencyCodeValue("CNY");
    public static final JournalLineCurrencyCodeValue COP = new JournalLineCurrencyCodeValue("COP");
    public static final JournalLineCurrencyCodeValue CRC = new JournalLineCurrencyCodeValue("CRC");
    public static final JournalLineCurrencyCodeValue CUC = new JournalLineCurrencyCodeValue("CUC");
    public static final JournalLineCurrencyCodeValue CUP = new JournalLineCurrencyCodeValue("CUP");
    public static final JournalLineCurrencyCodeValue CVE = new JournalLineCurrencyCodeValue("CVE");
    public static final JournalLineCurrencyCodeValue CZK = new JournalLineCurrencyCodeValue("CZK");
    public static final JournalLineCurrencyCodeValue DJF = new JournalLineCurrencyCodeValue("DJF");
    public static final JournalLineCurrencyCodeValue DKK = new JournalLineCurrencyCodeValue("DKK");
    public static final JournalLineCurrencyCodeValue DOP = new JournalLineCurrencyCodeValue("DOP");
    public static final JournalLineCurrencyCodeValue DZD = new JournalLineCurrencyCodeValue("DZD");
    public static final JournalLineCurrencyCodeValue EGP = new JournalLineCurrencyCodeValue("EGP");
    public static final JournalLineCurrencyCodeValue ERN = new JournalLineCurrencyCodeValue("ERN");
    public static final JournalLineCurrencyCodeValue ETB = new JournalLineCurrencyCodeValue("ETB");
    public static final JournalLineCurrencyCodeValue EUR = new JournalLineCurrencyCodeValue("EUR");
    public static final JournalLineCurrencyCodeValue FJD = new JournalLineCurrencyCodeValue("FJD");
    public static final JournalLineCurrencyCodeValue FKP = new JournalLineCurrencyCodeValue("FKP");
    public static final JournalLineCurrencyCodeValue GBP = new JournalLineCurrencyCodeValue("GBP");
    public static final JournalLineCurrencyCodeValue GEL = new JournalLineCurrencyCodeValue("GEL");
    public static final JournalLineCurrencyCodeValue GHS = new JournalLineCurrencyCodeValue("GHS");
    public static final JournalLineCurrencyCodeValue GIP = new JournalLineCurrencyCodeValue("GIP");
    public static final JournalLineCurrencyCodeValue GMD = new JournalLineCurrencyCodeValue("GMD");
    public static final JournalLineCurrencyCodeValue GNF = new JournalLineCurrencyCodeValue("GNF");
    public static final JournalLineCurrencyCodeValue GTQ = new JournalLineCurrencyCodeValue("GTQ");
    public static final JournalLineCurrencyCodeValue GYD = new JournalLineCurrencyCodeValue("GYD");
    public static final JournalLineCurrencyCodeValue HKD = new JournalLineCurrencyCodeValue("HKD");
    public static final JournalLineCurrencyCodeValue HNL = new JournalLineCurrencyCodeValue("HNL");
    public static final JournalLineCurrencyCodeValue HRK = new JournalLineCurrencyCodeValue("HRK");
    public static final JournalLineCurrencyCodeValue HTG = new JournalLineCurrencyCodeValue("HTG");
    public static final JournalLineCurrencyCodeValue HUF = new JournalLineCurrencyCodeValue("HUF");
    public static final JournalLineCurrencyCodeValue IDR = new JournalLineCurrencyCodeValue("IDR");
    public static final JournalLineCurrencyCodeValue ILS = new JournalLineCurrencyCodeValue("ILS");
    public static final JournalLineCurrencyCodeValue INR = new JournalLineCurrencyCodeValue("INR");
    public static final JournalLineCurrencyCodeValue IQD = new JournalLineCurrencyCodeValue("IQD");
    public static final JournalLineCurrencyCodeValue IRR = new JournalLineCurrencyCodeValue("IRR");
    public static final JournalLineCurrencyCodeValue ISK = new JournalLineCurrencyCodeValue("ISK");
    public static final JournalLineCurrencyCodeValue JMD = new JournalLineCurrencyCodeValue("JMD");
    public static final JournalLineCurrencyCodeValue JOD = new JournalLineCurrencyCodeValue("JOD");
    public static final JournalLineCurrencyCodeValue JPY = new JournalLineCurrencyCodeValue("JPY");
    public static final JournalLineCurrencyCodeValue KES = new JournalLineCurrencyCodeValue("KES");
    public static final JournalLineCurrencyCodeValue KGS = new JournalLineCurrencyCodeValue("KGS");
    public static final JournalLineCurrencyCodeValue KHR = new JournalLineCurrencyCodeValue("KHR");
    public static final JournalLineCurrencyCodeValue KMF = new JournalLineCurrencyCodeValue("KMF");
    public static final JournalLineCurrencyCodeValue KPW = new JournalLineCurrencyCodeValue("KPW");
    public static final JournalLineCurrencyCodeValue KRW = new JournalLineCurrencyCodeValue("KRW");
    public static final JournalLineCurrencyCodeValue KWD = new JournalLineCurrencyCodeValue("KWD");
    public static final JournalLineCurrencyCodeValue KYD = new JournalLineCurrencyCodeValue("KYD");
    public static final JournalLineCurrencyCodeValue KZT = new JournalLineCurrencyCodeValue("KZT");
    public static final JournalLineCurrencyCodeValue LAK = new JournalLineCurrencyCodeValue("LAK");
    public static final JournalLineCurrencyCodeValue LBP = new JournalLineCurrencyCodeValue("LBP");
    public static final JournalLineCurrencyCodeValue LKR = new JournalLineCurrencyCodeValue("LKR");
    public static final JournalLineCurrencyCodeValue LRD = new JournalLineCurrencyCodeValue("LRD");
    public static final JournalLineCurrencyCodeValue LSL = new JournalLineCurrencyCodeValue("LSL");
    public static final JournalLineCurrencyCodeValue LYD = new JournalLineCurrencyCodeValue("LYD");
    public static final JournalLineCurrencyCodeValue MAD = new JournalLineCurrencyCodeValue("MAD");
    public static final JournalLineCurrencyCodeValue MDL = new JournalLineCurrencyCodeValue("MDL");
    public static final JournalLineCurrencyCodeValue MGA = new JournalLineCurrencyCodeValue("MGA");
    public static final JournalLineCurrencyCodeValue MKD = new JournalLineCurrencyCodeValue("MKD");
    public static final JournalLineCurrencyCodeValue MMK = new JournalLineCurrencyCodeValue("MMK");
    public static final JournalLineCurrencyCodeValue MNT = new JournalLineCurrencyCodeValue("MNT");
    public static final JournalLineCurrencyCodeValue MOP = new JournalLineCurrencyCodeValue("MOP");
    public static final JournalLineCurrencyCodeValue MRU = new JournalLineCurrencyCodeValue("MRU");
    public static final JournalLineCurrencyCodeValue MUR = new JournalLineCurrencyCodeValue("MUR");
    public static final JournalLineCurrencyCodeValue MVR = new JournalLineCurrencyCodeValue("MVR");
    public static final JournalLineCurrencyCodeValue MWK = new JournalLineCurrencyCodeValue("MWK");
    public static final JournalLineCurrencyCodeValue MXN = new JournalLineCurrencyCodeValue("MXN");
    public static final JournalLineCurrencyCodeValue MYR = new JournalLineCurrencyCodeValue("MYR");
    public static final JournalLineCurrencyCodeValue MZN = new JournalLineCurrencyCodeValue("MZN");
    public static final JournalLineCurrencyCodeValue NAD = new JournalLineCurrencyCodeValue("NAD");
    public static final JournalLineCurrencyCodeValue NGN = new JournalLineCurrencyCodeValue("NGN");
    public static final JournalLineCurrencyCodeValue NIO = new JournalLineCurrencyCodeValue("NIO");
    public static final JournalLineCurrencyCodeValue NOK = new JournalLineCurrencyCodeValue("NOK");
    public static final JournalLineCurrencyCodeValue NPR = new JournalLineCurrencyCodeValue("NPR");
    public static final JournalLineCurrencyCodeValue NZD = new JournalLineCurrencyCodeValue("NZD");
    public static final JournalLineCurrencyCodeValue OMR = new JournalLineCurrencyCodeValue("OMR");
    public static final JournalLineCurrencyCodeValue PAB = new JournalLineCurrencyCodeValue("PAB");
    public static final JournalLineCurrencyCodeValue PEN = new JournalLineCurrencyCodeValue("PEN");
    public static final JournalLineCurrencyCodeValue PGK = new JournalLineCurrencyCodeValue("PGK");
    public static final JournalLineCurrencyCodeValue PHP = new JournalLineCurrencyCodeValue("PHP");
    public static final JournalLineCurrencyCodeValue PKR = new JournalLineCurrencyCodeValue("PKR");
    public static final JournalLineCurrencyCodeValue PLN = new JournalLineCurrencyCodeValue("PLN");
    public static final JournalLineCurrencyCodeValue PYG = new JournalLineCurrencyCodeValue("PYG");
    public static final JournalLineCurrencyCodeValue QAR = new JournalLineCurrencyCodeValue("QAR");
    public static final JournalLineCurrencyCodeValue RON = new JournalLineCurrencyCodeValue("RON");
    public static final JournalLineCurrencyCodeValue RSD = new JournalLineCurrencyCodeValue("RSD");
    public static final JournalLineCurrencyCodeValue RUB = new JournalLineCurrencyCodeValue("RUB");
    public static final JournalLineCurrencyCodeValue RWF = new JournalLineCurrencyCodeValue("RWF");
    public static final JournalLineCurrencyCodeValue SAR = new JournalLineCurrencyCodeValue("SAR");
    public static final JournalLineCurrencyCodeValue SBD = new JournalLineCurrencyCodeValue("SBD");
    public static final JournalLineCurrencyCodeValue SCR = new JournalLineCurrencyCodeValue("SCR");
    public static final JournalLineCurrencyCodeValue SDG = new JournalLineCurrencyCodeValue("SDG");
    public static final JournalLineCurrencyCodeValue SEK = new JournalLineCurrencyCodeValue("SEK");
    public static final JournalLineCurrencyCodeValue SGD = new JournalLineCurrencyCodeValue("SGD");
    public static final JournalLineCurrencyCodeValue SHP = new JournalLineCurrencyCodeValue("SHP");
    public static final JournalLineCurrencyCodeValue SLL = new JournalLineCurrencyCodeValue("SLL");
    public static final JournalLineCurrencyCodeValue SOS = new JournalLineCurrencyCodeValue("SOS");
    public static final JournalLineCurrencyCodeValue SRD = new JournalLineCurrencyCodeValue("SRD");
    public static final JournalLineCurrencyCodeValue SSP = new JournalLineCurrencyCodeValue("SSP");
    public static final JournalLineCurrencyCodeValue STN = new JournalLineCurrencyCodeValue("STN");
    public static final JournalLineCurrencyCodeValue SYP = new JournalLineCurrencyCodeValue("SYP");
    public static final JournalLineCurrencyCodeValue SZL = new JournalLineCurrencyCodeValue("SZL");
    public static final JournalLineCurrencyCodeValue THB = new JournalLineCurrencyCodeValue("THB");
    public static final JournalLineCurrencyCodeValue TJS = new JournalLineCurrencyCodeValue("TJS");
    public static final JournalLineCurrencyCodeValue TMT = new JournalLineCurrencyCodeValue("TMT");
    public static final JournalLineCurrencyCodeValue TND = new JournalLineCurrencyCodeValue("TND");
    public static final JournalLineCurrencyCodeValue TOP = new JournalLineCurrencyCodeValue("TOP");
    public static final JournalLineCurrencyCodeValue TRY = new JournalLineCurrencyCodeValue("TRY");
    public static final JournalLineCurrencyCodeValue TTD = new JournalLineCurrencyCodeValue("TTD");
    public static final JournalLineCurrencyCodeValue TWD = new JournalLineCurrencyCodeValue("TWD");
    public static final JournalLineCurrencyCodeValue TZS = new JournalLineCurrencyCodeValue("TZS");
    public static final JournalLineCurrencyCodeValue UAH = new JournalLineCurrencyCodeValue("UAH");
    public static final JournalLineCurrencyCodeValue UGX = new JournalLineCurrencyCodeValue("UGX");
    public static final JournalLineCurrencyCodeValue USD = new JournalLineCurrencyCodeValue("USD");
    public static final JournalLineCurrencyCodeValue UYU = new JournalLineCurrencyCodeValue("UYU");
    public static final JournalLineCurrencyCodeValue UZS = new JournalLineCurrencyCodeValue("UZS");
    public static final JournalLineCurrencyCodeValue VES = new JournalLineCurrencyCodeValue("VES");
    public static final JournalLineCurrencyCodeValue VND = new JournalLineCurrencyCodeValue("VND");
    public static final JournalLineCurrencyCodeValue VUV = new JournalLineCurrencyCodeValue("VUV");
    public static final JournalLineCurrencyCodeValue WST = new JournalLineCurrencyCodeValue("WST");
    public static final JournalLineCurrencyCodeValue XAF = new JournalLineCurrencyCodeValue("XAF");
    public static final JournalLineCurrencyCodeValue XCD = new JournalLineCurrencyCodeValue("XCD");
    public static final JournalLineCurrencyCodeValue XDR = new JournalLineCurrencyCodeValue("XDR");
    public static final JournalLineCurrencyCodeValue XOF = new JournalLineCurrencyCodeValue("XOF");
    public static final JournalLineCurrencyCodeValue XPF = new JournalLineCurrencyCodeValue("XPF");
    public static final JournalLineCurrencyCodeValue YER = new JournalLineCurrencyCodeValue("YER");
    public static final JournalLineCurrencyCodeValue ZAR = new JournalLineCurrencyCodeValue("ZAR");
    public static final JournalLineCurrencyCodeValue ZMW = new JournalLineCurrencyCodeValue("ZMW");
    public static final JournalLineCurrencyCodeValue ZWL = new JournalLineCurrencyCodeValue("ZWL");
    public static final JournalLineCurrencyCodeValue UNMAPPED_VALUE = new JournalLineCurrencyCodeValue("unmapped_value");

    // This map will grow whenever a Color gets created with a new
    // unrecognized value (a potential memory leak if the user is not
    // careful). Keep this field lower case to avoid clashing with
    // generated member names which will always be upper cased (Java
    // convention)
    private static final Map<String, JournalLineCurrencyCodeValue> values = createValuesMap();
    private static final Map<String, JournalLineCurrencyCodeValueEnum> enums = createEnumsMap();

    private final String value;

    private JournalLineCurrencyCodeValue(String value) {
        this.value = value;
    }

    /**
     * Returns a JournalLineCurrencyCodeValue with the given value. For a specific value the 
     * returned object will always be a singleton so reference equality 
     * is satisfied when the values are the same.
     * 
     * @param value value to be wrapped as JournalLineCurrencyCodeValue
     */ 
    public static JournalLineCurrencyCodeValue of(String value) {
        synchronized (JournalLineCurrencyCodeValue.class) {
            return values.computeIfAbsent(value, v -> new JournalLineCurrencyCodeValue(v));
        }
    }

    public String value() {
        return value;
    }

    public Optional<JournalLineCurrencyCodeValueEnum> asEnum() {
        return Optional.ofNullable(enums.getOrDefault(value, null));
    }

    public boolean isKnown() {
        return asEnum().isPresent();
    }

    @Override
    public int hashCode() {
        return Objects.hash(value);
    }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        JournalLineCurrencyCodeValue other = (JournalLineCurrencyCodeValue) obj;
        return Objects.equals(value, other.value);
    }

    @Override
    public String toString() {
        return "JournalLineCurrencyCodeValue [value=" + value + "]";
    }

    // return an array just like an enum
    public static JournalLineCurrencyCodeValue[] values() {
        synchronized (JournalLineCurrencyCodeValue.class) {
            return values.values().toArray(new JournalLineCurrencyCodeValue[] {});
        }
    }

    private static final Map<String, JournalLineCurrencyCodeValue> createValuesMap() {
        Map<String, JournalLineCurrencyCodeValue> map = new LinkedHashMap<>();
        map.put("AED", AED);
        map.put("AFN", AFN);
        map.put("ALL", ALL);
        map.put("AMD", AMD);
        map.put("ANG", ANG);
        map.put("AOA", AOA);
        map.put("ARS", ARS);
        map.put("AUD", AUD);
        map.put("AWG", AWG);
        map.put("AZN", AZN);
        map.put("BAM", BAM);
        map.put("BBD", BBD);
        map.put("BDT", BDT);
        map.put("BGN", BGN);
        map.put("BHD", BHD);
        map.put("BIF", BIF);
        map.put("BMD", BMD);
        map.put("BND", BND);
        map.put("BOB", BOB);
        map.put("BRL", BRL);
        map.put("BSD", BSD);
        map.put("BTN", BTN);
        map.put("BWP", BWP);
        map.put("BYN", BYN);
        map.put("BZD", BZD);
        map.put("CAD", CAD);
        map.put("CDF", CDF);
        map.put("CHF", CHF);
        map.put("CLP", CLP);
        map.put("CNY", CNY);
        map.put("COP", COP);
        map.put("CRC", CRC);
        map.put("CUC", CUC);
        map.put("CUP", CUP);
        map.put("CVE", CVE);
        map.put("CZK", CZK);
        map.put("DJF", DJF);
        map.put("DKK", DKK);
        map.put("DOP", DOP);
        map.put("DZD", DZD);
        map.put("EGP", EGP);
        map.put("ERN", ERN);
        map.put("ETB", ETB);
        map.put("EUR", EUR);
        map.put("FJD", FJD);
        map.put("FKP", FKP);
        map.put("GBP", GBP);
        map.put("GEL", GEL);
        map.put("GHS", GHS);
        map.put("GIP", GIP);
        map.put("GMD", GMD);
        map.put("GNF", GNF);
        map.put("GTQ", GTQ);
        map.put("GYD", GYD);
        map.put("HKD", HKD);
        map.put("HNL", HNL);
        map.put("HRK", HRK);
        map.put("HTG", HTG);
        map.put("HUF", HUF);
        map.put("IDR", IDR);
        map.put("ILS", ILS);
        map.put("INR", INR);
        map.put("IQD", IQD);
        map.put("IRR", IRR);
        map.put("ISK", ISK);
        map.put("JMD", JMD);
        map.put("JOD", JOD);
        map.put("JPY", JPY);
        map.put("KES", KES);
        map.put("KGS", KGS);
        map.put("KHR", KHR);
        map.put("KMF", KMF);
        map.put("KPW", KPW);
        map.put("KRW", KRW);
        map.put("KWD", KWD);
        map.put("KYD", KYD);
        map.put("KZT", KZT);
        map.put("LAK", LAK);
        map.put("LBP", LBP);
        map.put("LKR", LKR);
        map.put("LRD", LRD);
        map.put("LSL", LSL);
        map.put("LYD", LYD);
        map.put("MAD", MAD);
        map.put("MDL", MDL);
        map.put("MGA", MGA);
        map.put("MKD", MKD);
        map.put("MMK", MMK);
        map.put("MNT", MNT);
        map.put("MOP", MOP);
        map.put("MRU", MRU);
        map.put("MUR", MUR);
        map.put("MVR", MVR);
        map.put("MWK", MWK);
        map.put("MXN", MXN);
        map.put("MYR", MYR);
        map.put("MZN", MZN);
        map.put("NAD", NAD);
        map.put("NGN", NGN);
        map.put("NIO", NIO);
        map.put("NOK", NOK);
        map.put("NPR", NPR);
        map.put("NZD", NZD);
        map.put("OMR", OMR);
        map.put("PAB", PAB);
        map.put("PEN", PEN);
        map.put("PGK", PGK);
        map.put("PHP", PHP);
        map.put("PKR", PKR);
        map.put("PLN", PLN);
        map.put("PYG", PYG);
        map.put("QAR", QAR);
        map.put("RON", RON);
        map.put("RSD", RSD);
        map.put("RUB", RUB);
        map.put("RWF", RWF);
        map.put("SAR", SAR);
        map.put("SBD", SBD);
        map.put("SCR", SCR);
        map.put("SDG", SDG);
        map.put("SEK", SEK);
        map.put("SGD", SGD);
        map.put("SHP", SHP);
        map.put("SLL", SLL);
        map.put("SOS", SOS);
        map.put("SRD", SRD);
        map.put("SSP", SSP);
        map.put("STN", STN);
        map.put("SYP", SYP);
        map.put("SZL", SZL);
        map.put("THB", THB);
        map.put("TJS", TJS);
        map.put("TMT", TMT);
        map.put("TND", TND);
        map.put("TOP", TOP);
        map.put("TRY", TRY);
        map.put("TTD", TTD);
        map.put("TWD", TWD);
        map.put("TZS", TZS);
        map.put("UAH", UAH);
        map.put("UGX", UGX);
        map.put("USD", USD);
        map.put("UYU", UYU);
        map.put("UZS", UZS);
        map.put("VES", VES);
        map.put("VND", VND);
        map.put("VUV", VUV);
        map.put("WST", WST);
        map.put("XAF", XAF);
        map.put("XCD", XCD);
        map.put("XDR", XDR);
        map.put("XOF", XOF);
        map.put("XPF", XPF);
        map.put("YER", YER);
        map.put("ZAR", ZAR);
        map.put("ZMW", ZMW);
        map.put("ZWL", ZWL);
        map.put("unmapped_value", UNMAPPED_VALUE);
        return map;
    }

    private static final Map<String, JournalLineCurrencyCodeValueEnum> createEnumsMap() {
        Map<String, JournalLineCurrencyCodeValueEnum> map = new HashMap<>();
        map.put("AED", JournalLineCurrencyCodeValueEnum.AED);
        map.put("AFN", JournalLineCurrencyCodeValueEnum.AFN);
        map.put("ALL", JournalLineCurrencyCodeValueEnum.ALL);
        map.put("AMD", JournalLineCurrencyCodeValueEnum.AMD);
        map.put("ANG", JournalLineCurrencyCodeValueEnum.ANG);
        map.put("AOA", JournalLineCurrencyCodeValueEnum.AOA);
        map.put("ARS", JournalLineCurrencyCodeValueEnum.ARS);
        map.put("AUD", JournalLineCurrencyCodeValueEnum.AUD);
        map.put("AWG", JournalLineCurrencyCodeValueEnum.AWG);
        map.put("AZN", JournalLineCurrencyCodeValueEnum.AZN);
        map.put("BAM", JournalLineCurrencyCodeValueEnum.BAM);
        map.put("BBD", JournalLineCurrencyCodeValueEnum.BBD);
        map.put("BDT", JournalLineCurrencyCodeValueEnum.BDT);
        map.put("BGN", JournalLineCurrencyCodeValueEnum.BGN);
        map.put("BHD", JournalLineCurrencyCodeValueEnum.BHD);
        map.put("BIF", JournalLineCurrencyCodeValueEnum.BIF);
        map.put("BMD", JournalLineCurrencyCodeValueEnum.BMD);
        map.put("BND", JournalLineCurrencyCodeValueEnum.BND);
        map.put("BOB", JournalLineCurrencyCodeValueEnum.BOB);
        map.put("BRL", JournalLineCurrencyCodeValueEnum.BRL);
        map.put("BSD", JournalLineCurrencyCodeValueEnum.BSD);
        map.put("BTN", JournalLineCurrencyCodeValueEnum.BTN);
        map.put("BWP", JournalLineCurrencyCodeValueEnum.BWP);
        map.put("BYN", JournalLineCurrencyCodeValueEnum.BYN);
        map.put("BZD", JournalLineCurrencyCodeValueEnum.BZD);
        map.put("CAD", JournalLineCurrencyCodeValueEnum.CAD);
        map.put("CDF", JournalLineCurrencyCodeValueEnum.CDF);
        map.put("CHF", JournalLineCurrencyCodeValueEnum.CHF);
        map.put("CLP", JournalLineCurrencyCodeValueEnum.CLP);
        map.put("CNY", JournalLineCurrencyCodeValueEnum.CNY);
        map.put("COP", JournalLineCurrencyCodeValueEnum.COP);
        map.put("CRC", JournalLineCurrencyCodeValueEnum.CRC);
        map.put("CUC", JournalLineCurrencyCodeValueEnum.CUC);
        map.put("CUP", JournalLineCurrencyCodeValueEnum.CUP);
        map.put("CVE", JournalLineCurrencyCodeValueEnum.CVE);
        map.put("CZK", JournalLineCurrencyCodeValueEnum.CZK);
        map.put("DJF", JournalLineCurrencyCodeValueEnum.DJF);
        map.put("DKK", JournalLineCurrencyCodeValueEnum.DKK);
        map.put("DOP", JournalLineCurrencyCodeValueEnum.DOP);
        map.put("DZD", JournalLineCurrencyCodeValueEnum.DZD);
        map.put("EGP", JournalLineCurrencyCodeValueEnum.EGP);
        map.put("ERN", JournalLineCurrencyCodeValueEnum.ERN);
        map.put("ETB", JournalLineCurrencyCodeValueEnum.ETB);
        map.put("EUR", JournalLineCurrencyCodeValueEnum.EUR);
        map.put("FJD", JournalLineCurrencyCodeValueEnum.FJD);
        map.put("FKP", JournalLineCurrencyCodeValueEnum.FKP);
        map.put("GBP", JournalLineCurrencyCodeValueEnum.GBP);
        map.put("GEL", JournalLineCurrencyCodeValueEnum.GEL);
        map.put("GHS", JournalLineCurrencyCodeValueEnum.GHS);
        map.put("GIP", JournalLineCurrencyCodeValueEnum.GIP);
        map.put("GMD", JournalLineCurrencyCodeValueEnum.GMD);
        map.put("GNF", JournalLineCurrencyCodeValueEnum.GNF);
        map.put("GTQ", JournalLineCurrencyCodeValueEnum.GTQ);
        map.put("GYD", JournalLineCurrencyCodeValueEnum.GYD);
        map.put("HKD", JournalLineCurrencyCodeValueEnum.HKD);
        map.put("HNL", JournalLineCurrencyCodeValueEnum.HNL);
        map.put("HRK", JournalLineCurrencyCodeValueEnum.HRK);
        map.put("HTG", JournalLineCurrencyCodeValueEnum.HTG);
        map.put("HUF", JournalLineCurrencyCodeValueEnum.HUF);
        map.put("IDR", JournalLineCurrencyCodeValueEnum.IDR);
        map.put("ILS", JournalLineCurrencyCodeValueEnum.ILS);
        map.put("INR", JournalLineCurrencyCodeValueEnum.INR);
        map.put("IQD", JournalLineCurrencyCodeValueEnum.IQD);
        map.put("IRR", JournalLineCurrencyCodeValueEnum.IRR);
        map.put("ISK", JournalLineCurrencyCodeValueEnum.ISK);
        map.put("JMD", JournalLineCurrencyCodeValueEnum.JMD);
        map.put("JOD", JournalLineCurrencyCodeValueEnum.JOD);
        map.put("JPY", JournalLineCurrencyCodeValueEnum.JPY);
        map.put("KES", JournalLineCurrencyCodeValueEnum.KES);
        map.put("KGS", JournalLineCurrencyCodeValueEnum.KGS);
        map.put("KHR", JournalLineCurrencyCodeValueEnum.KHR);
        map.put("KMF", JournalLineCurrencyCodeValueEnum.KMF);
        map.put("KPW", JournalLineCurrencyCodeValueEnum.KPW);
        map.put("KRW", JournalLineCurrencyCodeValueEnum.KRW);
        map.put("KWD", JournalLineCurrencyCodeValueEnum.KWD);
        map.put("KYD", JournalLineCurrencyCodeValueEnum.KYD);
        map.put("KZT", JournalLineCurrencyCodeValueEnum.KZT);
        map.put("LAK", JournalLineCurrencyCodeValueEnum.LAK);
        map.put("LBP", JournalLineCurrencyCodeValueEnum.LBP);
        map.put("LKR", JournalLineCurrencyCodeValueEnum.LKR);
        map.put("LRD", JournalLineCurrencyCodeValueEnum.LRD);
        map.put("LSL", JournalLineCurrencyCodeValueEnum.LSL);
        map.put("LYD", JournalLineCurrencyCodeValueEnum.LYD);
        map.put("MAD", JournalLineCurrencyCodeValueEnum.MAD);
        map.put("MDL", JournalLineCurrencyCodeValueEnum.MDL);
        map.put("MGA", JournalLineCurrencyCodeValueEnum.MGA);
        map.put("MKD", JournalLineCurrencyCodeValueEnum.MKD);
        map.put("MMK", JournalLineCurrencyCodeValueEnum.MMK);
        map.put("MNT", JournalLineCurrencyCodeValueEnum.MNT);
        map.put("MOP", JournalLineCurrencyCodeValueEnum.MOP);
        map.put("MRU", JournalLineCurrencyCodeValueEnum.MRU);
        map.put("MUR", JournalLineCurrencyCodeValueEnum.MUR);
        map.put("MVR", JournalLineCurrencyCodeValueEnum.MVR);
        map.put("MWK", JournalLineCurrencyCodeValueEnum.MWK);
        map.put("MXN", JournalLineCurrencyCodeValueEnum.MXN);
        map.put("MYR", JournalLineCurrencyCodeValueEnum.MYR);
        map.put("MZN", JournalLineCurrencyCodeValueEnum.MZN);
        map.put("NAD", JournalLineCurrencyCodeValueEnum.NAD);
        map.put("NGN", JournalLineCurrencyCodeValueEnum.NGN);
        map.put("NIO", JournalLineCurrencyCodeValueEnum.NIO);
        map.put("NOK", JournalLineCurrencyCodeValueEnum.NOK);
        map.put("NPR", JournalLineCurrencyCodeValueEnum.NPR);
        map.put("NZD", JournalLineCurrencyCodeValueEnum.NZD);
        map.put("OMR", JournalLineCurrencyCodeValueEnum.OMR);
        map.put("PAB", JournalLineCurrencyCodeValueEnum.PAB);
        map.put("PEN", JournalLineCurrencyCodeValueEnum.PEN);
        map.put("PGK", JournalLineCurrencyCodeValueEnum.PGK);
        map.put("PHP", JournalLineCurrencyCodeValueEnum.PHP);
        map.put("PKR", JournalLineCurrencyCodeValueEnum.PKR);
        map.put("PLN", JournalLineCurrencyCodeValueEnum.PLN);
        map.put("PYG", JournalLineCurrencyCodeValueEnum.PYG);
        map.put("QAR", JournalLineCurrencyCodeValueEnum.QAR);
        map.put("RON", JournalLineCurrencyCodeValueEnum.RON);
        map.put("RSD", JournalLineCurrencyCodeValueEnum.RSD);
        map.put("RUB", JournalLineCurrencyCodeValueEnum.RUB);
        map.put("RWF", JournalLineCurrencyCodeValueEnum.RWF);
        map.put("SAR", JournalLineCurrencyCodeValueEnum.SAR);
        map.put("SBD", JournalLineCurrencyCodeValueEnum.SBD);
        map.put("SCR", JournalLineCurrencyCodeValueEnum.SCR);
        map.put("SDG", JournalLineCurrencyCodeValueEnum.SDG);
        map.put("SEK", JournalLineCurrencyCodeValueEnum.SEK);
        map.put("SGD", JournalLineCurrencyCodeValueEnum.SGD);
        map.put("SHP", JournalLineCurrencyCodeValueEnum.SHP);
        map.put("SLL", JournalLineCurrencyCodeValueEnum.SLL);
        map.put("SOS", JournalLineCurrencyCodeValueEnum.SOS);
        map.put("SRD", JournalLineCurrencyCodeValueEnum.SRD);
        map.put("SSP", JournalLineCurrencyCodeValueEnum.SSP);
        map.put("STN", JournalLineCurrencyCodeValueEnum.STN);
        map.put("SYP", JournalLineCurrencyCodeValueEnum.SYP);
        map.put("SZL", JournalLineCurrencyCodeValueEnum.SZL);
        map.put("THB", JournalLineCurrencyCodeValueEnum.THB);
        map.put("TJS", JournalLineCurrencyCodeValueEnum.TJS);
        map.put("TMT", JournalLineCurrencyCodeValueEnum.TMT);
        map.put("TND", JournalLineCurrencyCodeValueEnum.TND);
        map.put("TOP", JournalLineCurrencyCodeValueEnum.TOP);
        map.put("TRY", JournalLineCurrencyCodeValueEnum.TRY);
        map.put("TTD", JournalLineCurrencyCodeValueEnum.TTD);
        map.put("TWD", JournalLineCurrencyCodeValueEnum.TWD);
        map.put("TZS", JournalLineCurrencyCodeValueEnum.TZS);
        map.put("UAH", JournalLineCurrencyCodeValueEnum.UAH);
        map.put("UGX", JournalLineCurrencyCodeValueEnum.UGX);
        map.put("USD", JournalLineCurrencyCodeValueEnum.USD);
        map.put("UYU", JournalLineCurrencyCodeValueEnum.UYU);
        map.put("UZS", JournalLineCurrencyCodeValueEnum.UZS);
        map.put("VES", JournalLineCurrencyCodeValueEnum.VES);
        map.put("VND", JournalLineCurrencyCodeValueEnum.VND);
        map.put("VUV", JournalLineCurrencyCodeValueEnum.VUV);
        map.put("WST", JournalLineCurrencyCodeValueEnum.WST);
        map.put("XAF", JournalLineCurrencyCodeValueEnum.XAF);
        map.put("XCD", JournalLineCurrencyCodeValueEnum.XCD);
        map.put("XDR", JournalLineCurrencyCodeValueEnum.XDR);
        map.put("XOF", JournalLineCurrencyCodeValueEnum.XOF);
        map.put("XPF", JournalLineCurrencyCodeValueEnum.XPF);
        map.put("YER", JournalLineCurrencyCodeValueEnum.YER);
        map.put("ZAR", JournalLineCurrencyCodeValueEnum.ZAR);
        map.put("ZMW", JournalLineCurrencyCodeValueEnum.ZMW);
        map.put("ZWL", JournalLineCurrencyCodeValueEnum.ZWL);
        map.put("unmapped_value", JournalLineCurrencyCodeValueEnum.UNMAPPED_VALUE);
        return map;
    }
    
    @SuppressWarnings("serial")
    public static final class _Serializer extends StdSerializer<JournalLineCurrencyCodeValue> {

        protected _Serializer() {
            super(JournalLineCurrencyCodeValue.class);
        }

        @Override
        public void serialize(JournalLineCurrencyCodeValue value, JsonGenerator g, SerializerProvider provider)
                throws IOException, JsonProcessingException {
            g.writeObject(value.value);
        }
    }

    @SuppressWarnings("serial")
    public static final class _Deserializer extends StdDeserializer<JournalLineCurrencyCodeValue> {

        protected _Deserializer() {
            super(JournalLineCurrencyCodeValue.class);
        }

        @Override
        public JournalLineCurrencyCodeValue deserialize(JsonParser p, DeserializationContext ctxt)
                throws IOException, JacksonException {
            String v = p.readValueAs(new TypeReference<String>() {});
            // use the factory method to ensure we get singletons
            return JournalLineCurrencyCodeValue.of(v);
        }
    }
    
    public enum JournalLineCurrencyCodeValueEnum {

        AED("AED"),
        AFN("AFN"),
        ALL("ALL"),
        AMD("AMD"),
        ANG("ANG"),
        AOA("AOA"),
        ARS("ARS"),
        AUD("AUD"),
        AWG("AWG"),
        AZN("AZN"),
        BAM("BAM"),
        BBD("BBD"),
        BDT("BDT"),
        BGN("BGN"),
        BHD("BHD"),
        BIF("BIF"),
        BMD("BMD"),
        BND("BND"),
        BOB("BOB"),
        BRL("BRL"),
        BSD("BSD"),
        BTN("BTN"),
        BWP("BWP"),
        BYN("BYN"),
        BZD("BZD"),
        CAD("CAD"),
        CDF("CDF"),
        CHF("CHF"),
        CLP("CLP"),
        CNY("CNY"),
        COP("COP"),
        CRC("CRC"),
        CUC("CUC"),
        CUP("CUP"),
        CVE("CVE"),
        CZK("CZK"),
        DJF("DJF"),
        DKK("DKK"),
        DOP("DOP"),
        DZD("DZD"),
        EGP("EGP"),
        ERN("ERN"),
        ETB("ETB"),
        EUR("EUR"),
        FJD("FJD"),
        FKP("FKP"),
        GBP("GBP"),
        GEL("GEL"),
        GHS("GHS"),
        GIP("GIP"),
        GMD("GMD"),
        GNF("GNF"),
        GTQ("GTQ"),
        GYD("GYD"),
        HKD("HKD"),
        HNL("HNL"),
        HRK("HRK"),
        HTG("HTG"),
        HUF("HUF"),
        IDR("IDR"),
        ILS("ILS"),
        INR("INR"),
        IQD("IQD"),
        IRR("IRR"),
        ISK("ISK"),
        JMD("JMD"),
        JOD("JOD"),
        JPY("JPY"),
        KES("KES"),
        KGS("KGS"),
        KHR("KHR"),
        KMF("KMF"),
        KPW("KPW"),
        KRW("KRW"),
        KWD("KWD"),
        KYD("KYD"),
        KZT("KZT"),
        LAK("LAK"),
        LBP("LBP"),
        LKR("LKR"),
        LRD("LRD"),
        LSL("LSL"),
        LYD("LYD"),
        MAD("MAD"),
        MDL("MDL"),
        MGA("MGA"),
        MKD("MKD"),
        MMK("MMK"),
        MNT("MNT"),
        MOP("MOP"),
        MRU("MRU"),
        MUR("MUR"),
        MVR("MVR"),
        MWK("MWK"),
        MXN("MXN"),
        MYR("MYR"),
        MZN("MZN"),
        NAD("NAD"),
        NGN("NGN"),
        NIO("NIO"),
        NOK("NOK"),
        NPR("NPR"),
        NZD("NZD"),
        OMR("OMR"),
        PAB("PAB"),
        PEN("PEN"),
        PGK("PGK"),
        PHP("PHP"),
        PKR("PKR"),
        PLN("PLN"),
        PYG("PYG"),
        QAR("QAR"),
        RON("RON"),
        RSD("RSD"),
        RUB("RUB"),
        RWF("RWF"),
        SAR("SAR"),
        SBD("SBD"),
        SCR("SCR"),
        SDG("SDG"),
        SEK("SEK"),
        SGD("SGD"),
        SHP("SHP"),
        SLL("SLL"),
        SOS("SOS"),
        SRD("SRD"),
        SSP("SSP"),
        STN("STN"),
        SYP("SYP"),
        SZL("SZL"),
        THB("THB"),
        TJS("TJS"),
        TMT("TMT"),
        TND("TND"),
        TOP("TOP"),
        TRY("TRY"),
        TTD("TTD"),
        TWD("TWD"),
        TZS("TZS"),
        UAH("UAH"),
        UGX("UGX"),
        USD("USD"),
        UYU("UYU"),
        UZS("UZS"),
        VES("VES"),
        VND("VND"),
        VUV("VUV"),
        WST("WST"),
        XAF("XAF"),
        XCD("XCD"),
        XDR("XDR"),
        XOF("XOF"),
        XPF("XPF"),
        YER("YER"),
        ZAR("ZAR"),
        ZMW("ZMW"),
        ZWL("ZWL"),
        UNMAPPED_VALUE("unmapped_value"),;

        private final String value;

        private JournalLineCurrencyCodeValueEnum(String value) {
            this.value = value;
        }

        public String value() {
            return value;
        }
    }
}

