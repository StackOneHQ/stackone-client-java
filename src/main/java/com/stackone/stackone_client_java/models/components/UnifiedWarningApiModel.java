/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.stackone.stackone_client_java.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class UnifiedWarningApiModel {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    private JsonNullable<String> message;

    @JsonCreator
    public UnifiedWarningApiModel(
            @JsonProperty("message") JsonNullable<String> message) {
        Utils.checkNotNull(message, "message");
        this.message = message;
    }
    
    public UnifiedWarningApiModel() {
        this(JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> message() {
        return message;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UnifiedWarningApiModel withMessage(String message) {
        Utils.checkNotNull(message, "message");
        this.message = JsonNullable.of(message);
        return this;
    }

    public UnifiedWarningApiModel withMessage(JsonNullable<String> message) {
        Utils.checkNotNull(message, "message");
        this.message = message;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UnifiedWarningApiModel other = (UnifiedWarningApiModel) o;
        return 
            Objects.deepEquals(this.message, other.message);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            message);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UnifiedWarningApiModel.class,
                "message", message);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> message = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder message(String message) {
            Utils.checkNotNull(message, "message");
            this.message = JsonNullable.of(message);
            return this;
        }

        public Builder message(JsonNullable<String> message) {
            Utils.checkNotNull(message, "message");
            this.message = message;
            return this;
        }
        
        public UnifiedWarningApiModel build() {
            return new UnifiedWarningApiModel(
                message);
        }
    }
}

