/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Deprecated;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * HrisUpdateEmployeeRequestDtoNationalIdentityNumber
 * 
 * <p>The national identity number
 * 
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
@Deprecated
public class HrisUpdateEmployeeRequestDtoNationalIdentityNumber {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    private JsonNullable<String> value;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private JsonNullable<? extends HrisUpdateEmployeeRequestDtoType> type;

    /**
     * The country code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    private JsonNullable<? extends HrisUpdateEmployeeRequestDtoCountry> country;

    @JsonCreator
    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber(
            @JsonProperty("value") JsonNullable<String> value,
            @JsonProperty("type") JsonNullable<? extends HrisUpdateEmployeeRequestDtoType> type,
            @JsonProperty("country") JsonNullable<? extends HrisUpdateEmployeeRequestDtoCountry> country) {
        Utils.checkNotNull(value, "value");
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(country, "country");
        this.value = value;
        this.type = type;
        this.country = country;
    }
    
    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> value() {
        return value;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<HrisUpdateEmployeeRequestDtoType> type() {
        return (JsonNullable<HrisUpdateEmployeeRequestDtoType>) type;
    }

    /**
     * The country code
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<HrisUpdateEmployeeRequestDtoCountry> country() {
        return (JsonNullable<HrisUpdateEmployeeRequestDtoCountry>) country;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber withValue(String value) {
        Utils.checkNotNull(value, "value");
        this.value = JsonNullable.of(value);
        return this;
    }

    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber withValue(JsonNullable<String> value) {
        Utils.checkNotNull(value, "value");
        this.value = value;
        return this;
    }

    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber withType(HrisUpdateEmployeeRequestDtoType type) {
        Utils.checkNotNull(type, "type");
        this.type = JsonNullable.of(type);
        return this;
    }

    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber withType(JsonNullable<? extends HrisUpdateEmployeeRequestDtoType> type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    /**
     * The country code
     */
    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber withCountry(HrisUpdateEmployeeRequestDtoCountry country) {
        Utils.checkNotNull(country, "country");
        this.country = JsonNullable.of(country);
        return this;
    }

    /**
     * The country code
     */
    public HrisUpdateEmployeeRequestDtoNationalIdentityNumber withCountry(JsonNullable<? extends HrisUpdateEmployeeRequestDtoCountry> country) {
        Utils.checkNotNull(country, "country");
        this.country = country;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HrisUpdateEmployeeRequestDtoNationalIdentityNumber other = (HrisUpdateEmployeeRequestDtoNationalIdentityNumber) o;
        return 
            Objects.deepEquals(this.value, other.value) &&
            Objects.deepEquals(this.type, other.type) &&
            Objects.deepEquals(this.country, other.country);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            value,
            type,
            country);
    }
    
    @Override
    public String toString() {
        return Utils.toString(HrisUpdateEmployeeRequestDtoNationalIdentityNumber.class,
                "value", value,
                "type", type,
                "country", country);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> value = JsonNullable.undefined();
 
        private JsonNullable<? extends HrisUpdateEmployeeRequestDtoType> type = JsonNullable.undefined();
 
        private JsonNullable<? extends HrisUpdateEmployeeRequestDtoCountry> country = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder value(String value) {
            Utils.checkNotNull(value, "value");
            this.value = JsonNullable.of(value);
            return this;
        }

        public Builder value(JsonNullable<String> value) {
            Utils.checkNotNull(value, "value");
            this.value = value;
            return this;
        }

        public Builder type(HrisUpdateEmployeeRequestDtoType type) {
            Utils.checkNotNull(type, "type");
            this.type = JsonNullable.of(type);
            return this;
        }

        public Builder type(JsonNullable<? extends HrisUpdateEmployeeRequestDtoType> type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        /**
         * The country code
         */
        public Builder country(HrisUpdateEmployeeRequestDtoCountry country) {
            Utils.checkNotNull(country, "country");
            this.country = JsonNullable.of(country);
            return this;
        }

        /**
         * The country code
         */
        public Builder country(JsonNullable<? extends HrisUpdateEmployeeRequestDtoCountry> country) {
            Utils.checkNotNull(country, "country");
            this.country = country;
            return this;
        }
        
        public HrisUpdateEmployeeRequestDtoNationalIdentityNumber build() {
            return new HrisUpdateEmployeeRequestDtoNationalIdentityNumber(
                value,
                type,
                country);
        }
    }
}
