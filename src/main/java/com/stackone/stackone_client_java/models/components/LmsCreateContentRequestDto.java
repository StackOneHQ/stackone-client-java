/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Deprecated;
import java.lang.Double;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;


public class LmsCreateContentRequestDto {
    /**
     * Custom Unified Fields configured in your StackOne project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unified_custom_fields")
    private JsonNullable<? extends Map<String, Object>> unifiedCustomFields;

    /**
     * The external ID associated with this content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_reference")
    private JsonNullable<String> externalReference;

    /**
     * The title of the content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    private JsonNullable<String> title;

    /**
     * The description of the content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The languages associated with this content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languages")
    private JsonNullable<? extends List<LanguageEnum>> languages;

    /**
     * The external URL of the content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content_url")
    private JsonNullable<String> contentUrl;

    /**
     * The mobile friendly URL of the content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobile_launch_content_url")
    private JsonNullable<String> mobileLaunchContentUrl;

    /**
     * The type of content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content_type")
    private JsonNullable<? extends LmsCreateContentRequestDtoContentType> contentType;

    /**
     * The URL of the thumbnail image associated with the content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cover_url")
    private JsonNullable<String> coverUrl;

    /**
     * Whether the content is active and available for users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    private JsonNullable<? extends LmsCreateContentRequestDtoActive> active;

    /**
     * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    private JsonNullable<String> duration;

    /**
     * The skills associated with this content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skills")
    private JsonNullable<? extends List<CreateSkillsApiModel>> skills;

    /**
     * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    private JsonNullable<Double> order;

    /**
     * A short description or summary for the content
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("short_description")
    @Deprecated
    private JsonNullable<String> shortDescription;

    /**
     * The localization data for this content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localizations")
    private JsonNullable<? extends List<LocalizationModel>> localizations;

    /**
     * A list of tags associated with the content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    private JsonNullable<? extends List<String>> tags;

    /**
     * The date on which the content was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    private JsonNullable<OffsetDateTime> updatedAt;

    /**
     * The date on which the content was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    private JsonNullable<OffsetDateTime> createdAt;

    /**
     * The categories associated with this content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    private JsonNullable<? extends List<CreateCategoriesApiModel>> categories;

    /**
     * The additional_data associated with this content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additional_data")
    private JsonNullable<? extends List<AdditionalData>> additionalData;

    @JsonCreator
    public LmsCreateContentRequestDto(
            @JsonProperty("unified_custom_fields") JsonNullable<? extends Map<String, Object>> unifiedCustomFields,
            @JsonProperty("external_reference") JsonNullable<String> externalReference,
            @JsonProperty("title") JsonNullable<String> title,
            @JsonProperty("description") JsonNullable<String> description,
            @JsonProperty("languages") JsonNullable<? extends List<LanguageEnum>> languages,
            @JsonProperty("content_url") JsonNullable<String> contentUrl,
            @JsonProperty("mobile_launch_content_url") JsonNullable<String> mobileLaunchContentUrl,
            @JsonProperty("content_type") JsonNullable<? extends LmsCreateContentRequestDtoContentType> contentType,
            @JsonProperty("cover_url") JsonNullable<String> coverUrl,
            @JsonProperty("active") JsonNullable<? extends LmsCreateContentRequestDtoActive> active,
            @JsonProperty("duration") JsonNullable<String> duration,
            @JsonProperty("skills") JsonNullable<? extends List<CreateSkillsApiModel>> skills,
            @JsonProperty("order") JsonNullable<Double> order,
            @JsonProperty("short_description") JsonNullable<String> shortDescription,
            @JsonProperty("localizations") JsonNullable<? extends List<LocalizationModel>> localizations,
            @JsonProperty("tags") JsonNullable<? extends List<String>> tags,
            @JsonProperty("updated_at") JsonNullable<OffsetDateTime> updatedAt,
            @JsonProperty("created_at") JsonNullable<OffsetDateTime> createdAt,
            @JsonProperty("categories") JsonNullable<? extends List<CreateCategoriesApiModel>> categories,
            @JsonProperty("additional_data") JsonNullable<? extends List<AdditionalData>> additionalData) {
        Utils.checkNotNull(unifiedCustomFields, "unifiedCustomFields");
        Utils.checkNotNull(externalReference, "externalReference");
        Utils.checkNotNull(title, "title");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(languages, "languages");
        Utils.checkNotNull(contentUrl, "contentUrl");
        Utils.checkNotNull(mobileLaunchContentUrl, "mobileLaunchContentUrl");
        Utils.checkNotNull(contentType, "contentType");
        Utils.checkNotNull(coverUrl, "coverUrl");
        Utils.checkNotNull(active, "active");
        Utils.checkNotNull(duration, "duration");
        Utils.checkNotNull(skills, "skills");
        Utils.checkNotNull(order, "order");
        Utils.checkNotNull(shortDescription, "shortDescription");
        Utils.checkNotNull(localizations, "localizations");
        Utils.checkNotNull(tags, "tags");
        Utils.checkNotNull(updatedAt, "updatedAt");
        Utils.checkNotNull(createdAt, "createdAt");
        Utils.checkNotNull(categories, "categories");
        Utils.checkNotNull(additionalData, "additionalData");
        this.unifiedCustomFields = unifiedCustomFields;
        this.externalReference = externalReference;
        this.title = title;
        this.description = description;
        this.languages = languages;
        this.contentUrl = contentUrl;
        this.mobileLaunchContentUrl = mobileLaunchContentUrl;
        this.contentType = contentType;
        this.coverUrl = coverUrl;
        this.active = active;
        this.duration = duration;
        this.skills = skills;
        this.order = order;
        this.shortDescription = shortDescription;
        this.localizations = localizations;
        this.tags = tags;
        this.updatedAt = updatedAt;
        this.createdAt = createdAt;
        this.categories = categories;
        this.additionalData = additionalData;
    }
    
    public LmsCreateContentRequestDto() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Custom Unified Fields configured in your StackOne project
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, Object>> unifiedCustomFields() {
        return (JsonNullable<Map<String, Object>>) unifiedCustomFields;
    }

    /**
     * The external ID associated with this content
     */
    @JsonIgnore
    public JsonNullable<String> externalReference() {
        return externalReference;
    }

    /**
     * The title of the content
     */
    @JsonIgnore
    public JsonNullable<String> title() {
        return title;
    }

    /**
     * The description of the content
     */
    @JsonIgnore
    public JsonNullable<String> description() {
        return description;
    }

    /**
     * The languages associated with this content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<LanguageEnum>> languages() {
        return (JsonNullable<List<LanguageEnum>>) languages;
    }

    /**
     * The external URL of the content
     */
    @JsonIgnore
    public JsonNullable<String> contentUrl() {
        return contentUrl;
    }

    /**
     * The mobile friendly URL of the content
     */
    @JsonIgnore
    public JsonNullable<String> mobileLaunchContentUrl() {
        return mobileLaunchContentUrl;
    }

    /**
     * The type of content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<LmsCreateContentRequestDtoContentType> contentType() {
        return (JsonNullable<LmsCreateContentRequestDtoContentType>) contentType;
    }

    /**
     * The URL of the thumbnail image associated with the content.
     */
    @JsonIgnore
    public JsonNullable<String> coverUrl() {
        return coverUrl;
    }

    /**
     * Whether the content is active and available for users.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<LmsCreateContentRequestDtoActive> active() {
        return (JsonNullable<LmsCreateContentRequestDtoActive>) active;
    }

    /**
     * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
     */
    @JsonIgnore
    public JsonNullable<String> duration() {
        return duration;
    }

    /**
     * The skills associated with this content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<CreateSkillsApiModel>> skills() {
        return (JsonNullable<List<CreateSkillsApiModel>>) skills;
    }

    /**
     * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
     */
    @JsonIgnore
    public JsonNullable<Double> order() {
        return order;
    }

    /**
     * A short description or summary for the content
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    @JsonIgnore
    public JsonNullable<String> shortDescription() {
        return shortDescription;
    }

    /**
     * The localization data for this content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<LocalizationModel>> localizations() {
        return (JsonNullable<List<LocalizationModel>>) localizations;
    }

    /**
     * A list of tags associated with the content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> tags() {
        return (JsonNullable<List<String>>) tags;
    }

    /**
     * The date on which the content was last updated.
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> updatedAt() {
        return updatedAt;
    }

    /**
     * The date on which the content was created.
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> createdAt() {
        return createdAt;
    }

    /**
     * The categories associated with this content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<CreateCategoriesApiModel>> categories() {
        return (JsonNullable<List<CreateCategoriesApiModel>>) categories;
    }

    /**
     * The additional_data associated with this content
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<AdditionalData>> additionalData() {
        return (JsonNullable<List<AdditionalData>>) additionalData;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Custom Unified Fields configured in your StackOne project
     */
    public LmsCreateContentRequestDto withUnifiedCustomFields(Map<String, Object> unifiedCustomFields) {
        Utils.checkNotNull(unifiedCustomFields, "unifiedCustomFields");
        this.unifiedCustomFields = JsonNullable.of(unifiedCustomFields);
        return this;
    }

    /**
     * Custom Unified Fields configured in your StackOne project
     */
    public LmsCreateContentRequestDto withUnifiedCustomFields(JsonNullable<? extends Map<String, Object>> unifiedCustomFields) {
        Utils.checkNotNull(unifiedCustomFields, "unifiedCustomFields");
        this.unifiedCustomFields = unifiedCustomFields;
        return this;
    }

    /**
     * The external ID associated with this content
     */
    public LmsCreateContentRequestDto withExternalReference(String externalReference) {
        Utils.checkNotNull(externalReference, "externalReference");
        this.externalReference = JsonNullable.of(externalReference);
        return this;
    }

    /**
     * The external ID associated with this content
     */
    public LmsCreateContentRequestDto withExternalReference(JsonNullable<String> externalReference) {
        Utils.checkNotNull(externalReference, "externalReference");
        this.externalReference = externalReference;
        return this;
    }

    /**
     * The title of the content
     */
    public LmsCreateContentRequestDto withTitle(String title) {
        Utils.checkNotNull(title, "title");
        this.title = JsonNullable.of(title);
        return this;
    }

    /**
     * The title of the content
     */
    public LmsCreateContentRequestDto withTitle(JsonNullable<String> title) {
        Utils.checkNotNull(title, "title");
        this.title = title;
        return this;
    }

    /**
     * The description of the content
     */
    public LmsCreateContentRequestDto withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = JsonNullable.of(description);
        return this;
    }

    /**
     * The description of the content
     */
    public LmsCreateContentRequestDto withDescription(JsonNullable<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    /**
     * The languages associated with this content
     */
    public LmsCreateContentRequestDto withLanguages(List<LanguageEnum> languages) {
        Utils.checkNotNull(languages, "languages");
        this.languages = JsonNullable.of(languages);
        return this;
    }

    /**
     * The languages associated with this content
     */
    public LmsCreateContentRequestDto withLanguages(JsonNullable<? extends List<LanguageEnum>> languages) {
        Utils.checkNotNull(languages, "languages");
        this.languages = languages;
        return this;
    }

    /**
     * The external URL of the content
     */
    public LmsCreateContentRequestDto withContentUrl(String contentUrl) {
        Utils.checkNotNull(contentUrl, "contentUrl");
        this.contentUrl = JsonNullable.of(contentUrl);
        return this;
    }

    /**
     * The external URL of the content
     */
    public LmsCreateContentRequestDto withContentUrl(JsonNullable<String> contentUrl) {
        Utils.checkNotNull(contentUrl, "contentUrl");
        this.contentUrl = contentUrl;
        return this;
    }

    /**
     * The mobile friendly URL of the content
     */
    public LmsCreateContentRequestDto withMobileLaunchContentUrl(String mobileLaunchContentUrl) {
        Utils.checkNotNull(mobileLaunchContentUrl, "mobileLaunchContentUrl");
        this.mobileLaunchContentUrl = JsonNullable.of(mobileLaunchContentUrl);
        return this;
    }

    /**
     * The mobile friendly URL of the content
     */
    public LmsCreateContentRequestDto withMobileLaunchContentUrl(JsonNullable<String> mobileLaunchContentUrl) {
        Utils.checkNotNull(mobileLaunchContentUrl, "mobileLaunchContentUrl");
        this.mobileLaunchContentUrl = mobileLaunchContentUrl;
        return this;
    }

    /**
     * The type of content
     */
    public LmsCreateContentRequestDto withContentType(LmsCreateContentRequestDtoContentType contentType) {
        Utils.checkNotNull(contentType, "contentType");
        this.contentType = JsonNullable.of(contentType);
        return this;
    }

    /**
     * The type of content
     */
    public LmsCreateContentRequestDto withContentType(JsonNullable<? extends LmsCreateContentRequestDtoContentType> contentType) {
        Utils.checkNotNull(contentType, "contentType");
        this.contentType = contentType;
        return this;
    }

    /**
     * The URL of the thumbnail image associated with the content.
     */
    public LmsCreateContentRequestDto withCoverUrl(String coverUrl) {
        Utils.checkNotNull(coverUrl, "coverUrl");
        this.coverUrl = JsonNullable.of(coverUrl);
        return this;
    }

    /**
     * The URL of the thumbnail image associated with the content.
     */
    public LmsCreateContentRequestDto withCoverUrl(JsonNullable<String> coverUrl) {
        Utils.checkNotNull(coverUrl, "coverUrl");
        this.coverUrl = coverUrl;
        return this;
    }

    /**
     * Whether the content is active and available for users.
     */
    public LmsCreateContentRequestDto withActive(LmsCreateContentRequestDtoActive active) {
        Utils.checkNotNull(active, "active");
        this.active = JsonNullable.of(active);
        return this;
    }

    /**
     * Whether the content is active and available for users.
     */
    public LmsCreateContentRequestDto withActive(JsonNullable<? extends LmsCreateContentRequestDtoActive> active) {
        Utils.checkNotNull(active, "active");
        this.active = active;
        return this;
    }

    /**
     * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
     */
    public LmsCreateContentRequestDto withDuration(String duration) {
        Utils.checkNotNull(duration, "duration");
        this.duration = JsonNullable.of(duration);
        return this;
    }

    /**
     * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
     */
    public LmsCreateContentRequestDto withDuration(JsonNullable<String> duration) {
        Utils.checkNotNull(duration, "duration");
        this.duration = duration;
        return this;
    }

    /**
     * The skills associated with this content
     */
    public LmsCreateContentRequestDto withSkills(List<CreateSkillsApiModel> skills) {
        Utils.checkNotNull(skills, "skills");
        this.skills = JsonNullable.of(skills);
        return this;
    }

    /**
     * The skills associated with this content
     */
    public LmsCreateContentRequestDto withSkills(JsonNullable<? extends List<CreateSkillsApiModel>> skills) {
        Utils.checkNotNull(skills, "skills");
        this.skills = skills;
        return this;
    }

    /**
     * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
     */
    public LmsCreateContentRequestDto withOrder(double order) {
        Utils.checkNotNull(order, "order");
        this.order = JsonNullable.of(order);
        return this;
    }

    /**
     * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
     */
    public LmsCreateContentRequestDto withOrder(JsonNullable<Double> order) {
        Utils.checkNotNull(order, "order");
        this.order = order;
        return this;
    }

    /**
     * A short description or summary for the content
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public LmsCreateContentRequestDto withShortDescription(String shortDescription) {
        Utils.checkNotNull(shortDescription, "shortDescription");
        this.shortDescription = JsonNullable.of(shortDescription);
        return this;
    }

    /**
     * A short description or summary for the content
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public LmsCreateContentRequestDto withShortDescription(JsonNullable<String> shortDescription) {
        Utils.checkNotNull(shortDescription, "shortDescription");
        this.shortDescription = shortDescription;
        return this;
    }

    /**
     * The localization data for this content
     */
    public LmsCreateContentRequestDto withLocalizations(List<LocalizationModel> localizations) {
        Utils.checkNotNull(localizations, "localizations");
        this.localizations = JsonNullable.of(localizations);
        return this;
    }

    /**
     * The localization data for this content
     */
    public LmsCreateContentRequestDto withLocalizations(JsonNullable<? extends List<LocalizationModel>> localizations) {
        Utils.checkNotNull(localizations, "localizations");
        this.localizations = localizations;
        return this;
    }

    /**
     * A list of tags associated with the content
     */
    public LmsCreateContentRequestDto withTags(List<String> tags) {
        Utils.checkNotNull(tags, "tags");
        this.tags = JsonNullable.of(tags);
        return this;
    }

    /**
     * A list of tags associated with the content
     */
    public LmsCreateContentRequestDto withTags(JsonNullable<? extends List<String>> tags) {
        Utils.checkNotNull(tags, "tags");
        this.tags = tags;
        return this;
    }

    /**
     * The date on which the content was last updated.
     */
    public LmsCreateContentRequestDto withUpdatedAt(OffsetDateTime updatedAt) {
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.updatedAt = JsonNullable.of(updatedAt);
        return this;
    }

    /**
     * The date on which the content was last updated.
     */
    public LmsCreateContentRequestDto withUpdatedAt(JsonNullable<OffsetDateTime> updatedAt) {
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * The date on which the content was created.
     */
    public LmsCreateContentRequestDto withCreatedAt(OffsetDateTime createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = JsonNullable.of(createdAt);
        return this;
    }

    /**
     * The date on which the content was created.
     */
    public LmsCreateContentRequestDto withCreatedAt(JsonNullable<OffsetDateTime> createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }

    /**
     * The categories associated with this content
     */
    public LmsCreateContentRequestDto withCategories(List<CreateCategoriesApiModel> categories) {
        Utils.checkNotNull(categories, "categories");
        this.categories = JsonNullable.of(categories);
        return this;
    }

    /**
     * The categories associated with this content
     */
    public LmsCreateContentRequestDto withCategories(JsonNullable<? extends List<CreateCategoriesApiModel>> categories) {
        Utils.checkNotNull(categories, "categories");
        this.categories = categories;
        return this;
    }

    /**
     * The additional_data associated with this content
     */
    public LmsCreateContentRequestDto withAdditionalData(List<AdditionalData> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = JsonNullable.of(additionalData);
        return this;
    }

    /**
     * The additional_data associated with this content
     */
    public LmsCreateContentRequestDto withAdditionalData(JsonNullable<? extends List<AdditionalData>> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = additionalData;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LmsCreateContentRequestDto other = (LmsCreateContentRequestDto) o;
        return 
            Utils.enhancedDeepEquals(this.unifiedCustomFields, other.unifiedCustomFields) &&
            Utils.enhancedDeepEquals(this.externalReference, other.externalReference) &&
            Utils.enhancedDeepEquals(this.title, other.title) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.languages, other.languages) &&
            Utils.enhancedDeepEquals(this.contentUrl, other.contentUrl) &&
            Utils.enhancedDeepEquals(this.mobileLaunchContentUrl, other.mobileLaunchContentUrl) &&
            Utils.enhancedDeepEquals(this.contentType, other.contentType) &&
            Utils.enhancedDeepEquals(this.coverUrl, other.coverUrl) &&
            Utils.enhancedDeepEquals(this.active, other.active) &&
            Utils.enhancedDeepEquals(this.duration, other.duration) &&
            Utils.enhancedDeepEquals(this.skills, other.skills) &&
            Utils.enhancedDeepEquals(this.order, other.order) &&
            Utils.enhancedDeepEquals(this.shortDescription, other.shortDescription) &&
            Utils.enhancedDeepEquals(this.localizations, other.localizations) &&
            Utils.enhancedDeepEquals(this.tags, other.tags) &&
            Utils.enhancedDeepEquals(this.updatedAt, other.updatedAt) &&
            Utils.enhancedDeepEquals(this.createdAt, other.createdAt) &&
            Utils.enhancedDeepEquals(this.categories, other.categories) &&
            Utils.enhancedDeepEquals(this.additionalData, other.additionalData);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            unifiedCustomFields, externalReference, title,
            description, languages, contentUrl,
            mobileLaunchContentUrl, contentType, coverUrl,
            active, duration, skills,
            order, shortDescription, localizations,
            tags, updatedAt, createdAt,
            categories, additionalData);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LmsCreateContentRequestDto.class,
                "unifiedCustomFields", unifiedCustomFields,
                "externalReference", externalReference,
                "title", title,
                "description", description,
                "languages", languages,
                "contentUrl", contentUrl,
                "mobileLaunchContentUrl", mobileLaunchContentUrl,
                "contentType", contentType,
                "coverUrl", coverUrl,
                "active", active,
                "duration", duration,
                "skills", skills,
                "order", order,
                "shortDescription", shortDescription,
                "localizations", localizations,
                "tags", tags,
                "updatedAt", updatedAt,
                "createdAt", createdAt,
                "categories", categories,
                "additionalData", additionalData);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends Map<String, Object>> unifiedCustomFields = JsonNullable.undefined();

        private JsonNullable<String> externalReference = JsonNullable.undefined();

        private JsonNullable<String> title = JsonNullable.undefined();

        private JsonNullable<String> description = JsonNullable.undefined();

        private JsonNullable<? extends List<LanguageEnum>> languages = JsonNullable.undefined();

        private JsonNullable<String> contentUrl = JsonNullable.undefined();

        private JsonNullable<String> mobileLaunchContentUrl = JsonNullable.undefined();

        private JsonNullable<? extends LmsCreateContentRequestDtoContentType> contentType = JsonNullable.undefined();

        private JsonNullable<String> coverUrl = JsonNullable.undefined();

        private JsonNullable<? extends LmsCreateContentRequestDtoActive> active = JsonNullable.undefined();

        private JsonNullable<String> duration = JsonNullable.undefined();

        private JsonNullable<? extends List<CreateSkillsApiModel>> skills = JsonNullable.undefined();

        private JsonNullable<Double> order = JsonNullable.undefined();

        @Deprecated
        private JsonNullable<String> shortDescription = JsonNullable.undefined();

        private JsonNullable<? extends List<LocalizationModel>> localizations = JsonNullable.undefined();

        private JsonNullable<? extends List<String>> tags = JsonNullable.undefined();

        private JsonNullable<OffsetDateTime> updatedAt = JsonNullable.undefined();

        private JsonNullable<OffsetDateTime> createdAt = JsonNullable.undefined();

        private JsonNullable<? extends List<CreateCategoriesApiModel>> categories = JsonNullable.undefined();

        private JsonNullable<? extends List<AdditionalData>> additionalData = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Custom Unified Fields configured in your StackOne project
         */
        public Builder unifiedCustomFields(Map<String, Object> unifiedCustomFields) {
            Utils.checkNotNull(unifiedCustomFields, "unifiedCustomFields");
            this.unifiedCustomFields = JsonNullable.of(unifiedCustomFields);
            return this;
        }

        /**
         * Custom Unified Fields configured in your StackOne project
         */
        public Builder unifiedCustomFields(JsonNullable<? extends Map<String, Object>> unifiedCustomFields) {
            Utils.checkNotNull(unifiedCustomFields, "unifiedCustomFields");
            this.unifiedCustomFields = unifiedCustomFields;
            return this;
        }


        /**
         * The external ID associated with this content
         */
        public Builder externalReference(String externalReference) {
            Utils.checkNotNull(externalReference, "externalReference");
            this.externalReference = JsonNullable.of(externalReference);
            return this;
        }

        /**
         * The external ID associated with this content
         */
        public Builder externalReference(JsonNullable<String> externalReference) {
            Utils.checkNotNull(externalReference, "externalReference");
            this.externalReference = externalReference;
            return this;
        }


        /**
         * The title of the content
         */
        public Builder title(String title) {
            Utils.checkNotNull(title, "title");
            this.title = JsonNullable.of(title);
            return this;
        }

        /**
         * The title of the content
         */
        public Builder title(JsonNullable<String> title) {
            Utils.checkNotNull(title, "title");
            this.title = title;
            return this;
        }


        /**
         * The description of the content
         */
        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The description of the content
         */
        public Builder description(JsonNullable<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }


        /**
         * The languages associated with this content
         */
        public Builder languages(List<LanguageEnum> languages) {
            Utils.checkNotNull(languages, "languages");
            this.languages = JsonNullable.of(languages);
            return this;
        }

        /**
         * The languages associated with this content
         */
        public Builder languages(JsonNullable<? extends List<LanguageEnum>> languages) {
            Utils.checkNotNull(languages, "languages");
            this.languages = languages;
            return this;
        }


        /**
         * The external URL of the content
         */
        public Builder contentUrl(String contentUrl) {
            Utils.checkNotNull(contentUrl, "contentUrl");
            this.contentUrl = JsonNullable.of(contentUrl);
            return this;
        }

        /**
         * The external URL of the content
         */
        public Builder contentUrl(JsonNullable<String> contentUrl) {
            Utils.checkNotNull(contentUrl, "contentUrl");
            this.contentUrl = contentUrl;
            return this;
        }


        /**
         * The mobile friendly URL of the content
         */
        public Builder mobileLaunchContentUrl(String mobileLaunchContentUrl) {
            Utils.checkNotNull(mobileLaunchContentUrl, "mobileLaunchContentUrl");
            this.mobileLaunchContentUrl = JsonNullable.of(mobileLaunchContentUrl);
            return this;
        }

        /**
         * The mobile friendly URL of the content
         */
        public Builder mobileLaunchContentUrl(JsonNullable<String> mobileLaunchContentUrl) {
            Utils.checkNotNull(mobileLaunchContentUrl, "mobileLaunchContentUrl");
            this.mobileLaunchContentUrl = mobileLaunchContentUrl;
            return this;
        }


        /**
         * The type of content
         */
        public Builder contentType(LmsCreateContentRequestDtoContentType contentType) {
            Utils.checkNotNull(contentType, "contentType");
            this.contentType = JsonNullable.of(contentType);
            return this;
        }

        /**
         * The type of content
         */
        public Builder contentType(JsonNullable<? extends LmsCreateContentRequestDtoContentType> contentType) {
            Utils.checkNotNull(contentType, "contentType");
            this.contentType = contentType;
            return this;
        }


        /**
         * The URL of the thumbnail image associated with the content.
         */
        public Builder coverUrl(String coverUrl) {
            Utils.checkNotNull(coverUrl, "coverUrl");
            this.coverUrl = JsonNullable.of(coverUrl);
            return this;
        }

        /**
         * The URL of the thumbnail image associated with the content.
         */
        public Builder coverUrl(JsonNullable<String> coverUrl) {
            Utils.checkNotNull(coverUrl, "coverUrl");
            this.coverUrl = coverUrl;
            return this;
        }


        /**
         * Whether the content is active and available for users.
         */
        public Builder active(LmsCreateContentRequestDtoActive active) {
            Utils.checkNotNull(active, "active");
            this.active = JsonNullable.of(active);
            return this;
        }

        /**
         * Whether the content is active and available for users.
         */
        public Builder active(JsonNullable<? extends LmsCreateContentRequestDtoActive> active) {
            Utils.checkNotNull(active, "active");
            this.active = active;
            return this;
        }


        /**
         * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
         */
        public Builder duration(String duration) {
            Utils.checkNotNull(duration, "duration");
            this.duration = JsonNullable.of(duration);
            return this;
        }

        /**
         * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
         */
        public Builder duration(JsonNullable<String> duration) {
            Utils.checkNotNull(duration, "duration");
            this.duration = duration;
            return this;
        }


        /**
         * The skills associated with this content
         */
        public Builder skills(List<CreateSkillsApiModel> skills) {
            Utils.checkNotNull(skills, "skills");
            this.skills = JsonNullable.of(skills);
            return this;
        }

        /**
         * The skills associated with this content
         */
        public Builder skills(JsonNullable<? extends List<CreateSkillsApiModel>> skills) {
            Utils.checkNotNull(skills, "skills");
            this.skills = skills;
            return this;
        }


        /**
         * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
         */
        public Builder order(double order) {
            Utils.checkNotNull(order, "order");
            this.order = JsonNullable.of(order);
            return this;
        }

        /**
         * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
         */
        public Builder order(JsonNullable<Double> order) {
            Utils.checkNotNull(order, "order");
            this.order = order;
            return this;
        }


        /**
         * A short description or summary for the content
         * 
         * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
         */
        @Deprecated
        public Builder shortDescription(String shortDescription) {
            Utils.checkNotNull(shortDescription, "shortDescription");
            this.shortDescription = JsonNullable.of(shortDescription);
            return this;
        }

        /**
         * A short description or summary for the content
         * 
         * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
         */
        @Deprecated
        public Builder shortDescription(JsonNullable<String> shortDescription) {
            Utils.checkNotNull(shortDescription, "shortDescription");
            this.shortDescription = shortDescription;
            return this;
        }


        /**
         * The localization data for this content
         */
        public Builder localizations(List<LocalizationModel> localizations) {
            Utils.checkNotNull(localizations, "localizations");
            this.localizations = JsonNullable.of(localizations);
            return this;
        }

        /**
         * The localization data for this content
         */
        public Builder localizations(JsonNullable<? extends List<LocalizationModel>> localizations) {
            Utils.checkNotNull(localizations, "localizations");
            this.localizations = localizations;
            return this;
        }


        /**
         * A list of tags associated with the content
         */
        public Builder tags(List<String> tags) {
            Utils.checkNotNull(tags, "tags");
            this.tags = JsonNullable.of(tags);
            return this;
        }

        /**
         * A list of tags associated with the content
         */
        public Builder tags(JsonNullable<? extends List<String>> tags) {
            Utils.checkNotNull(tags, "tags");
            this.tags = tags;
            return this;
        }


        /**
         * The date on which the content was last updated.
         */
        public Builder updatedAt(OffsetDateTime updatedAt) {
            Utils.checkNotNull(updatedAt, "updatedAt");
            this.updatedAt = JsonNullable.of(updatedAt);
            return this;
        }

        /**
         * The date on which the content was last updated.
         */
        public Builder updatedAt(JsonNullable<OffsetDateTime> updatedAt) {
            Utils.checkNotNull(updatedAt, "updatedAt");
            this.updatedAt = updatedAt;
            return this;
        }


        /**
         * The date on which the content was created.
         */
        public Builder createdAt(OffsetDateTime createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = JsonNullable.of(createdAt);
            return this;
        }

        /**
         * The date on which the content was created.
         */
        public Builder createdAt(JsonNullable<OffsetDateTime> createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }


        /**
         * The categories associated with this content
         */
        public Builder categories(List<CreateCategoriesApiModel> categories) {
            Utils.checkNotNull(categories, "categories");
            this.categories = JsonNullable.of(categories);
            return this;
        }

        /**
         * The categories associated with this content
         */
        public Builder categories(JsonNullable<? extends List<CreateCategoriesApiModel>> categories) {
            Utils.checkNotNull(categories, "categories");
            this.categories = categories;
            return this;
        }


        /**
         * The additional_data associated with this content
         */
        public Builder additionalData(List<AdditionalData> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = JsonNullable.of(additionalData);
            return this;
        }

        /**
         * The additional_data associated with this content
         */
        public Builder additionalData(JsonNullable<? extends List<AdditionalData>> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = additionalData;
            return this;
        }

        public LmsCreateContentRequestDto build() {

            return new LmsCreateContentRequestDto(
                unifiedCustomFields, externalReference, title,
                description, languages, contentUrl,
                mobileLaunchContentUrl, contentType, coverUrl,
                active, duration, skills,
                order, shortDescription, localizations,
                tags, updatedAt, createdAt,
                categories, additionalData);
        }

    }
}
