/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.core.JacksonException;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

/**
 * <p>Wrapper class for an "open" enum. "Open" enums are those that are expected
 * to evolve (particularly with the addition of enum members over time). If an
 * open enum is used then the appearance of unexpected enum values (say in a 
 * response from an updated an API) will not bring about a runtime error thus 
 * ensuring that non-updated client versions can continue to work without error.
 *
 * <p>Note that instances are immutable and are singletons (an internal thread-safe
 * cache is maintained to ensure that). As a consequence instances created with the 
 * same value will satisfy reference equality (via {@code ==}).
 * 
 * <p>This class is intended to emulate an enum (in terms of common usage and with 
 * reference equality) but with the ability to carry unknown values. Unfortunately
 * Java does not permit the use of an instance in a switch expression but you can 
 * use the {@code asEnum()} method (after dealing with the `Optional` appropriately).
 *
 */
/**
 * AccountingJournalCreateRequestDtoValue
 * 
 * <p>Default currency for the company
 */
@JsonDeserialize(using = AccountingJournalCreateRequestDtoValue._Deserializer.class)
@JsonSerialize(using = AccountingJournalCreateRequestDtoValue._Serializer.class)
public class AccountingJournalCreateRequestDtoValue {

    public static final AccountingJournalCreateRequestDtoValue AED = new AccountingJournalCreateRequestDtoValue("AED");
    public static final AccountingJournalCreateRequestDtoValue AFN = new AccountingJournalCreateRequestDtoValue("AFN");
    public static final AccountingJournalCreateRequestDtoValue ALL = new AccountingJournalCreateRequestDtoValue("ALL");
    public static final AccountingJournalCreateRequestDtoValue AMD = new AccountingJournalCreateRequestDtoValue("AMD");
    public static final AccountingJournalCreateRequestDtoValue ANG = new AccountingJournalCreateRequestDtoValue("ANG");
    public static final AccountingJournalCreateRequestDtoValue AOA = new AccountingJournalCreateRequestDtoValue("AOA");
    public static final AccountingJournalCreateRequestDtoValue ARS = new AccountingJournalCreateRequestDtoValue("ARS");
    public static final AccountingJournalCreateRequestDtoValue AUD = new AccountingJournalCreateRequestDtoValue("AUD");
    public static final AccountingJournalCreateRequestDtoValue AWG = new AccountingJournalCreateRequestDtoValue("AWG");
    public static final AccountingJournalCreateRequestDtoValue AZN = new AccountingJournalCreateRequestDtoValue("AZN");
    public static final AccountingJournalCreateRequestDtoValue BAM = new AccountingJournalCreateRequestDtoValue("BAM");
    public static final AccountingJournalCreateRequestDtoValue BBD = new AccountingJournalCreateRequestDtoValue("BBD");
    public static final AccountingJournalCreateRequestDtoValue BDT = new AccountingJournalCreateRequestDtoValue("BDT");
    public static final AccountingJournalCreateRequestDtoValue BGN = new AccountingJournalCreateRequestDtoValue("BGN");
    public static final AccountingJournalCreateRequestDtoValue BHD = new AccountingJournalCreateRequestDtoValue("BHD");
    public static final AccountingJournalCreateRequestDtoValue BIF = new AccountingJournalCreateRequestDtoValue("BIF");
    public static final AccountingJournalCreateRequestDtoValue BMD = new AccountingJournalCreateRequestDtoValue("BMD");
    public static final AccountingJournalCreateRequestDtoValue BND = new AccountingJournalCreateRequestDtoValue("BND");
    public static final AccountingJournalCreateRequestDtoValue BOB = new AccountingJournalCreateRequestDtoValue("BOB");
    public static final AccountingJournalCreateRequestDtoValue BRL = new AccountingJournalCreateRequestDtoValue("BRL");
    public static final AccountingJournalCreateRequestDtoValue BSD = new AccountingJournalCreateRequestDtoValue("BSD");
    public static final AccountingJournalCreateRequestDtoValue BTN = new AccountingJournalCreateRequestDtoValue("BTN");
    public static final AccountingJournalCreateRequestDtoValue BWP = new AccountingJournalCreateRequestDtoValue("BWP");
    public static final AccountingJournalCreateRequestDtoValue BYN = new AccountingJournalCreateRequestDtoValue("BYN");
    public static final AccountingJournalCreateRequestDtoValue BZD = new AccountingJournalCreateRequestDtoValue("BZD");
    public static final AccountingJournalCreateRequestDtoValue CAD = new AccountingJournalCreateRequestDtoValue("CAD");
    public static final AccountingJournalCreateRequestDtoValue CDF = new AccountingJournalCreateRequestDtoValue("CDF");
    public static final AccountingJournalCreateRequestDtoValue CHF = new AccountingJournalCreateRequestDtoValue("CHF");
    public static final AccountingJournalCreateRequestDtoValue CLP = new AccountingJournalCreateRequestDtoValue("CLP");
    public static final AccountingJournalCreateRequestDtoValue CNY = new AccountingJournalCreateRequestDtoValue("CNY");
    public static final AccountingJournalCreateRequestDtoValue COP = new AccountingJournalCreateRequestDtoValue("COP");
    public static final AccountingJournalCreateRequestDtoValue CRC = new AccountingJournalCreateRequestDtoValue("CRC");
    public static final AccountingJournalCreateRequestDtoValue CUC = new AccountingJournalCreateRequestDtoValue("CUC");
    public static final AccountingJournalCreateRequestDtoValue CUP = new AccountingJournalCreateRequestDtoValue("CUP");
    public static final AccountingJournalCreateRequestDtoValue CVE = new AccountingJournalCreateRequestDtoValue("CVE");
    public static final AccountingJournalCreateRequestDtoValue CZK = new AccountingJournalCreateRequestDtoValue("CZK");
    public static final AccountingJournalCreateRequestDtoValue DJF = new AccountingJournalCreateRequestDtoValue("DJF");
    public static final AccountingJournalCreateRequestDtoValue DKK = new AccountingJournalCreateRequestDtoValue("DKK");
    public static final AccountingJournalCreateRequestDtoValue DOP = new AccountingJournalCreateRequestDtoValue("DOP");
    public static final AccountingJournalCreateRequestDtoValue DZD = new AccountingJournalCreateRequestDtoValue("DZD");
    public static final AccountingJournalCreateRequestDtoValue EGP = new AccountingJournalCreateRequestDtoValue("EGP");
    public static final AccountingJournalCreateRequestDtoValue ERN = new AccountingJournalCreateRequestDtoValue("ERN");
    public static final AccountingJournalCreateRequestDtoValue ETB = new AccountingJournalCreateRequestDtoValue("ETB");
    public static final AccountingJournalCreateRequestDtoValue EUR = new AccountingJournalCreateRequestDtoValue("EUR");
    public static final AccountingJournalCreateRequestDtoValue FJD = new AccountingJournalCreateRequestDtoValue("FJD");
    public static final AccountingJournalCreateRequestDtoValue FKP = new AccountingJournalCreateRequestDtoValue("FKP");
    public static final AccountingJournalCreateRequestDtoValue GBP = new AccountingJournalCreateRequestDtoValue("GBP");
    public static final AccountingJournalCreateRequestDtoValue GEL = new AccountingJournalCreateRequestDtoValue("GEL");
    public static final AccountingJournalCreateRequestDtoValue GHS = new AccountingJournalCreateRequestDtoValue("GHS");
    public static final AccountingJournalCreateRequestDtoValue GIP = new AccountingJournalCreateRequestDtoValue("GIP");
    public static final AccountingJournalCreateRequestDtoValue GMD = new AccountingJournalCreateRequestDtoValue("GMD");
    public static final AccountingJournalCreateRequestDtoValue GNF = new AccountingJournalCreateRequestDtoValue("GNF");
    public static final AccountingJournalCreateRequestDtoValue GTQ = new AccountingJournalCreateRequestDtoValue("GTQ");
    public static final AccountingJournalCreateRequestDtoValue GYD = new AccountingJournalCreateRequestDtoValue("GYD");
    public static final AccountingJournalCreateRequestDtoValue HKD = new AccountingJournalCreateRequestDtoValue("HKD");
    public static final AccountingJournalCreateRequestDtoValue HNL = new AccountingJournalCreateRequestDtoValue("HNL");
    public static final AccountingJournalCreateRequestDtoValue HRK = new AccountingJournalCreateRequestDtoValue("HRK");
    public static final AccountingJournalCreateRequestDtoValue HTG = new AccountingJournalCreateRequestDtoValue("HTG");
    public static final AccountingJournalCreateRequestDtoValue HUF = new AccountingJournalCreateRequestDtoValue("HUF");
    public static final AccountingJournalCreateRequestDtoValue IDR = new AccountingJournalCreateRequestDtoValue("IDR");
    public static final AccountingJournalCreateRequestDtoValue ILS = new AccountingJournalCreateRequestDtoValue("ILS");
    public static final AccountingJournalCreateRequestDtoValue INR = new AccountingJournalCreateRequestDtoValue("INR");
    public static final AccountingJournalCreateRequestDtoValue IQD = new AccountingJournalCreateRequestDtoValue("IQD");
    public static final AccountingJournalCreateRequestDtoValue IRR = new AccountingJournalCreateRequestDtoValue("IRR");
    public static final AccountingJournalCreateRequestDtoValue ISK = new AccountingJournalCreateRequestDtoValue("ISK");
    public static final AccountingJournalCreateRequestDtoValue JMD = new AccountingJournalCreateRequestDtoValue("JMD");
    public static final AccountingJournalCreateRequestDtoValue JOD = new AccountingJournalCreateRequestDtoValue("JOD");
    public static final AccountingJournalCreateRequestDtoValue JPY = new AccountingJournalCreateRequestDtoValue("JPY");
    public static final AccountingJournalCreateRequestDtoValue KES = new AccountingJournalCreateRequestDtoValue("KES");
    public static final AccountingJournalCreateRequestDtoValue KGS = new AccountingJournalCreateRequestDtoValue("KGS");
    public static final AccountingJournalCreateRequestDtoValue KHR = new AccountingJournalCreateRequestDtoValue("KHR");
    public static final AccountingJournalCreateRequestDtoValue KMF = new AccountingJournalCreateRequestDtoValue("KMF");
    public static final AccountingJournalCreateRequestDtoValue KPW = new AccountingJournalCreateRequestDtoValue("KPW");
    public static final AccountingJournalCreateRequestDtoValue KRW = new AccountingJournalCreateRequestDtoValue("KRW");
    public static final AccountingJournalCreateRequestDtoValue KWD = new AccountingJournalCreateRequestDtoValue("KWD");
    public static final AccountingJournalCreateRequestDtoValue KYD = new AccountingJournalCreateRequestDtoValue("KYD");
    public static final AccountingJournalCreateRequestDtoValue KZT = new AccountingJournalCreateRequestDtoValue("KZT");
    public static final AccountingJournalCreateRequestDtoValue LAK = new AccountingJournalCreateRequestDtoValue("LAK");
    public static final AccountingJournalCreateRequestDtoValue LBP = new AccountingJournalCreateRequestDtoValue("LBP");
    public static final AccountingJournalCreateRequestDtoValue LKR = new AccountingJournalCreateRequestDtoValue("LKR");
    public static final AccountingJournalCreateRequestDtoValue LRD = new AccountingJournalCreateRequestDtoValue("LRD");
    public static final AccountingJournalCreateRequestDtoValue LSL = new AccountingJournalCreateRequestDtoValue("LSL");
    public static final AccountingJournalCreateRequestDtoValue LYD = new AccountingJournalCreateRequestDtoValue("LYD");
    public static final AccountingJournalCreateRequestDtoValue MAD = new AccountingJournalCreateRequestDtoValue("MAD");
    public static final AccountingJournalCreateRequestDtoValue MDL = new AccountingJournalCreateRequestDtoValue("MDL");
    public static final AccountingJournalCreateRequestDtoValue MGA = new AccountingJournalCreateRequestDtoValue("MGA");
    public static final AccountingJournalCreateRequestDtoValue MKD = new AccountingJournalCreateRequestDtoValue("MKD");
    public static final AccountingJournalCreateRequestDtoValue MMK = new AccountingJournalCreateRequestDtoValue("MMK");
    public static final AccountingJournalCreateRequestDtoValue MNT = new AccountingJournalCreateRequestDtoValue("MNT");
    public static final AccountingJournalCreateRequestDtoValue MOP = new AccountingJournalCreateRequestDtoValue("MOP");
    public static final AccountingJournalCreateRequestDtoValue MRU = new AccountingJournalCreateRequestDtoValue("MRU");
    public static final AccountingJournalCreateRequestDtoValue MUR = new AccountingJournalCreateRequestDtoValue("MUR");
    public static final AccountingJournalCreateRequestDtoValue MVR = new AccountingJournalCreateRequestDtoValue("MVR");
    public static final AccountingJournalCreateRequestDtoValue MWK = new AccountingJournalCreateRequestDtoValue("MWK");
    public static final AccountingJournalCreateRequestDtoValue MXN = new AccountingJournalCreateRequestDtoValue("MXN");
    public static final AccountingJournalCreateRequestDtoValue MYR = new AccountingJournalCreateRequestDtoValue("MYR");
    public static final AccountingJournalCreateRequestDtoValue MZN = new AccountingJournalCreateRequestDtoValue("MZN");
    public static final AccountingJournalCreateRequestDtoValue NAD = new AccountingJournalCreateRequestDtoValue("NAD");
    public static final AccountingJournalCreateRequestDtoValue NGN = new AccountingJournalCreateRequestDtoValue("NGN");
    public static final AccountingJournalCreateRequestDtoValue NIO = new AccountingJournalCreateRequestDtoValue("NIO");
    public static final AccountingJournalCreateRequestDtoValue NOK = new AccountingJournalCreateRequestDtoValue("NOK");
    public static final AccountingJournalCreateRequestDtoValue NPR = new AccountingJournalCreateRequestDtoValue("NPR");
    public static final AccountingJournalCreateRequestDtoValue NZD = new AccountingJournalCreateRequestDtoValue("NZD");
    public static final AccountingJournalCreateRequestDtoValue OMR = new AccountingJournalCreateRequestDtoValue("OMR");
    public static final AccountingJournalCreateRequestDtoValue PAB = new AccountingJournalCreateRequestDtoValue("PAB");
    public static final AccountingJournalCreateRequestDtoValue PEN = new AccountingJournalCreateRequestDtoValue("PEN");
    public static final AccountingJournalCreateRequestDtoValue PGK = new AccountingJournalCreateRequestDtoValue("PGK");
    public static final AccountingJournalCreateRequestDtoValue PHP = new AccountingJournalCreateRequestDtoValue("PHP");
    public static final AccountingJournalCreateRequestDtoValue PKR = new AccountingJournalCreateRequestDtoValue("PKR");
    public static final AccountingJournalCreateRequestDtoValue PLN = new AccountingJournalCreateRequestDtoValue("PLN");
    public static final AccountingJournalCreateRequestDtoValue PYG = new AccountingJournalCreateRequestDtoValue("PYG");
    public static final AccountingJournalCreateRequestDtoValue QAR = new AccountingJournalCreateRequestDtoValue("QAR");
    public static final AccountingJournalCreateRequestDtoValue RON = new AccountingJournalCreateRequestDtoValue("RON");
    public static final AccountingJournalCreateRequestDtoValue RSD = new AccountingJournalCreateRequestDtoValue("RSD");
    public static final AccountingJournalCreateRequestDtoValue RUB = new AccountingJournalCreateRequestDtoValue("RUB");
    public static final AccountingJournalCreateRequestDtoValue RWF = new AccountingJournalCreateRequestDtoValue("RWF");
    public static final AccountingJournalCreateRequestDtoValue SAR = new AccountingJournalCreateRequestDtoValue("SAR");
    public static final AccountingJournalCreateRequestDtoValue SBD = new AccountingJournalCreateRequestDtoValue("SBD");
    public static final AccountingJournalCreateRequestDtoValue SCR = new AccountingJournalCreateRequestDtoValue("SCR");
    public static final AccountingJournalCreateRequestDtoValue SDG = new AccountingJournalCreateRequestDtoValue("SDG");
    public static final AccountingJournalCreateRequestDtoValue SEK = new AccountingJournalCreateRequestDtoValue("SEK");
    public static final AccountingJournalCreateRequestDtoValue SGD = new AccountingJournalCreateRequestDtoValue("SGD");
    public static final AccountingJournalCreateRequestDtoValue SHP = new AccountingJournalCreateRequestDtoValue("SHP");
    public static final AccountingJournalCreateRequestDtoValue SLL = new AccountingJournalCreateRequestDtoValue("SLL");
    public static final AccountingJournalCreateRequestDtoValue SOS = new AccountingJournalCreateRequestDtoValue("SOS");
    public static final AccountingJournalCreateRequestDtoValue SRD = new AccountingJournalCreateRequestDtoValue("SRD");
    public static final AccountingJournalCreateRequestDtoValue SSP = new AccountingJournalCreateRequestDtoValue("SSP");
    public static final AccountingJournalCreateRequestDtoValue STN = new AccountingJournalCreateRequestDtoValue("STN");
    public static final AccountingJournalCreateRequestDtoValue SYP = new AccountingJournalCreateRequestDtoValue("SYP");
    public static final AccountingJournalCreateRequestDtoValue SZL = new AccountingJournalCreateRequestDtoValue("SZL");
    public static final AccountingJournalCreateRequestDtoValue THB = new AccountingJournalCreateRequestDtoValue("THB");
    public static final AccountingJournalCreateRequestDtoValue TJS = new AccountingJournalCreateRequestDtoValue("TJS");
    public static final AccountingJournalCreateRequestDtoValue TMT = new AccountingJournalCreateRequestDtoValue("TMT");
    public static final AccountingJournalCreateRequestDtoValue TND = new AccountingJournalCreateRequestDtoValue("TND");
    public static final AccountingJournalCreateRequestDtoValue TOP = new AccountingJournalCreateRequestDtoValue("TOP");
    public static final AccountingJournalCreateRequestDtoValue TRY = new AccountingJournalCreateRequestDtoValue("TRY");
    public static final AccountingJournalCreateRequestDtoValue TTD = new AccountingJournalCreateRequestDtoValue("TTD");
    public static final AccountingJournalCreateRequestDtoValue TWD = new AccountingJournalCreateRequestDtoValue("TWD");
    public static final AccountingJournalCreateRequestDtoValue TZS = new AccountingJournalCreateRequestDtoValue("TZS");
    public static final AccountingJournalCreateRequestDtoValue UAH = new AccountingJournalCreateRequestDtoValue("UAH");
    public static final AccountingJournalCreateRequestDtoValue UGX = new AccountingJournalCreateRequestDtoValue("UGX");
    public static final AccountingJournalCreateRequestDtoValue USD = new AccountingJournalCreateRequestDtoValue("USD");
    public static final AccountingJournalCreateRequestDtoValue UYU = new AccountingJournalCreateRequestDtoValue("UYU");
    public static final AccountingJournalCreateRequestDtoValue UZS = new AccountingJournalCreateRequestDtoValue("UZS");
    public static final AccountingJournalCreateRequestDtoValue VES = new AccountingJournalCreateRequestDtoValue("VES");
    public static final AccountingJournalCreateRequestDtoValue VND = new AccountingJournalCreateRequestDtoValue("VND");
    public static final AccountingJournalCreateRequestDtoValue VUV = new AccountingJournalCreateRequestDtoValue("VUV");
    public static final AccountingJournalCreateRequestDtoValue WST = new AccountingJournalCreateRequestDtoValue("WST");
    public static final AccountingJournalCreateRequestDtoValue XAF = new AccountingJournalCreateRequestDtoValue("XAF");
    public static final AccountingJournalCreateRequestDtoValue XCD = new AccountingJournalCreateRequestDtoValue("XCD");
    public static final AccountingJournalCreateRequestDtoValue XDR = new AccountingJournalCreateRequestDtoValue("XDR");
    public static final AccountingJournalCreateRequestDtoValue XOF = new AccountingJournalCreateRequestDtoValue("XOF");
    public static final AccountingJournalCreateRequestDtoValue XPF = new AccountingJournalCreateRequestDtoValue("XPF");
    public static final AccountingJournalCreateRequestDtoValue YER = new AccountingJournalCreateRequestDtoValue("YER");
    public static final AccountingJournalCreateRequestDtoValue ZAR = new AccountingJournalCreateRequestDtoValue("ZAR");
    public static final AccountingJournalCreateRequestDtoValue ZMW = new AccountingJournalCreateRequestDtoValue("ZMW");
    public static final AccountingJournalCreateRequestDtoValue ZWL = new AccountingJournalCreateRequestDtoValue("ZWL");
    public static final AccountingJournalCreateRequestDtoValue UNMAPPED_VALUE = new AccountingJournalCreateRequestDtoValue("unmapped_value");

    // This map will grow whenever a Color gets created with a new
    // unrecognized value (a potential memory leak if the user is not
    // careful). Keep this field lower case to avoid clashing with
    // generated member names which will always be upper cased (Java
    // convention)
    private static final Map<String, AccountingJournalCreateRequestDtoValue> values = createValuesMap();
    private static final Map<String, AccountingJournalCreateRequestDtoValueEnum> enums = createEnumsMap();

    private final String value;

    private AccountingJournalCreateRequestDtoValue(String value) {
        this.value = value;
    }

    /**
     * Returns a AccountingJournalCreateRequestDtoValue with the given value. For a specific value the 
     * returned object will always be a singleton so reference equality 
     * is satisfied when the values are the same.
     * 
     * @param value value to be wrapped as AccountingJournalCreateRequestDtoValue
     */ 
    public static AccountingJournalCreateRequestDtoValue of(String value) {
        synchronized (AccountingJournalCreateRequestDtoValue.class) {
            return values.computeIfAbsent(value, v -> new AccountingJournalCreateRequestDtoValue(v));
        }
    }

    public String value() {
        return value;
    }

    public Optional<AccountingJournalCreateRequestDtoValueEnum> asEnum() {
        return Optional.ofNullable(enums.getOrDefault(value, null));
    }

    public boolean isKnown() {
        return asEnum().isPresent();
    }

    @Override
    public int hashCode() {
        return Objects.hash(value);
    }

    @Override
    public boolean equals(java.lang.Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        AccountingJournalCreateRequestDtoValue other = (AccountingJournalCreateRequestDtoValue) obj;
        return Objects.equals(value, other.value);
    }

    @Override
    public String toString() {
        return "AccountingJournalCreateRequestDtoValue [value=" + value + "]";
    }

    // return an array just like an enum
    public static AccountingJournalCreateRequestDtoValue[] values() {
        synchronized (AccountingJournalCreateRequestDtoValue.class) {
            return values.values().toArray(new AccountingJournalCreateRequestDtoValue[] {});
        }
    }

    private static final Map<String, AccountingJournalCreateRequestDtoValue> createValuesMap() {
        Map<String, AccountingJournalCreateRequestDtoValue> map = new LinkedHashMap<>();
        map.put("AED", AED);
        map.put("AFN", AFN);
        map.put("ALL", ALL);
        map.put("AMD", AMD);
        map.put("ANG", ANG);
        map.put("AOA", AOA);
        map.put("ARS", ARS);
        map.put("AUD", AUD);
        map.put("AWG", AWG);
        map.put("AZN", AZN);
        map.put("BAM", BAM);
        map.put("BBD", BBD);
        map.put("BDT", BDT);
        map.put("BGN", BGN);
        map.put("BHD", BHD);
        map.put("BIF", BIF);
        map.put("BMD", BMD);
        map.put("BND", BND);
        map.put("BOB", BOB);
        map.put("BRL", BRL);
        map.put("BSD", BSD);
        map.put("BTN", BTN);
        map.put("BWP", BWP);
        map.put("BYN", BYN);
        map.put("BZD", BZD);
        map.put("CAD", CAD);
        map.put("CDF", CDF);
        map.put("CHF", CHF);
        map.put("CLP", CLP);
        map.put("CNY", CNY);
        map.put("COP", COP);
        map.put("CRC", CRC);
        map.put("CUC", CUC);
        map.put("CUP", CUP);
        map.put("CVE", CVE);
        map.put("CZK", CZK);
        map.put("DJF", DJF);
        map.put("DKK", DKK);
        map.put("DOP", DOP);
        map.put("DZD", DZD);
        map.put("EGP", EGP);
        map.put("ERN", ERN);
        map.put("ETB", ETB);
        map.put("EUR", EUR);
        map.put("FJD", FJD);
        map.put("FKP", FKP);
        map.put("GBP", GBP);
        map.put("GEL", GEL);
        map.put("GHS", GHS);
        map.put("GIP", GIP);
        map.put("GMD", GMD);
        map.put("GNF", GNF);
        map.put("GTQ", GTQ);
        map.put("GYD", GYD);
        map.put("HKD", HKD);
        map.put("HNL", HNL);
        map.put("HRK", HRK);
        map.put("HTG", HTG);
        map.put("HUF", HUF);
        map.put("IDR", IDR);
        map.put("ILS", ILS);
        map.put("INR", INR);
        map.put("IQD", IQD);
        map.put("IRR", IRR);
        map.put("ISK", ISK);
        map.put("JMD", JMD);
        map.put("JOD", JOD);
        map.put("JPY", JPY);
        map.put("KES", KES);
        map.put("KGS", KGS);
        map.put("KHR", KHR);
        map.put("KMF", KMF);
        map.put("KPW", KPW);
        map.put("KRW", KRW);
        map.put("KWD", KWD);
        map.put("KYD", KYD);
        map.put("KZT", KZT);
        map.put("LAK", LAK);
        map.put("LBP", LBP);
        map.put("LKR", LKR);
        map.put("LRD", LRD);
        map.put("LSL", LSL);
        map.put("LYD", LYD);
        map.put("MAD", MAD);
        map.put("MDL", MDL);
        map.put("MGA", MGA);
        map.put("MKD", MKD);
        map.put("MMK", MMK);
        map.put("MNT", MNT);
        map.put("MOP", MOP);
        map.put("MRU", MRU);
        map.put("MUR", MUR);
        map.put("MVR", MVR);
        map.put("MWK", MWK);
        map.put("MXN", MXN);
        map.put("MYR", MYR);
        map.put("MZN", MZN);
        map.put("NAD", NAD);
        map.put("NGN", NGN);
        map.put("NIO", NIO);
        map.put("NOK", NOK);
        map.put("NPR", NPR);
        map.put("NZD", NZD);
        map.put("OMR", OMR);
        map.put("PAB", PAB);
        map.put("PEN", PEN);
        map.put("PGK", PGK);
        map.put("PHP", PHP);
        map.put("PKR", PKR);
        map.put("PLN", PLN);
        map.put("PYG", PYG);
        map.put("QAR", QAR);
        map.put("RON", RON);
        map.put("RSD", RSD);
        map.put("RUB", RUB);
        map.put("RWF", RWF);
        map.put("SAR", SAR);
        map.put("SBD", SBD);
        map.put("SCR", SCR);
        map.put("SDG", SDG);
        map.put("SEK", SEK);
        map.put("SGD", SGD);
        map.put("SHP", SHP);
        map.put("SLL", SLL);
        map.put("SOS", SOS);
        map.put("SRD", SRD);
        map.put("SSP", SSP);
        map.put("STN", STN);
        map.put("SYP", SYP);
        map.put("SZL", SZL);
        map.put("THB", THB);
        map.put("TJS", TJS);
        map.put("TMT", TMT);
        map.put("TND", TND);
        map.put("TOP", TOP);
        map.put("TRY", TRY);
        map.put("TTD", TTD);
        map.put("TWD", TWD);
        map.put("TZS", TZS);
        map.put("UAH", UAH);
        map.put("UGX", UGX);
        map.put("USD", USD);
        map.put("UYU", UYU);
        map.put("UZS", UZS);
        map.put("VES", VES);
        map.put("VND", VND);
        map.put("VUV", VUV);
        map.put("WST", WST);
        map.put("XAF", XAF);
        map.put("XCD", XCD);
        map.put("XDR", XDR);
        map.put("XOF", XOF);
        map.put("XPF", XPF);
        map.put("YER", YER);
        map.put("ZAR", ZAR);
        map.put("ZMW", ZMW);
        map.put("ZWL", ZWL);
        map.put("unmapped_value", UNMAPPED_VALUE);
        return map;
    }

    private static final Map<String, AccountingJournalCreateRequestDtoValueEnum> createEnumsMap() {
        Map<String, AccountingJournalCreateRequestDtoValueEnum> map = new HashMap<>();
        map.put("AED", AccountingJournalCreateRequestDtoValueEnum.AED);
        map.put("AFN", AccountingJournalCreateRequestDtoValueEnum.AFN);
        map.put("ALL", AccountingJournalCreateRequestDtoValueEnum.ALL);
        map.put("AMD", AccountingJournalCreateRequestDtoValueEnum.AMD);
        map.put("ANG", AccountingJournalCreateRequestDtoValueEnum.ANG);
        map.put("AOA", AccountingJournalCreateRequestDtoValueEnum.AOA);
        map.put("ARS", AccountingJournalCreateRequestDtoValueEnum.ARS);
        map.put("AUD", AccountingJournalCreateRequestDtoValueEnum.AUD);
        map.put("AWG", AccountingJournalCreateRequestDtoValueEnum.AWG);
        map.put("AZN", AccountingJournalCreateRequestDtoValueEnum.AZN);
        map.put("BAM", AccountingJournalCreateRequestDtoValueEnum.BAM);
        map.put("BBD", AccountingJournalCreateRequestDtoValueEnum.BBD);
        map.put("BDT", AccountingJournalCreateRequestDtoValueEnum.BDT);
        map.put("BGN", AccountingJournalCreateRequestDtoValueEnum.BGN);
        map.put("BHD", AccountingJournalCreateRequestDtoValueEnum.BHD);
        map.put("BIF", AccountingJournalCreateRequestDtoValueEnum.BIF);
        map.put("BMD", AccountingJournalCreateRequestDtoValueEnum.BMD);
        map.put("BND", AccountingJournalCreateRequestDtoValueEnum.BND);
        map.put("BOB", AccountingJournalCreateRequestDtoValueEnum.BOB);
        map.put("BRL", AccountingJournalCreateRequestDtoValueEnum.BRL);
        map.put("BSD", AccountingJournalCreateRequestDtoValueEnum.BSD);
        map.put("BTN", AccountingJournalCreateRequestDtoValueEnum.BTN);
        map.put("BWP", AccountingJournalCreateRequestDtoValueEnum.BWP);
        map.put("BYN", AccountingJournalCreateRequestDtoValueEnum.BYN);
        map.put("BZD", AccountingJournalCreateRequestDtoValueEnum.BZD);
        map.put("CAD", AccountingJournalCreateRequestDtoValueEnum.CAD);
        map.put("CDF", AccountingJournalCreateRequestDtoValueEnum.CDF);
        map.put("CHF", AccountingJournalCreateRequestDtoValueEnum.CHF);
        map.put("CLP", AccountingJournalCreateRequestDtoValueEnum.CLP);
        map.put("CNY", AccountingJournalCreateRequestDtoValueEnum.CNY);
        map.put("COP", AccountingJournalCreateRequestDtoValueEnum.COP);
        map.put("CRC", AccountingJournalCreateRequestDtoValueEnum.CRC);
        map.put("CUC", AccountingJournalCreateRequestDtoValueEnum.CUC);
        map.put("CUP", AccountingJournalCreateRequestDtoValueEnum.CUP);
        map.put("CVE", AccountingJournalCreateRequestDtoValueEnum.CVE);
        map.put("CZK", AccountingJournalCreateRequestDtoValueEnum.CZK);
        map.put("DJF", AccountingJournalCreateRequestDtoValueEnum.DJF);
        map.put("DKK", AccountingJournalCreateRequestDtoValueEnum.DKK);
        map.put("DOP", AccountingJournalCreateRequestDtoValueEnum.DOP);
        map.put("DZD", AccountingJournalCreateRequestDtoValueEnum.DZD);
        map.put("EGP", AccountingJournalCreateRequestDtoValueEnum.EGP);
        map.put("ERN", AccountingJournalCreateRequestDtoValueEnum.ERN);
        map.put("ETB", AccountingJournalCreateRequestDtoValueEnum.ETB);
        map.put("EUR", AccountingJournalCreateRequestDtoValueEnum.EUR);
        map.put("FJD", AccountingJournalCreateRequestDtoValueEnum.FJD);
        map.put("FKP", AccountingJournalCreateRequestDtoValueEnum.FKP);
        map.put("GBP", AccountingJournalCreateRequestDtoValueEnum.GBP);
        map.put("GEL", AccountingJournalCreateRequestDtoValueEnum.GEL);
        map.put("GHS", AccountingJournalCreateRequestDtoValueEnum.GHS);
        map.put("GIP", AccountingJournalCreateRequestDtoValueEnum.GIP);
        map.put("GMD", AccountingJournalCreateRequestDtoValueEnum.GMD);
        map.put("GNF", AccountingJournalCreateRequestDtoValueEnum.GNF);
        map.put("GTQ", AccountingJournalCreateRequestDtoValueEnum.GTQ);
        map.put("GYD", AccountingJournalCreateRequestDtoValueEnum.GYD);
        map.put("HKD", AccountingJournalCreateRequestDtoValueEnum.HKD);
        map.put("HNL", AccountingJournalCreateRequestDtoValueEnum.HNL);
        map.put("HRK", AccountingJournalCreateRequestDtoValueEnum.HRK);
        map.put("HTG", AccountingJournalCreateRequestDtoValueEnum.HTG);
        map.put("HUF", AccountingJournalCreateRequestDtoValueEnum.HUF);
        map.put("IDR", AccountingJournalCreateRequestDtoValueEnum.IDR);
        map.put("ILS", AccountingJournalCreateRequestDtoValueEnum.ILS);
        map.put("INR", AccountingJournalCreateRequestDtoValueEnum.INR);
        map.put("IQD", AccountingJournalCreateRequestDtoValueEnum.IQD);
        map.put("IRR", AccountingJournalCreateRequestDtoValueEnum.IRR);
        map.put("ISK", AccountingJournalCreateRequestDtoValueEnum.ISK);
        map.put("JMD", AccountingJournalCreateRequestDtoValueEnum.JMD);
        map.put("JOD", AccountingJournalCreateRequestDtoValueEnum.JOD);
        map.put("JPY", AccountingJournalCreateRequestDtoValueEnum.JPY);
        map.put("KES", AccountingJournalCreateRequestDtoValueEnum.KES);
        map.put("KGS", AccountingJournalCreateRequestDtoValueEnum.KGS);
        map.put("KHR", AccountingJournalCreateRequestDtoValueEnum.KHR);
        map.put("KMF", AccountingJournalCreateRequestDtoValueEnum.KMF);
        map.put("KPW", AccountingJournalCreateRequestDtoValueEnum.KPW);
        map.put("KRW", AccountingJournalCreateRequestDtoValueEnum.KRW);
        map.put("KWD", AccountingJournalCreateRequestDtoValueEnum.KWD);
        map.put("KYD", AccountingJournalCreateRequestDtoValueEnum.KYD);
        map.put("KZT", AccountingJournalCreateRequestDtoValueEnum.KZT);
        map.put("LAK", AccountingJournalCreateRequestDtoValueEnum.LAK);
        map.put("LBP", AccountingJournalCreateRequestDtoValueEnum.LBP);
        map.put("LKR", AccountingJournalCreateRequestDtoValueEnum.LKR);
        map.put("LRD", AccountingJournalCreateRequestDtoValueEnum.LRD);
        map.put("LSL", AccountingJournalCreateRequestDtoValueEnum.LSL);
        map.put("LYD", AccountingJournalCreateRequestDtoValueEnum.LYD);
        map.put("MAD", AccountingJournalCreateRequestDtoValueEnum.MAD);
        map.put("MDL", AccountingJournalCreateRequestDtoValueEnum.MDL);
        map.put("MGA", AccountingJournalCreateRequestDtoValueEnum.MGA);
        map.put("MKD", AccountingJournalCreateRequestDtoValueEnum.MKD);
        map.put("MMK", AccountingJournalCreateRequestDtoValueEnum.MMK);
        map.put("MNT", AccountingJournalCreateRequestDtoValueEnum.MNT);
        map.put("MOP", AccountingJournalCreateRequestDtoValueEnum.MOP);
        map.put("MRU", AccountingJournalCreateRequestDtoValueEnum.MRU);
        map.put("MUR", AccountingJournalCreateRequestDtoValueEnum.MUR);
        map.put("MVR", AccountingJournalCreateRequestDtoValueEnum.MVR);
        map.put("MWK", AccountingJournalCreateRequestDtoValueEnum.MWK);
        map.put("MXN", AccountingJournalCreateRequestDtoValueEnum.MXN);
        map.put("MYR", AccountingJournalCreateRequestDtoValueEnum.MYR);
        map.put("MZN", AccountingJournalCreateRequestDtoValueEnum.MZN);
        map.put("NAD", AccountingJournalCreateRequestDtoValueEnum.NAD);
        map.put("NGN", AccountingJournalCreateRequestDtoValueEnum.NGN);
        map.put("NIO", AccountingJournalCreateRequestDtoValueEnum.NIO);
        map.put("NOK", AccountingJournalCreateRequestDtoValueEnum.NOK);
        map.put("NPR", AccountingJournalCreateRequestDtoValueEnum.NPR);
        map.put("NZD", AccountingJournalCreateRequestDtoValueEnum.NZD);
        map.put("OMR", AccountingJournalCreateRequestDtoValueEnum.OMR);
        map.put("PAB", AccountingJournalCreateRequestDtoValueEnum.PAB);
        map.put("PEN", AccountingJournalCreateRequestDtoValueEnum.PEN);
        map.put("PGK", AccountingJournalCreateRequestDtoValueEnum.PGK);
        map.put("PHP", AccountingJournalCreateRequestDtoValueEnum.PHP);
        map.put("PKR", AccountingJournalCreateRequestDtoValueEnum.PKR);
        map.put("PLN", AccountingJournalCreateRequestDtoValueEnum.PLN);
        map.put("PYG", AccountingJournalCreateRequestDtoValueEnum.PYG);
        map.put("QAR", AccountingJournalCreateRequestDtoValueEnum.QAR);
        map.put("RON", AccountingJournalCreateRequestDtoValueEnum.RON);
        map.put("RSD", AccountingJournalCreateRequestDtoValueEnum.RSD);
        map.put("RUB", AccountingJournalCreateRequestDtoValueEnum.RUB);
        map.put("RWF", AccountingJournalCreateRequestDtoValueEnum.RWF);
        map.put("SAR", AccountingJournalCreateRequestDtoValueEnum.SAR);
        map.put("SBD", AccountingJournalCreateRequestDtoValueEnum.SBD);
        map.put("SCR", AccountingJournalCreateRequestDtoValueEnum.SCR);
        map.put("SDG", AccountingJournalCreateRequestDtoValueEnum.SDG);
        map.put("SEK", AccountingJournalCreateRequestDtoValueEnum.SEK);
        map.put("SGD", AccountingJournalCreateRequestDtoValueEnum.SGD);
        map.put("SHP", AccountingJournalCreateRequestDtoValueEnum.SHP);
        map.put("SLL", AccountingJournalCreateRequestDtoValueEnum.SLL);
        map.put("SOS", AccountingJournalCreateRequestDtoValueEnum.SOS);
        map.put("SRD", AccountingJournalCreateRequestDtoValueEnum.SRD);
        map.put("SSP", AccountingJournalCreateRequestDtoValueEnum.SSP);
        map.put("STN", AccountingJournalCreateRequestDtoValueEnum.STN);
        map.put("SYP", AccountingJournalCreateRequestDtoValueEnum.SYP);
        map.put("SZL", AccountingJournalCreateRequestDtoValueEnum.SZL);
        map.put("THB", AccountingJournalCreateRequestDtoValueEnum.THB);
        map.put("TJS", AccountingJournalCreateRequestDtoValueEnum.TJS);
        map.put("TMT", AccountingJournalCreateRequestDtoValueEnum.TMT);
        map.put("TND", AccountingJournalCreateRequestDtoValueEnum.TND);
        map.put("TOP", AccountingJournalCreateRequestDtoValueEnum.TOP);
        map.put("TRY", AccountingJournalCreateRequestDtoValueEnum.TRY);
        map.put("TTD", AccountingJournalCreateRequestDtoValueEnum.TTD);
        map.put("TWD", AccountingJournalCreateRequestDtoValueEnum.TWD);
        map.put("TZS", AccountingJournalCreateRequestDtoValueEnum.TZS);
        map.put("UAH", AccountingJournalCreateRequestDtoValueEnum.UAH);
        map.put("UGX", AccountingJournalCreateRequestDtoValueEnum.UGX);
        map.put("USD", AccountingJournalCreateRequestDtoValueEnum.USD);
        map.put("UYU", AccountingJournalCreateRequestDtoValueEnum.UYU);
        map.put("UZS", AccountingJournalCreateRequestDtoValueEnum.UZS);
        map.put("VES", AccountingJournalCreateRequestDtoValueEnum.VES);
        map.put("VND", AccountingJournalCreateRequestDtoValueEnum.VND);
        map.put("VUV", AccountingJournalCreateRequestDtoValueEnum.VUV);
        map.put("WST", AccountingJournalCreateRequestDtoValueEnum.WST);
        map.put("XAF", AccountingJournalCreateRequestDtoValueEnum.XAF);
        map.put("XCD", AccountingJournalCreateRequestDtoValueEnum.XCD);
        map.put("XDR", AccountingJournalCreateRequestDtoValueEnum.XDR);
        map.put("XOF", AccountingJournalCreateRequestDtoValueEnum.XOF);
        map.put("XPF", AccountingJournalCreateRequestDtoValueEnum.XPF);
        map.put("YER", AccountingJournalCreateRequestDtoValueEnum.YER);
        map.put("ZAR", AccountingJournalCreateRequestDtoValueEnum.ZAR);
        map.put("ZMW", AccountingJournalCreateRequestDtoValueEnum.ZMW);
        map.put("ZWL", AccountingJournalCreateRequestDtoValueEnum.ZWL);
        map.put("unmapped_value", AccountingJournalCreateRequestDtoValueEnum.UNMAPPED_VALUE);
        return map;
    }
    
    @SuppressWarnings("serial")
    public static final class _Serializer extends StdSerializer<AccountingJournalCreateRequestDtoValue> {

        protected _Serializer() {
            super(AccountingJournalCreateRequestDtoValue.class);
        }

        @Override
        public void serialize(AccountingJournalCreateRequestDtoValue value, JsonGenerator g, SerializerProvider provider)
                throws IOException, JsonProcessingException {
            g.writeObject(value.value);
        }
    }

    @SuppressWarnings("serial")
    public static final class _Deserializer extends StdDeserializer<AccountingJournalCreateRequestDtoValue> {

        protected _Deserializer() {
            super(AccountingJournalCreateRequestDtoValue.class);
        }

        @Override
        public AccountingJournalCreateRequestDtoValue deserialize(JsonParser p, DeserializationContext ctxt)
                throws IOException, JacksonException {
            String v = p.readValueAs(new TypeReference<String>() {});
            // use the factory method to ensure we get singletons
            return AccountingJournalCreateRequestDtoValue.of(v);
        }
    }
    
    public enum AccountingJournalCreateRequestDtoValueEnum {

        AED("AED"),
        AFN("AFN"),
        ALL("ALL"),
        AMD("AMD"),
        ANG("ANG"),
        AOA("AOA"),
        ARS("ARS"),
        AUD("AUD"),
        AWG("AWG"),
        AZN("AZN"),
        BAM("BAM"),
        BBD("BBD"),
        BDT("BDT"),
        BGN("BGN"),
        BHD("BHD"),
        BIF("BIF"),
        BMD("BMD"),
        BND("BND"),
        BOB("BOB"),
        BRL("BRL"),
        BSD("BSD"),
        BTN("BTN"),
        BWP("BWP"),
        BYN("BYN"),
        BZD("BZD"),
        CAD("CAD"),
        CDF("CDF"),
        CHF("CHF"),
        CLP("CLP"),
        CNY("CNY"),
        COP("COP"),
        CRC("CRC"),
        CUC("CUC"),
        CUP("CUP"),
        CVE("CVE"),
        CZK("CZK"),
        DJF("DJF"),
        DKK("DKK"),
        DOP("DOP"),
        DZD("DZD"),
        EGP("EGP"),
        ERN("ERN"),
        ETB("ETB"),
        EUR("EUR"),
        FJD("FJD"),
        FKP("FKP"),
        GBP("GBP"),
        GEL("GEL"),
        GHS("GHS"),
        GIP("GIP"),
        GMD("GMD"),
        GNF("GNF"),
        GTQ("GTQ"),
        GYD("GYD"),
        HKD("HKD"),
        HNL("HNL"),
        HRK("HRK"),
        HTG("HTG"),
        HUF("HUF"),
        IDR("IDR"),
        ILS("ILS"),
        INR("INR"),
        IQD("IQD"),
        IRR("IRR"),
        ISK("ISK"),
        JMD("JMD"),
        JOD("JOD"),
        JPY("JPY"),
        KES("KES"),
        KGS("KGS"),
        KHR("KHR"),
        KMF("KMF"),
        KPW("KPW"),
        KRW("KRW"),
        KWD("KWD"),
        KYD("KYD"),
        KZT("KZT"),
        LAK("LAK"),
        LBP("LBP"),
        LKR("LKR"),
        LRD("LRD"),
        LSL("LSL"),
        LYD("LYD"),
        MAD("MAD"),
        MDL("MDL"),
        MGA("MGA"),
        MKD("MKD"),
        MMK("MMK"),
        MNT("MNT"),
        MOP("MOP"),
        MRU("MRU"),
        MUR("MUR"),
        MVR("MVR"),
        MWK("MWK"),
        MXN("MXN"),
        MYR("MYR"),
        MZN("MZN"),
        NAD("NAD"),
        NGN("NGN"),
        NIO("NIO"),
        NOK("NOK"),
        NPR("NPR"),
        NZD("NZD"),
        OMR("OMR"),
        PAB("PAB"),
        PEN("PEN"),
        PGK("PGK"),
        PHP("PHP"),
        PKR("PKR"),
        PLN("PLN"),
        PYG("PYG"),
        QAR("QAR"),
        RON("RON"),
        RSD("RSD"),
        RUB("RUB"),
        RWF("RWF"),
        SAR("SAR"),
        SBD("SBD"),
        SCR("SCR"),
        SDG("SDG"),
        SEK("SEK"),
        SGD("SGD"),
        SHP("SHP"),
        SLL("SLL"),
        SOS("SOS"),
        SRD("SRD"),
        SSP("SSP"),
        STN("STN"),
        SYP("SYP"),
        SZL("SZL"),
        THB("THB"),
        TJS("TJS"),
        TMT("TMT"),
        TND("TND"),
        TOP("TOP"),
        TRY("TRY"),
        TTD("TTD"),
        TWD("TWD"),
        TZS("TZS"),
        UAH("UAH"),
        UGX("UGX"),
        USD("USD"),
        UYU("UYU"),
        UZS("UZS"),
        VES("VES"),
        VND("VND"),
        VUV("VUV"),
        WST("WST"),
        XAF("XAF"),
        XCD("XCD"),
        XDR("XDR"),
        XOF("XOF"),
        XPF("XPF"),
        YER("YER"),
        ZAR("ZAR"),
        ZMW("ZMW"),
        ZWL("ZWL"),
        UNMAPPED_VALUE("unmapped_value"),;

        private final String value;

        private AccountingJournalCreateRequestDtoValueEnum(String value) {
            this.value = value;
        }

        public String value() {
            return value;
        }
    }
}

