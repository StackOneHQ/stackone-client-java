/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

public class AtsCreateBackgroundCheckOrderRequestDto {

    /**
     * Unique identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private JsonNullable<String> id;

    /**
     * Provider's unique identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remote_id")
    private JsonNullable<String> remoteId;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("application")
    private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoApplication> application;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job")
    private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoJob> job;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("candidate")
    private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoCandidate> candidate;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requester")
    private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoRequester> requester;

    /**
     * Results update url
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("results_update_url")
    private JsonNullable<String> resultsUpdateUrl;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("package")
    private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoPackage> package_;

    /**
     * Value to pass through to the provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passthrough")
    private JsonNullable<? extends Map<String, Object>> passthrough;

    @JsonCreator
    public AtsCreateBackgroundCheckOrderRequestDto(
            @JsonProperty("id") JsonNullable<String> id,
            @JsonProperty("remote_id") JsonNullable<String> remoteId,
            @JsonProperty("application") JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoApplication> application,
            @JsonProperty("job") JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoJob> job,
            @JsonProperty("candidate") JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoCandidate> candidate,
            @JsonProperty("requester") JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoRequester> requester,
            @JsonProperty("results_update_url") JsonNullable<String> resultsUpdateUrl,
            @JsonProperty("package") JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoPackage> package_,
            @JsonProperty("passthrough") JsonNullable<? extends Map<String, Object>> passthrough) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(remoteId, "remoteId");
        Utils.checkNotNull(application, "application");
        Utils.checkNotNull(job, "job");
        Utils.checkNotNull(candidate, "candidate");
        Utils.checkNotNull(requester, "requester");
        Utils.checkNotNull(resultsUpdateUrl, "resultsUpdateUrl");
        Utils.checkNotNull(package_, "package_");
        Utils.checkNotNull(passthrough, "passthrough");
        this.id = id;
        this.remoteId = remoteId;
        this.application = application;
        this.job = job;
        this.candidate = candidate;
        this.requester = requester;
        this.resultsUpdateUrl = resultsUpdateUrl;
        this.package_ = package_;
        this.passthrough = passthrough;
    }
    
    public AtsCreateBackgroundCheckOrderRequestDto() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Unique identifier
     */
    @JsonIgnore
    public JsonNullable<String> id() {
        return id;
    }

    /**
     * Provider's unique identifier
     */
    @JsonIgnore
    public JsonNullable<String> remoteId() {
        return remoteId;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoApplication> application() {
        return (JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoApplication>) application;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoJob> job() {
        return (JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoJob>) job;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoCandidate> candidate() {
        return (JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoCandidate>) candidate;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoRequester> requester() {
        return (JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoRequester>) requester;
    }

    /**
     * Results update url
     */
    @JsonIgnore
    public JsonNullable<String> resultsUpdateUrl() {
        return resultsUpdateUrl;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoPackage> package_() {
        return (JsonNullable<AtsCreateBackgroundCheckOrderRequestDtoPackage>) package_;
    }

    /**
     * Value to pass through to the provider
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, Object>> passthrough() {
        return (JsonNullable<Map<String, Object>>) passthrough;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Unique identifier
     */
    public AtsCreateBackgroundCheckOrderRequestDto withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = JsonNullable.of(id);
        return this;
    }

    /**
     * Unique identifier
     */
    public AtsCreateBackgroundCheckOrderRequestDto withId(JsonNullable<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * Provider's unique identifier
     */
    public AtsCreateBackgroundCheckOrderRequestDto withRemoteId(String remoteId) {
        Utils.checkNotNull(remoteId, "remoteId");
        this.remoteId = JsonNullable.of(remoteId);
        return this;
    }

    /**
     * Provider's unique identifier
     */
    public AtsCreateBackgroundCheckOrderRequestDto withRemoteId(JsonNullable<String> remoteId) {
        Utils.checkNotNull(remoteId, "remoteId");
        this.remoteId = remoteId;
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withApplication(AtsCreateBackgroundCheckOrderRequestDtoApplication application) {
        Utils.checkNotNull(application, "application");
        this.application = JsonNullable.of(application);
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withApplication(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoApplication> application) {
        Utils.checkNotNull(application, "application");
        this.application = application;
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withJob(AtsCreateBackgroundCheckOrderRequestDtoJob job) {
        Utils.checkNotNull(job, "job");
        this.job = JsonNullable.of(job);
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withJob(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoJob> job) {
        Utils.checkNotNull(job, "job");
        this.job = job;
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withCandidate(AtsCreateBackgroundCheckOrderRequestDtoCandidate candidate) {
        Utils.checkNotNull(candidate, "candidate");
        this.candidate = JsonNullable.of(candidate);
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withCandidate(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoCandidate> candidate) {
        Utils.checkNotNull(candidate, "candidate");
        this.candidate = candidate;
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withRequester(AtsCreateBackgroundCheckOrderRequestDtoRequester requester) {
        Utils.checkNotNull(requester, "requester");
        this.requester = JsonNullable.of(requester);
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withRequester(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoRequester> requester) {
        Utils.checkNotNull(requester, "requester");
        this.requester = requester;
        return this;
    }

    /**
     * Results update url
     */
    public AtsCreateBackgroundCheckOrderRequestDto withResultsUpdateUrl(String resultsUpdateUrl) {
        Utils.checkNotNull(resultsUpdateUrl, "resultsUpdateUrl");
        this.resultsUpdateUrl = JsonNullable.of(resultsUpdateUrl);
        return this;
    }

    /**
     * Results update url
     */
    public AtsCreateBackgroundCheckOrderRequestDto withResultsUpdateUrl(JsonNullable<String> resultsUpdateUrl) {
        Utils.checkNotNull(resultsUpdateUrl, "resultsUpdateUrl");
        this.resultsUpdateUrl = resultsUpdateUrl;
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withPackage(AtsCreateBackgroundCheckOrderRequestDtoPackage package_) {
        Utils.checkNotNull(package_, "package_");
        this.package_ = JsonNullable.of(package_);
        return this;
    }

    public AtsCreateBackgroundCheckOrderRequestDto withPackage(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoPackage> package_) {
        Utils.checkNotNull(package_, "package_");
        this.package_ = package_;
        return this;
    }

    /**
     * Value to pass through to the provider
     */
    public AtsCreateBackgroundCheckOrderRequestDto withPassthrough(Map<String, Object> passthrough) {
        Utils.checkNotNull(passthrough, "passthrough");
        this.passthrough = JsonNullable.of(passthrough);
        return this;
    }

    /**
     * Value to pass through to the provider
     */
    public AtsCreateBackgroundCheckOrderRequestDto withPassthrough(JsonNullable<? extends Map<String, Object>> passthrough) {
        Utils.checkNotNull(passthrough, "passthrough");
        this.passthrough = passthrough;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AtsCreateBackgroundCheckOrderRequestDto other = (AtsCreateBackgroundCheckOrderRequestDto) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.remoteId, other.remoteId) &&
            Utils.enhancedDeepEquals(this.application, other.application) &&
            Utils.enhancedDeepEquals(this.job, other.job) &&
            Utils.enhancedDeepEquals(this.candidate, other.candidate) &&
            Utils.enhancedDeepEquals(this.requester, other.requester) &&
            Utils.enhancedDeepEquals(this.resultsUpdateUrl, other.resultsUpdateUrl) &&
            Utils.enhancedDeepEquals(this.package_, other.package_) &&
            Utils.enhancedDeepEquals(this.passthrough, other.passthrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id,
            remoteId,
            application,
            job,
            candidate,
            requester,
            resultsUpdateUrl,
            package_,
            passthrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AtsCreateBackgroundCheckOrderRequestDto.class,
                "id", id,
                "remoteId", remoteId,
                "application", application,
                "job", job,
                "candidate", candidate,
                "requester", requester,
                "resultsUpdateUrl", resultsUpdateUrl,
                "package_", package_,
                "passthrough", passthrough);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> id = JsonNullable.undefined();
 
        private JsonNullable<String> remoteId = JsonNullable.undefined();
 
        private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoApplication> application = JsonNullable.undefined();
 
        private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoJob> job = JsonNullable.undefined();
 
        private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoCandidate> candidate = JsonNullable.undefined();
 
        private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoRequester> requester = JsonNullable.undefined();
 
        private JsonNullable<String> resultsUpdateUrl = JsonNullable.undefined();
 
        private JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoPackage> package_ = JsonNullable.undefined();
 
        private JsonNullable<? extends Map<String, Object>> passthrough = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Unique identifier
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = JsonNullable.of(id);
            return this;
        }

        /**
         * Unique identifier
         */
        public Builder id(JsonNullable<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * Provider's unique identifier
         */
        public Builder remoteId(String remoteId) {
            Utils.checkNotNull(remoteId, "remoteId");
            this.remoteId = JsonNullable.of(remoteId);
            return this;
        }

        /**
         * Provider's unique identifier
         */
        public Builder remoteId(JsonNullable<String> remoteId) {
            Utils.checkNotNull(remoteId, "remoteId");
            this.remoteId = remoteId;
            return this;
        }

        public Builder application(AtsCreateBackgroundCheckOrderRequestDtoApplication application) {
            Utils.checkNotNull(application, "application");
            this.application = JsonNullable.of(application);
            return this;
        }

        public Builder application(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoApplication> application) {
            Utils.checkNotNull(application, "application");
            this.application = application;
            return this;
        }

        public Builder job(AtsCreateBackgroundCheckOrderRequestDtoJob job) {
            Utils.checkNotNull(job, "job");
            this.job = JsonNullable.of(job);
            return this;
        }

        public Builder job(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoJob> job) {
            Utils.checkNotNull(job, "job");
            this.job = job;
            return this;
        }

        public Builder candidate(AtsCreateBackgroundCheckOrderRequestDtoCandidate candidate) {
            Utils.checkNotNull(candidate, "candidate");
            this.candidate = JsonNullable.of(candidate);
            return this;
        }

        public Builder candidate(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoCandidate> candidate) {
            Utils.checkNotNull(candidate, "candidate");
            this.candidate = candidate;
            return this;
        }

        public Builder requester(AtsCreateBackgroundCheckOrderRequestDtoRequester requester) {
            Utils.checkNotNull(requester, "requester");
            this.requester = JsonNullable.of(requester);
            return this;
        }

        public Builder requester(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoRequester> requester) {
            Utils.checkNotNull(requester, "requester");
            this.requester = requester;
            return this;
        }

        /**
         * Results update url
         */
        public Builder resultsUpdateUrl(String resultsUpdateUrl) {
            Utils.checkNotNull(resultsUpdateUrl, "resultsUpdateUrl");
            this.resultsUpdateUrl = JsonNullable.of(resultsUpdateUrl);
            return this;
        }

        /**
         * Results update url
         */
        public Builder resultsUpdateUrl(JsonNullable<String> resultsUpdateUrl) {
            Utils.checkNotNull(resultsUpdateUrl, "resultsUpdateUrl");
            this.resultsUpdateUrl = resultsUpdateUrl;
            return this;
        }

        public Builder package_(AtsCreateBackgroundCheckOrderRequestDtoPackage package_) {
            Utils.checkNotNull(package_, "package_");
            this.package_ = JsonNullable.of(package_);
            return this;
        }

        public Builder package_(JsonNullable<? extends AtsCreateBackgroundCheckOrderRequestDtoPackage> package_) {
            Utils.checkNotNull(package_, "package_");
            this.package_ = package_;
            return this;
        }

        /**
         * Value to pass through to the provider
         */
        public Builder passthrough(Map<String, Object> passthrough) {
            Utils.checkNotNull(passthrough, "passthrough");
            this.passthrough = JsonNullable.of(passthrough);
            return this;
        }

        /**
         * Value to pass through to the provider
         */
        public Builder passthrough(JsonNullable<? extends Map<String, Object>> passthrough) {
            Utils.checkNotNull(passthrough, "passthrough");
            this.passthrough = passthrough;
            return this;
        }
        
        public AtsCreateBackgroundCheckOrderRequestDto build() {
            return new AtsCreateBackgroundCheckOrderRequestDto(
                id,
                remoteId,
                application,
                job,
                candidate,
                requester,
                resultsUpdateUrl,
                package_,
                passthrough);
        }
    }
}
