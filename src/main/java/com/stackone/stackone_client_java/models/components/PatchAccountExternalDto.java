/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class PatchAccountExternalDto {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider")
    private JsonNullable<String> provider;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin_owner_id")
    private JsonNullable<String> originOwnerId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin_owner_name")
    private JsonNullable<String> originOwnerName;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin_username")
    private JsonNullable<String> originUsername;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentials")
    private JsonNullable<? extends PatchAccountExternalDtoCredentials> credentials;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setup_information")
    private JsonNullable<? extends PatchAccountExternalDtoSetupInformation> setupInformation;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secrets")
    private JsonNullable<? extends Secrets> secrets;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authentication_config_key")
    private JsonNullable<String> authenticationConfigKey;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    private JsonNullable<String> environment;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    private JsonNullable<? extends Label> label;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private JsonNullable<? extends PatchAccountExternalDtoMetadata> metadata;

    /**
     * The account type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private JsonNullable<? extends PatchAccountExternalDtoType> type;

    @JsonCreator
    public PatchAccountExternalDto(
            @JsonProperty("provider") JsonNullable<String> provider,
            @JsonProperty("origin_owner_id") JsonNullable<String> originOwnerId,
            @JsonProperty("origin_owner_name") JsonNullable<String> originOwnerName,
            @JsonProperty("origin_username") JsonNullable<String> originUsername,
            @JsonProperty("credentials") JsonNullable<? extends PatchAccountExternalDtoCredentials> credentials,
            @JsonProperty("setup_information") JsonNullable<? extends PatchAccountExternalDtoSetupInformation> setupInformation,
            @JsonProperty("secrets") JsonNullable<? extends Secrets> secrets,
            @JsonProperty("authentication_config_key") JsonNullable<String> authenticationConfigKey,
            @JsonProperty("environment") JsonNullable<String> environment,
            @JsonProperty("label") JsonNullable<? extends Label> label,
            @JsonProperty("metadata") JsonNullable<? extends PatchAccountExternalDtoMetadata> metadata,
            @JsonProperty("type") JsonNullable<? extends PatchAccountExternalDtoType> type) {
        Utils.checkNotNull(provider, "provider");
        Utils.checkNotNull(originOwnerId, "originOwnerId");
        Utils.checkNotNull(originOwnerName, "originOwnerName");
        Utils.checkNotNull(originUsername, "originUsername");
        Utils.checkNotNull(credentials, "credentials");
        Utils.checkNotNull(setupInformation, "setupInformation");
        Utils.checkNotNull(secrets, "secrets");
        Utils.checkNotNull(authenticationConfigKey, "authenticationConfigKey");
        Utils.checkNotNull(environment, "environment");
        Utils.checkNotNull(label, "label");
        Utils.checkNotNull(metadata, "metadata");
        Utils.checkNotNull(type, "type");
        this.provider = provider;
        this.originOwnerId = originOwnerId;
        this.originOwnerName = originOwnerName;
        this.originUsername = originUsername;
        this.credentials = credentials;
        this.setupInformation = setupInformation;
        this.secrets = secrets;
        this.authenticationConfigKey = authenticationConfigKey;
        this.environment = environment;
        this.label = label;
        this.metadata = metadata;
        this.type = type;
    }
    
    public PatchAccountExternalDto() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> provider() {
        return provider;
    }

    @JsonIgnore
    public JsonNullable<String> originOwnerId() {
        return originOwnerId;
    }

    @JsonIgnore
    public JsonNullable<String> originOwnerName() {
        return originOwnerName;
    }

    @JsonIgnore
    public JsonNullable<String> originUsername() {
        return originUsername;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PatchAccountExternalDtoCredentials> credentials() {
        return (JsonNullable<PatchAccountExternalDtoCredentials>) credentials;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PatchAccountExternalDtoSetupInformation> setupInformation() {
        return (JsonNullable<PatchAccountExternalDtoSetupInformation>) setupInformation;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Secrets> secrets() {
        return (JsonNullable<Secrets>) secrets;
    }

    @JsonIgnore
    public JsonNullable<String> authenticationConfigKey() {
        return authenticationConfigKey;
    }

    @JsonIgnore
    public JsonNullable<String> environment() {
        return environment;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Label> label() {
        return (JsonNullable<Label>) label;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PatchAccountExternalDtoMetadata> metadata() {
        return (JsonNullable<PatchAccountExternalDtoMetadata>) metadata;
    }

    /**
     * The account type
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PatchAccountExternalDtoType> type() {
        return (JsonNullable<PatchAccountExternalDtoType>) type;
    }

    public static Builder builder() {
        return new Builder();
    }


    public PatchAccountExternalDto withProvider(String provider) {
        Utils.checkNotNull(provider, "provider");
        this.provider = JsonNullable.of(provider);
        return this;
    }

    public PatchAccountExternalDto withProvider(JsonNullable<String> provider) {
        Utils.checkNotNull(provider, "provider");
        this.provider = provider;
        return this;
    }

    public PatchAccountExternalDto withOriginOwnerId(String originOwnerId) {
        Utils.checkNotNull(originOwnerId, "originOwnerId");
        this.originOwnerId = JsonNullable.of(originOwnerId);
        return this;
    }

    public PatchAccountExternalDto withOriginOwnerId(JsonNullable<String> originOwnerId) {
        Utils.checkNotNull(originOwnerId, "originOwnerId");
        this.originOwnerId = originOwnerId;
        return this;
    }

    public PatchAccountExternalDto withOriginOwnerName(String originOwnerName) {
        Utils.checkNotNull(originOwnerName, "originOwnerName");
        this.originOwnerName = JsonNullable.of(originOwnerName);
        return this;
    }

    public PatchAccountExternalDto withOriginOwnerName(JsonNullable<String> originOwnerName) {
        Utils.checkNotNull(originOwnerName, "originOwnerName");
        this.originOwnerName = originOwnerName;
        return this;
    }

    public PatchAccountExternalDto withOriginUsername(String originUsername) {
        Utils.checkNotNull(originUsername, "originUsername");
        this.originUsername = JsonNullable.of(originUsername);
        return this;
    }

    public PatchAccountExternalDto withOriginUsername(JsonNullable<String> originUsername) {
        Utils.checkNotNull(originUsername, "originUsername");
        this.originUsername = originUsername;
        return this;
    }

    public PatchAccountExternalDto withCredentials(PatchAccountExternalDtoCredentials credentials) {
        Utils.checkNotNull(credentials, "credentials");
        this.credentials = JsonNullable.of(credentials);
        return this;
    }

    public PatchAccountExternalDto withCredentials(JsonNullable<? extends PatchAccountExternalDtoCredentials> credentials) {
        Utils.checkNotNull(credentials, "credentials");
        this.credentials = credentials;
        return this;
    }

    public PatchAccountExternalDto withSetupInformation(PatchAccountExternalDtoSetupInformation setupInformation) {
        Utils.checkNotNull(setupInformation, "setupInformation");
        this.setupInformation = JsonNullable.of(setupInformation);
        return this;
    }

    public PatchAccountExternalDto withSetupInformation(JsonNullable<? extends PatchAccountExternalDtoSetupInformation> setupInformation) {
        Utils.checkNotNull(setupInformation, "setupInformation");
        this.setupInformation = setupInformation;
        return this;
    }

    public PatchAccountExternalDto withSecrets(Secrets secrets) {
        Utils.checkNotNull(secrets, "secrets");
        this.secrets = JsonNullable.of(secrets);
        return this;
    }

    public PatchAccountExternalDto withSecrets(JsonNullable<? extends Secrets> secrets) {
        Utils.checkNotNull(secrets, "secrets");
        this.secrets = secrets;
        return this;
    }

    public PatchAccountExternalDto withAuthenticationConfigKey(String authenticationConfigKey) {
        Utils.checkNotNull(authenticationConfigKey, "authenticationConfigKey");
        this.authenticationConfigKey = JsonNullable.of(authenticationConfigKey);
        return this;
    }

    public PatchAccountExternalDto withAuthenticationConfigKey(JsonNullable<String> authenticationConfigKey) {
        Utils.checkNotNull(authenticationConfigKey, "authenticationConfigKey");
        this.authenticationConfigKey = authenticationConfigKey;
        return this;
    }

    public PatchAccountExternalDto withEnvironment(String environment) {
        Utils.checkNotNull(environment, "environment");
        this.environment = JsonNullable.of(environment);
        return this;
    }

    public PatchAccountExternalDto withEnvironment(JsonNullable<String> environment) {
        Utils.checkNotNull(environment, "environment");
        this.environment = environment;
        return this;
    }

    public PatchAccountExternalDto withLabel(Label label) {
        Utils.checkNotNull(label, "label");
        this.label = JsonNullable.of(label);
        return this;
    }

    public PatchAccountExternalDto withLabel(JsonNullable<? extends Label> label) {
        Utils.checkNotNull(label, "label");
        this.label = label;
        return this;
    }

    public PatchAccountExternalDto withMetadata(PatchAccountExternalDtoMetadata metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = JsonNullable.of(metadata);
        return this;
    }

    public PatchAccountExternalDto withMetadata(JsonNullable<? extends PatchAccountExternalDtoMetadata> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = metadata;
        return this;
    }

    /**
     * The account type
     */
    public PatchAccountExternalDto withType(PatchAccountExternalDtoType type) {
        Utils.checkNotNull(type, "type");
        this.type = JsonNullable.of(type);
        return this;
    }

    /**
     * The account type
     */
    public PatchAccountExternalDto withType(JsonNullable<? extends PatchAccountExternalDtoType> type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PatchAccountExternalDto other = (PatchAccountExternalDto) o;
        return 
            Utils.enhancedDeepEquals(this.provider, other.provider) &&
            Utils.enhancedDeepEquals(this.originOwnerId, other.originOwnerId) &&
            Utils.enhancedDeepEquals(this.originOwnerName, other.originOwnerName) &&
            Utils.enhancedDeepEquals(this.originUsername, other.originUsername) &&
            Utils.enhancedDeepEquals(this.credentials, other.credentials) &&
            Utils.enhancedDeepEquals(this.setupInformation, other.setupInformation) &&
            Utils.enhancedDeepEquals(this.secrets, other.secrets) &&
            Utils.enhancedDeepEquals(this.authenticationConfigKey, other.authenticationConfigKey) &&
            Utils.enhancedDeepEquals(this.environment, other.environment) &&
            Utils.enhancedDeepEquals(this.label, other.label) &&
            Utils.enhancedDeepEquals(this.metadata, other.metadata) &&
            Utils.enhancedDeepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            provider, originOwnerId, originOwnerName,
            originUsername, credentials, setupInformation,
            secrets, authenticationConfigKey, environment,
            label, metadata, type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PatchAccountExternalDto.class,
                "provider", provider,
                "originOwnerId", originOwnerId,
                "originOwnerName", originOwnerName,
                "originUsername", originUsername,
                "credentials", credentials,
                "setupInformation", setupInformation,
                "secrets", secrets,
                "authenticationConfigKey", authenticationConfigKey,
                "environment", environment,
                "label", label,
                "metadata", metadata,
                "type", type);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> provider = JsonNullable.undefined();

        private JsonNullable<String> originOwnerId = JsonNullable.undefined();

        private JsonNullable<String> originOwnerName = JsonNullable.undefined();

        private JsonNullable<String> originUsername = JsonNullable.undefined();

        private JsonNullable<? extends PatchAccountExternalDtoCredentials> credentials = JsonNullable.undefined();

        private JsonNullable<? extends PatchAccountExternalDtoSetupInformation> setupInformation = JsonNullable.undefined();

        private JsonNullable<? extends Secrets> secrets = JsonNullable.undefined();

        private JsonNullable<String> authenticationConfigKey = JsonNullable.undefined();

        private JsonNullable<String> environment = JsonNullable.undefined();

        private JsonNullable<? extends Label> label = JsonNullable.undefined();

        private JsonNullable<? extends PatchAccountExternalDtoMetadata> metadata = JsonNullable.undefined();

        private JsonNullable<? extends PatchAccountExternalDtoType> type = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder provider(String provider) {
            Utils.checkNotNull(provider, "provider");
            this.provider = JsonNullable.of(provider);
            return this;
        }

        public Builder provider(JsonNullable<String> provider) {
            Utils.checkNotNull(provider, "provider");
            this.provider = provider;
            return this;
        }


        public Builder originOwnerId(String originOwnerId) {
            Utils.checkNotNull(originOwnerId, "originOwnerId");
            this.originOwnerId = JsonNullable.of(originOwnerId);
            return this;
        }

        public Builder originOwnerId(JsonNullable<String> originOwnerId) {
            Utils.checkNotNull(originOwnerId, "originOwnerId");
            this.originOwnerId = originOwnerId;
            return this;
        }


        public Builder originOwnerName(String originOwnerName) {
            Utils.checkNotNull(originOwnerName, "originOwnerName");
            this.originOwnerName = JsonNullable.of(originOwnerName);
            return this;
        }

        public Builder originOwnerName(JsonNullable<String> originOwnerName) {
            Utils.checkNotNull(originOwnerName, "originOwnerName");
            this.originOwnerName = originOwnerName;
            return this;
        }


        public Builder originUsername(String originUsername) {
            Utils.checkNotNull(originUsername, "originUsername");
            this.originUsername = JsonNullable.of(originUsername);
            return this;
        }

        public Builder originUsername(JsonNullable<String> originUsername) {
            Utils.checkNotNull(originUsername, "originUsername");
            this.originUsername = originUsername;
            return this;
        }


        public Builder credentials(PatchAccountExternalDtoCredentials credentials) {
            Utils.checkNotNull(credentials, "credentials");
            this.credentials = JsonNullable.of(credentials);
            return this;
        }

        public Builder credentials(JsonNullable<? extends PatchAccountExternalDtoCredentials> credentials) {
            Utils.checkNotNull(credentials, "credentials");
            this.credentials = credentials;
            return this;
        }


        public Builder setupInformation(PatchAccountExternalDtoSetupInformation setupInformation) {
            Utils.checkNotNull(setupInformation, "setupInformation");
            this.setupInformation = JsonNullable.of(setupInformation);
            return this;
        }

        public Builder setupInformation(JsonNullable<? extends PatchAccountExternalDtoSetupInformation> setupInformation) {
            Utils.checkNotNull(setupInformation, "setupInformation");
            this.setupInformation = setupInformation;
            return this;
        }


        public Builder secrets(Secrets secrets) {
            Utils.checkNotNull(secrets, "secrets");
            this.secrets = JsonNullable.of(secrets);
            return this;
        }

        public Builder secrets(JsonNullable<? extends Secrets> secrets) {
            Utils.checkNotNull(secrets, "secrets");
            this.secrets = secrets;
            return this;
        }


        public Builder authenticationConfigKey(String authenticationConfigKey) {
            Utils.checkNotNull(authenticationConfigKey, "authenticationConfigKey");
            this.authenticationConfigKey = JsonNullable.of(authenticationConfigKey);
            return this;
        }

        public Builder authenticationConfigKey(JsonNullable<String> authenticationConfigKey) {
            Utils.checkNotNull(authenticationConfigKey, "authenticationConfigKey");
            this.authenticationConfigKey = authenticationConfigKey;
            return this;
        }


        public Builder environment(String environment) {
            Utils.checkNotNull(environment, "environment");
            this.environment = JsonNullable.of(environment);
            return this;
        }

        public Builder environment(JsonNullable<String> environment) {
            Utils.checkNotNull(environment, "environment");
            this.environment = environment;
            return this;
        }


        public Builder label(Label label) {
            Utils.checkNotNull(label, "label");
            this.label = JsonNullable.of(label);
            return this;
        }

        public Builder label(JsonNullable<? extends Label> label) {
            Utils.checkNotNull(label, "label");
            this.label = label;
            return this;
        }


        public Builder metadata(PatchAccountExternalDtoMetadata metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = JsonNullable.of(metadata);
            return this;
        }

        public Builder metadata(JsonNullable<? extends PatchAccountExternalDtoMetadata> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = metadata;
            return this;
        }


        /**
         * The account type
         */
        public Builder type(PatchAccountExternalDtoType type) {
            Utils.checkNotNull(type, "type");
            this.type = JsonNullable.of(type);
            return this;
        }

        /**
         * The account type
         */
        public Builder type(JsonNullable<? extends PatchAccountExternalDtoType> type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public PatchAccountExternalDto build() {

            return new PatchAccountExternalDto(
                provider, originOwnerId, originOwnerName,
                originUsername, credentials, setupInformation,
                secrets, authenticationConfigKey, environment,
                label, metadata, type);
        }

    }
}
