/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class AtsRejectApplicationRequestDto {

    /**
     * Value to pass through to the provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passthrough")
    private JsonNullable<? extends Map<String, Object>> passthrough;

    /**
     * Unique identifier of the rejection reason
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rejected_reason_id")
    private JsonNullable<String> rejectedReasonId;

    @JsonCreator
    public AtsRejectApplicationRequestDto(
            @JsonProperty("passthrough") JsonNullable<? extends Map<String, Object>> passthrough,
            @JsonProperty("rejected_reason_id") JsonNullable<String> rejectedReasonId) {
        Utils.checkNotNull(passthrough, "passthrough");
        Utils.checkNotNull(rejectedReasonId, "rejectedReasonId");
        this.passthrough = passthrough;
        this.rejectedReasonId = rejectedReasonId;
    }
    
    public AtsRejectApplicationRequestDto() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Value to pass through to the provider
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, Object>> passthrough() {
        return (JsonNullable<Map<String, Object>>) passthrough;
    }

    /**
     * Unique identifier of the rejection reason
     */
    @JsonIgnore
    public JsonNullable<String> rejectedReasonId() {
        return rejectedReasonId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Value to pass through to the provider
     */
    public AtsRejectApplicationRequestDto withPassthrough(Map<String, Object> passthrough) {
        Utils.checkNotNull(passthrough, "passthrough");
        this.passthrough = JsonNullable.of(passthrough);
        return this;
    }

    /**
     * Value to pass through to the provider
     */
    public AtsRejectApplicationRequestDto withPassthrough(JsonNullable<? extends Map<String, Object>> passthrough) {
        Utils.checkNotNull(passthrough, "passthrough");
        this.passthrough = passthrough;
        return this;
    }

    /**
     * Unique identifier of the rejection reason
     */
    public AtsRejectApplicationRequestDto withRejectedReasonId(String rejectedReasonId) {
        Utils.checkNotNull(rejectedReasonId, "rejectedReasonId");
        this.rejectedReasonId = JsonNullable.of(rejectedReasonId);
        return this;
    }

    /**
     * Unique identifier of the rejection reason
     */
    public AtsRejectApplicationRequestDto withRejectedReasonId(JsonNullable<String> rejectedReasonId) {
        Utils.checkNotNull(rejectedReasonId, "rejectedReasonId");
        this.rejectedReasonId = rejectedReasonId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AtsRejectApplicationRequestDto other = (AtsRejectApplicationRequestDto) o;
        return 
            Objects.deepEquals(this.passthrough, other.passthrough) &&
            Objects.deepEquals(this.rejectedReasonId, other.rejectedReasonId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            passthrough,
            rejectedReasonId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AtsRejectApplicationRequestDto.class,
                "passthrough", passthrough,
                "rejectedReasonId", rejectedReasonId);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends Map<String, Object>> passthrough = JsonNullable.undefined();
 
        private JsonNullable<String> rejectedReasonId = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Value to pass through to the provider
         */
        public Builder passthrough(Map<String, Object> passthrough) {
            Utils.checkNotNull(passthrough, "passthrough");
            this.passthrough = JsonNullable.of(passthrough);
            return this;
        }

        /**
         * Value to pass through to the provider
         */
        public Builder passthrough(JsonNullable<? extends Map<String, Object>> passthrough) {
            Utils.checkNotNull(passthrough, "passthrough");
            this.passthrough = passthrough;
            return this;
        }

        /**
         * Unique identifier of the rejection reason
         */
        public Builder rejectedReasonId(String rejectedReasonId) {
            Utils.checkNotNull(rejectedReasonId, "rejectedReasonId");
            this.rejectedReasonId = JsonNullable.of(rejectedReasonId);
            return this;
        }

        /**
         * Unique identifier of the rejection reason
         */
        public Builder rejectedReasonId(JsonNullable<String> rejectedReasonId) {
            Utils.checkNotNull(rejectedReasonId, "rejectedReasonId");
            this.rejectedReasonId = rejectedReasonId;
            return this;
        }
        
        public AtsRejectApplicationRequestDto build() {
            return new AtsRejectApplicationRequestDto(
                passthrough,
                rejectedReasonId);
        }
    }
}
