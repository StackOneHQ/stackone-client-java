/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import static com.stackone.stackone_client_java.operations.Operations.RequestOperation;

import com.stackone.stackone_client_java.SDKConfiguration;
import com.stackone.stackone_client_java.models.components.MarketingCreateSmsTemplateRequestDto;
import com.stackone.stackone_client_java.operations.MarketingCreateSmsTemplate;
import com.stackone.stackone_client_java.utils.Options;
import com.stackone.stackone_client_java.utils.RetryConfig;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class MarketingCreateSmsTemplateRequestBuilder {

    private String xAccountId;
    private MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public MarketingCreateSmsTemplateRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public MarketingCreateSmsTemplateRequestBuilder xAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public MarketingCreateSmsTemplateRequestBuilder marketingCreateSmsTemplateRequestDto(MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto) {
        Utils.checkNotNull(marketingCreateSmsTemplateRequestDto, "marketingCreateSmsTemplateRequestDto");
        this.marketingCreateSmsTemplateRequestDto = marketingCreateSmsTemplateRequestDto;
        return this;
    }
                
    public MarketingCreateSmsTemplateRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public MarketingCreateSmsTemplateRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private MarketingCreateSmsTemplateRequest buildRequest() {

        MarketingCreateSmsTemplateRequest request = new MarketingCreateSmsTemplateRequest(xAccountId,
            marketingCreateSmsTemplateRequestDto);

        return request;
    }

    public MarketingCreateSmsTemplateResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<MarketingCreateSmsTemplateRequest, MarketingCreateSmsTemplateResponse> operation
              = new MarketingCreateSmsTemplate.Sync(sdkConfiguration, options);
        MarketingCreateSmsTemplateRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
