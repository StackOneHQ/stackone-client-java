/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import static com.stackone.stackone_client_java.operations.Operations.RequestOperation;

import com.stackone.stackone_client_java.SDKConfiguration;
import com.stackone.stackone_client_java.models.components.HrisBatchDocumentUploadRequestDto;
import com.stackone.stackone_client_java.operations.HrisBatchUploadEmployeeDocument;
import com.stackone.stackone_client_java.utils.Headers;
import com.stackone.stackone_client_java.utils.Options;
import com.stackone.stackone_client_java.utils.RetryConfig;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class HrisBatchUploadEmployeeDocumentRequestBuilder {

    private String xAccountId;
    private String id;
    private HrisBatchDocumentUploadRequestDto hrisBatchDocumentUploadRequestDto;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public HrisBatchUploadEmployeeDocumentRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public HrisBatchUploadEmployeeDocumentRequestBuilder xAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public HrisBatchUploadEmployeeDocumentRequestBuilder id(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public HrisBatchUploadEmployeeDocumentRequestBuilder hrisBatchDocumentUploadRequestDto(HrisBatchDocumentUploadRequestDto hrisBatchDocumentUploadRequestDto) {
        Utils.checkNotNull(hrisBatchDocumentUploadRequestDto, "hrisBatchDocumentUploadRequestDto");
        this.hrisBatchDocumentUploadRequestDto = hrisBatchDocumentUploadRequestDto;
        return this;
    }
                
    public HrisBatchUploadEmployeeDocumentRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public HrisBatchUploadEmployeeDocumentRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private HrisBatchUploadEmployeeDocumentRequest buildRequest() {

        HrisBatchUploadEmployeeDocumentRequest request = new HrisBatchUploadEmployeeDocumentRequest(xAccountId,
            id,
            hrisBatchDocumentUploadRequestDto);

        return request;
    }

    public HrisBatchUploadEmployeeDocumentResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<HrisBatchUploadEmployeeDocumentRequest, HrisBatchUploadEmployeeDocumentResponse> operation
              = new HrisBatchUploadEmployeeDocument.Sync(sdkConfiguration, options, _headers);
        HrisBatchUploadEmployeeDocumentRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
