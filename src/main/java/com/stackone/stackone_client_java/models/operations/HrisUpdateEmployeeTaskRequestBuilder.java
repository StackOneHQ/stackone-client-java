/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import static com.stackone.stackone_client_java.operations.Operations.RequestOperation;

import com.stackone.stackone_client_java.SDKConfiguration;
import com.stackone.stackone_client_java.models.components.UpdateTaskRequestDto;
import com.stackone.stackone_client_java.operations.HrisUpdateEmployeeTask;
import com.stackone.stackone_client_java.utils.Headers;
import com.stackone.stackone_client_java.utils.Options;
import com.stackone.stackone_client_java.utils.RetryConfig;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class HrisUpdateEmployeeTaskRequestBuilder {

    private String xAccountId;
    private String id;
    private String subResourceId;
    private UpdateTaskRequestDto updateTaskRequestDto;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public HrisUpdateEmployeeTaskRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public HrisUpdateEmployeeTaskRequestBuilder xAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public HrisUpdateEmployeeTaskRequestBuilder id(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public HrisUpdateEmployeeTaskRequestBuilder subResourceId(String subResourceId) {
        Utils.checkNotNull(subResourceId, "subResourceId");
        this.subResourceId = subResourceId;
        return this;
    }

    public HrisUpdateEmployeeTaskRequestBuilder updateTaskRequestDto(UpdateTaskRequestDto updateTaskRequestDto) {
        Utils.checkNotNull(updateTaskRequestDto, "updateTaskRequestDto");
        this.updateTaskRequestDto = updateTaskRequestDto;
        return this;
    }
                
    public HrisUpdateEmployeeTaskRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public HrisUpdateEmployeeTaskRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private HrisUpdateEmployeeTaskRequest buildRequest() {

        HrisUpdateEmployeeTaskRequest request = new HrisUpdateEmployeeTaskRequest(xAccountId,
            id,
            subResourceId,
            updateTaskRequestDto);

        return request;
    }

    public HrisUpdateEmployeeTaskResponse call() {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<HrisUpdateEmployeeTaskRequest, HrisUpdateEmployeeTaskResponse> operation
              = new HrisUpdateEmployeeTask.Sync(sdkConfiguration, options, _headers);
        HrisUpdateEmployeeTaskRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
