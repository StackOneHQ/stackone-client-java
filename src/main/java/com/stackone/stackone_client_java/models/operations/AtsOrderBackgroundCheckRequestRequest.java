/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.stackone.stackone_client_java.models.components.AtsCreateBackgroundCheckOrderRequestDto;
import com.stackone.stackone_client_java.utils.SpeakeasyMetadata;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class AtsOrderBackgroundCheckRequestRequest {
    /**
     * The account identifier
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-account-id")
    private String xAccountId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto;

    @JsonCreator
    public AtsOrderBackgroundCheckRequestRequest(
            String xAccountId,
            AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        Utils.checkNotNull(atsCreateBackgroundCheckOrderRequestDto, "atsCreateBackgroundCheckOrderRequestDto");
        this.xAccountId = xAccountId;
        this.atsCreateBackgroundCheckOrderRequestDto = atsCreateBackgroundCheckOrderRequestDto;
    }

    /**
     * The account identifier
     */
    @JsonIgnore
    public String xAccountId() {
        return xAccountId;
    }

    @JsonIgnore
    public AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto() {
        return atsCreateBackgroundCheckOrderRequestDto;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The account identifier
     */
    public AtsOrderBackgroundCheckRequestRequest withXAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public AtsOrderBackgroundCheckRequestRequest withAtsCreateBackgroundCheckOrderRequestDto(AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto) {
        Utils.checkNotNull(atsCreateBackgroundCheckOrderRequestDto, "atsCreateBackgroundCheckOrderRequestDto");
        this.atsCreateBackgroundCheckOrderRequestDto = atsCreateBackgroundCheckOrderRequestDto;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AtsOrderBackgroundCheckRequestRequest other = (AtsOrderBackgroundCheckRequestRequest) o;
        return 
            Utils.enhancedDeepEquals(this.xAccountId, other.xAccountId) &&
            Utils.enhancedDeepEquals(this.atsCreateBackgroundCheckOrderRequestDto, other.atsCreateBackgroundCheckOrderRequestDto);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            xAccountId, atsCreateBackgroundCheckOrderRequestDto);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AtsOrderBackgroundCheckRequestRequest.class,
                "xAccountId", xAccountId,
                "atsCreateBackgroundCheckOrderRequestDto", atsCreateBackgroundCheckOrderRequestDto);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String xAccountId;

        private AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The account identifier
         */
        public Builder xAccountId(String xAccountId) {
            Utils.checkNotNull(xAccountId, "xAccountId");
            this.xAccountId = xAccountId;
            return this;
        }


        public Builder atsCreateBackgroundCheckOrderRequestDto(AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto) {
            Utils.checkNotNull(atsCreateBackgroundCheckOrderRequestDto, "atsCreateBackgroundCheckOrderRequestDto");
            this.atsCreateBackgroundCheckOrderRequestDto = atsCreateBackgroundCheckOrderRequestDto;
            return this;
        }

        public AtsOrderBackgroundCheckRequestRequest build() {

            return new AtsOrderBackgroundCheckRequestRequest(
                xAccountId, atsCreateBackgroundCheckOrderRequestDto);
        }

    }
}
