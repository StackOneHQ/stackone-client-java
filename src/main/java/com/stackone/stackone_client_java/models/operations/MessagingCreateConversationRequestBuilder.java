/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import static com.stackone.stackone_client_java.operations.Operations.RequestOperation;

import com.stackone.stackone_client_java.SDKConfiguration;
import com.stackone.stackone_client_java.models.components.MessagingCreateConversationRequestDto;
import com.stackone.stackone_client_java.operations.MessagingCreateConversation;
import com.stackone.stackone_client_java.utils.Headers;
import com.stackone.stackone_client_java.utils.Options;
import com.stackone.stackone_client_java.utils.RetryConfig;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class MessagingCreateConversationRequestBuilder {

    private String xAccountId;
    private MessagingCreateConversationRequestDto messagingCreateConversationRequestDto;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public MessagingCreateConversationRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public MessagingCreateConversationRequestBuilder xAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public MessagingCreateConversationRequestBuilder messagingCreateConversationRequestDto(MessagingCreateConversationRequestDto messagingCreateConversationRequestDto) {
        Utils.checkNotNull(messagingCreateConversationRequestDto, "messagingCreateConversationRequestDto");
        this.messagingCreateConversationRequestDto = messagingCreateConversationRequestDto;
        return this;
    }
                
    public MessagingCreateConversationRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public MessagingCreateConversationRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private MessagingCreateConversationRequest buildRequest() {

        MessagingCreateConversationRequest request = new MessagingCreateConversationRequest(xAccountId,
            messagingCreateConversationRequestDto);

        return request;
    }

    public MessagingCreateConversationResponse call() {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<MessagingCreateConversationRequest, MessagingCreateConversationResponse> operation
              = new MessagingCreateConversation.Sync(sdkConfiguration, options, _headers);
        MessagingCreateConversationRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
