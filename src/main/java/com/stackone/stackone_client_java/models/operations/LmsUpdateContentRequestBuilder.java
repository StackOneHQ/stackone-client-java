/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import com.stackone.stackone_client_java.models.components.LmsCreateContentRequestDto;
import com.stackone.stackone_client_java.utils.Options;
import com.stackone.stackone_client_java.utils.RetryConfig;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class LmsUpdateContentRequestBuilder {

    private String xAccountId;
    private String id;
    private LmsCreateContentRequestDto lmsCreateContentRequestDto;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallLmsUpdateContent sdk;

    public LmsUpdateContentRequestBuilder(SDKMethodInterfaces.MethodCallLmsUpdateContent sdk) {
        this.sdk = sdk;
    }

    public LmsUpdateContentRequestBuilder xAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public LmsUpdateContentRequestBuilder id(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public LmsUpdateContentRequestBuilder lmsCreateContentRequestDto(LmsCreateContentRequestDto lmsCreateContentRequestDto) {
        Utils.checkNotNull(lmsCreateContentRequestDto, "lmsCreateContentRequestDto");
        this.lmsCreateContentRequestDto = lmsCreateContentRequestDto;
        return this;
    }
                
    public LmsUpdateContentRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public LmsUpdateContentRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public LmsUpdateContentResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.updateContent(
            xAccountId,
            id,
            lmsCreateContentRequestDto,
            options);
    }
}
