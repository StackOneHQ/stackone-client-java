/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * QueryParamType
 * 
 * <p>Filter to select time-off policies by type
 */
public enum QueryParamType {
    SICK("sick"),
    UNMAPPED_VALUE("unmapped_value"),
    VACATION("vacation"),
    LONG_TERM_DISABILITY("long_term_disability"),
    SHORT_TERM_DISABILITY("short_term_disability"),
    ABSENT("absent"),
    COMP_TIME("comp_time"),
    TRAINING("training"),
    ANNUAL_LEAVE("annual_leave"),
    LEAVE_OF_ABSENCE("leave_of_absence"),
    BREAK("break"),
    CHILD_CARE_LEAVE("child_care_leave"),
    MATERNITY_LEAVE("maternity_leave"),
    JURY_DUTY("jury_duty"),
    SABBATICAL("sabbatical"),
    ACCIDENT("accident"),
    PAID("paid"),
    UNPAID("unpaid"),
    HOLIDAY("holiday"),
    PERSONAL("personal"),
    IN_LIEU("in_lieu"),
    BEREAVEMENT("bereavement");

    @JsonValue
    private final String value;

    private QueryParamType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<QueryParamType> fromValue(String value) {
        for (QueryParamType o: QueryParamType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

