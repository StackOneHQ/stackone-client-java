/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import com.stackone.stackone_client_java.models.components.AtsCreateApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateBackgroundCheckOrderRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateBackgroundCheckPackagesRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateCandidateRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateCandidatesAssessmentsRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateJobRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateNotesRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateOfferRequestDto;
import com.stackone.stackone_client_java.models.components.AtsMoveApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsRejectApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateBackgroundCheckPackagesRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateBackgroundCheckResultRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateCandidateRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateCandidatesAssessmentsResultsRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateJobRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateNotesRequestDto;
import com.stackone.stackone_client_java.models.components.ConnectSessionAuthenticate;
import com.stackone.stackone_client_java.models.components.ConnectSessionCreate;
import com.stackone.stackone_client_java.models.components.CrmCreateContactRequestDto;
import com.stackone.stackone_client_java.models.components.EntitySkillsCreateRequestDto;
import com.stackone.stackone_client_java.models.components.HrisBatchDocumentUploadRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateEmployeeRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateEmploymentRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateTimeOffRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateWorkEligibilityRequestDto;
import com.stackone.stackone_client_java.models.components.HrisDocumentsUploadRequestDto;
import com.stackone.stackone_client_java.models.components.HrisInviteEmployeeRequestDto;
import com.stackone.stackone_client_java.models.components.HrisUpdateEmployeeRequestDto;
import com.stackone.stackone_client_java.models.components.HrisUpdateEmploymentRequestDto;
import com.stackone.stackone_client_java.models.components.IamUpdateUserRequestDto;
import com.stackone.stackone_client_java.models.components.LmsBatchUpsertContentRequestDto;
import com.stackone.stackone_client_java.models.components.LmsBatchUpsertCourseRequestDto;
import com.stackone.stackone_client_java.models.components.LmsCreateAssignmentRequestDto;
import com.stackone.stackone_client_java.models.components.LmsCreateCollectionRequestDto;
import com.stackone.stackone_client_java.models.components.LmsCreateCompletionRequestDto;
import com.stackone.stackone_client_java.models.components.LmsCreateContentRequestDto;
import com.stackone.stackone_client_java.models.components.LmsUpsertContentRequestDto;
import com.stackone.stackone_client_java.models.components.LmsUpsertCourseRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateContentBlocksRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateEmailTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateInAppTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreatePushTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateSmsTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.PatchAccountExternalDto;
import com.stackone.stackone_client_java.models.components.ProxyRequestBody;
import com.stackone.stackone_client_java.models.components.UnifiedUploadRequestDto;
import com.stackone.stackone_client_java.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class SDKMethodInterfaces {

    public interface MethodCallStackoneCreateConnectSession {
        StackoneCreateConnectSessionResponse createConnectSession(
            ConnectSessionCreate request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneAuthenticateConnectSession {
        StackoneAuthenticateConnectSessionResponse authenticateConnectSession(
            ConnectSessionAuthenticate request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneListLinkedAccounts {
        StackoneListLinkedAccountsResponse listLinkedAccounts(
            StackoneListLinkedAccountsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneGetAccount {
        StackoneGetAccountResponse getAccount(
            String id,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneDeleteAccount {
        StackoneDeleteAccountResponse deleteAccount(
            String id,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneUpdateAccount {
        StackoneUpdateAccountResponse updateAccount(
            String id,
            PatchAccountExternalDto patchAccountExternalDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneGetAccountMetaInfo {
        StackoneGetAccountMetaInfoResponse getAccountMetaInfo(
            String id,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneListStepLogs {
        StackoneListStepLogsResponse listStepLogs(
            StackoneListStepLogsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneGetLog {
        StackoneGetLogResponse getLog(
            String id,
            JsonNullable<? extends Include> include,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneListLogs {
        StackoneListLogsResponse listLogs(
            StackoneListLogsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneListConnectorsMeta {
        StackoneListConnectorsMetaResponse listConnectorsMeta(
            JsonNullable<String> include,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneGetConnectorMeta {
        StackoneGetConnectorMetaResponse getConnectorMeta(
            String provider,
            JsonNullable<String> include,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallStackoneProxyRequest {
        StackoneProxyRequestResponse proxyRequest(
            String xAccountId,
            ProxyRequestBody proxyRequestBody,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListCompanies {
        HrisListCompaniesResponse listCompanies(
            HrisListCompaniesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetCompany {
        HrisGetCompanyResponse getCompany(
            HrisGetCompanyRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeCustomFieldDefinitions {
        HrisListEmployeeCustomFieldDefinitionsResponse listEmployeeCustomFieldDefinitions(
            HrisListEmployeeCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeCustomFieldDefinition {
        HrisGetEmployeeCustomFieldDefinitionResponse getEmployeeCustomFieldDefinition(
            HrisGetEmployeeCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployees {
        HrisListEmployeesResponse listEmployees(
            HrisListEmployeesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisCreateEmployee {
        HrisCreateEmployeeResponse createEmployee(
            String xAccountId,
            HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployee {
        HrisGetEmployeeResponse getEmployee(
            HrisGetEmployeeRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisUpdateEmployee {
        HrisUpdateEmployeeResponse updateEmployee(
            String xAccountId,
            String id,
            HrisUpdateEmployeeRequestDto hrisUpdateEmployeeRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisInviteEmployee {
        HrisInviteEmployeeResponse inviteEmployee(
            String xAccountId,
            String id,
            HrisInviteEmployeeRequestDto hrisInviteEmployeeRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeTimeOffRequests {
        HrisListEmployeeTimeOffRequestsResponse listEmployeeTimeOffRequests(
            HrisListEmployeeTimeOffRequestsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisCreateEmployeeTimeOffRequest {
        HrisCreateEmployeeTimeOffRequestResponse createEmployeeTimeOffRequest(
            String xAccountId,
            String id,
            HrisCreateTimeOffRequestDto hrisCreateTimeOffRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeesTimeOffRequest {
        HrisGetEmployeesTimeOffRequestResponse getEmployeesTimeOffRequest(
            HrisGetEmployeesTimeOffRequestRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisCancelEmployeeTimeOffRequest {
        HrisCancelEmployeeTimeOffRequestResponse cancelEmployeeTimeOffRequest(
            String xAccountId,
            String id,
            String subResourceId,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisUpdateEmployeeTimeOffRequest {
        HrisUpdateEmployeeTimeOffRequestResponse updateEmployeeTimeOffRequest(
            String xAccountId,
            String id,
            String subResourceId,
            HrisCreateTimeOffRequestDto hrisCreateTimeOffRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisBatchUploadEmployeeDocument {
        HrisBatchUploadEmployeeDocumentResponse batchUploadEmployeeDocument(
            String xAccountId,
            String id,
            HrisBatchDocumentUploadRequestDto hrisBatchDocumentUploadRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisUploadEmployeeDocument {
        HrisUploadEmployeeDocumentResponse uploadEmployeeDocument(
            String xAccountId,
            String id,
            HrisDocumentsUploadRequestDto hrisDocumentsUploadRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisDownloadEmployeeDocument {
        HrisDownloadEmployeeDocumentResponse downloadEmployeeDocument(
            HrisDownloadEmployeeDocumentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeDocuments {
        HrisListEmployeeDocumentsResponse listEmployeeDocuments(
            HrisListEmployeeDocumentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeDocument {
        HrisGetEmployeeDocumentResponse getEmployeeDocument(
            HrisGetEmployeeDocumentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeCategories {
        HrisListEmployeeCategoriesResponse listEmployeeCategories(
            HrisListEmployeeCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeDocumentCategory {
        HrisGetEmployeeDocumentCategoryResponse getEmployeeDocumentCategory(
            HrisGetEmployeeDocumentCategoryRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeWorkEligibility {
        HrisListEmployeeWorkEligibilityResponse listEmployeeWorkEligibility(
            HrisListEmployeeWorkEligibilityRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisCreateEmployeeWorkEligibilityRequest {
        HrisCreateEmployeeWorkEligibilityRequestResponse createEmployeeWorkEligibilityRequest(
            String id,
            String xAccountId,
            HrisCreateWorkEligibilityRequestDto hrisCreateWorkEligibilityRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeesWorkEligibility {
        HrisGetEmployeesWorkEligibilityResponse getEmployeesWorkEligibility(
            HrisGetEmployeesWorkEligibilityRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisUpdateEmployeeWorkEligibilityRequest {
        HrisUpdateEmployeeWorkEligibilityRequestResponse updateEmployeeWorkEligibilityRequest(
            String id,
            String subResourceId,
            String xAccountId,
            HrisCreateWorkEligibilityRequestDto hrisCreateWorkEligibilityRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeTimeOffBalances {
        HrisListEmployeeTimeOffBalancesResponse listEmployeeTimeOffBalances(
            HrisListEmployeeTimeOffBalancesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeTimeOffBalance {
        HrisGetEmployeeTimeOffBalanceResponse getEmployeeTimeOffBalance(
            HrisGetEmployeeTimeOffBalanceRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployments {
        HrisListEmploymentsResponse listEmployments(
            HrisListEmploymentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployment {
        HrisGetEmploymentResponse getEmployment(
            HrisGetEmploymentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeEmployments {
        HrisListEmployeeEmploymentsResponse listEmployeeEmployments(
            HrisListEmployeeEmploymentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisCreateEmployeeEmployment {
        HrisCreateEmployeeEmploymentResponse createEmployeeEmployment(
            String xAccountId,
            String id,
            HrisCreateEmploymentRequestDto hrisCreateEmploymentRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeEmployment {
        HrisGetEmployeeEmploymentResponse getEmployeeEmployment(
            HrisGetEmployeeEmploymentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisUpdateEmployeeEmployment {
        HrisUpdateEmployeeEmploymentResponse updateEmployeeEmployment(
            String xAccountId,
            String id,
            String subResourceId,
            HrisUpdateEmploymentRequestDto hrisUpdateEmploymentRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListLocations {
        HrisListLocationsResponse listLocations(
            HrisListLocationsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetLocation {
        HrisGetLocationResponse getLocation(
            HrisGetLocationRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListTimeOffRequests {
        HrisListTimeOffRequestsResponse listTimeOffRequests(
            HrisListTimeOffRequestsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetTimeOffRequest {
        HrisGetTimeOffRequestResponse getTimeOffRequest(
            HrisGetTimeOffRequestRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListTimeOffTypes {
        HrisListTimeOffTypesResponse listTimeOffTypes(
            HrisListTimeOffTypesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetTimeOffType {
        HrisGetTimeOffTypeResponse getTimeOffType(
            HrisGetTimeOffTypeRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListTimeEntries {
        HrisListTimeEntriesResponse listTimeEntries(
            HrisListTimeEntriesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetTimeEntries {
        HrisGetTimeEntriesResponse getTimeEntries(
            HrisGetTimeEntriesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListBenefits {
        HrisListBenefitsResponse listBenefits(
            HrisListBenefitsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetBenefit {
        HrisGetBenefitResponse getBenefit(
            HrisGetBenefitRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListGroups {
        HrisListGroupsResponse listGroups(
            HrisListGroupsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListDepartmentGroups {
        HrisListDepartmentGroupsResponse listDepartmentGroups(
            HrisListDepartmentGroupsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListCostCenterGroups {
        HrisListCostCenterGroupsResponse listCostCenterGroups(
            HrisListCostCenterGroupsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListTeamGroups {
        HrisListTeamGroupsResponse listTeamGroups(
            HrisListTeamGroupsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetGroup {
        HrisGetGroupResponse getGroup(
            HrisGetGroupRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetDepartmentGroup {
        HrisGetDepartmentGroupResponse getDepartmentGroup(
            HrisGetDepartmentGroupRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetCostCenterGroup {
        HrisGetCostCenterGroupResponse getCostCenterGroup(
            HrisGetCostCenterGroupRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetTeamGroup {
        HrisGetTeamGroupResponse getTeamGroup(
            HrisGetTeamGroupRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListJobs {
        HrisListJobsResponse listJobs(
            HrisListJobsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetJob {
        HrisGetJobResponse getJob(
            HrisGetJobRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeSkills {
        HrisListEmployeeSkillsResponse listEmployeeSkills(
            HrisListEmployeeSkillsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisCreateEmployeeSkill {
        HrisCreateEmployeeSkillResponse createEmployeeSkill(
            String xAccountId,
            String id,
            EntitySkillsCreateRequestDto entitySkillsCreateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeSkill {
        HrisGetEmployeeSkillResponse getEmployeeSkill(
            HrisGetEmployeeSkillRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListTimeOffPolicies {
        HrisListTimeOffPoliciesResponse listTimeOffPolicies(
            HrisListTimeOffPoliciesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetTimeOffPolicy {
        HrisGetTimeOffPolicyResponse getTimeOffPolicy(
            HrisGetTimeOffPolicyRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeTimeOffPolicies {
        HrisListEmployeeTimeOffPoliciesResponse listEmployeeTimeOffPolicies(
            HrisListEmployeeTimeOffPoliciesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisListEmployeeTasks {
        HrisListEmployeeTasksResponse listEmployeeTasks(
            HrisListEmployeeTasksRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallHrisGetEmployeeTask {
        HrisGetEmployeeTaskResponse getEmployeeTask(
            HrisGetEmployeeTaskRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplications {
        AtsListApplicationsResponse listApplications(
            AtsListApplicationsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateApplication {
        AtsCreateApplicationResponse createApplication(
            String xAccountId,
            AtsCreateApplicationRequestDto atsCreateApplicationRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplication {
        AtsGetApplicationResponse getApplication(
            AtsGetApplicationRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateApplication {
        AtsUpdateApplicationResponse updateApplication(
            String xAccountId,
            String id,
            AtsUpdateApplicationRequestDto atsUpdateApplicationRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplicationsOffers {
        AtsListApplicationsOffersResponse listApplicationsOffers(
            AtsListApplicationsOffersRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsMoveApplication {
        AtsMoveApplicationResponse moveApplication(
            String xAccountId,
            String id,
            AtsMoveApplicationRequestDto atsMoveApplicationRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsRejectApplication {
        AtsRejectApplicationResponse rejectApplication(
            String xAccountId,
            String id,
            AtsRejectApplicationRequestDto atsRejectApplicationRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplicationOffer {
        AtsGetApplicationOfferResponse getApplicationOffer(
            AtsGetApplicationOfferRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplicationScorecards {
        AtsListApplicationScorecardsResponse listApplicationScorecards(
            AtsListApplicationScorecardsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplicationScorecard {
        AtsGetApplicationScorecardResponse getApplicationScorecard(
            AtsGetApplicationScorecardRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplicationNotes {
        AtsListApplicationNotesResponse listApplicationNotes(
            AtsListApplicationNotesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateApplicationNote {
        AtsCreateApplicationNoteResponse createApplicationNote(
            String xAccountId,
            String id,
            AtsCreateNotesRequestDto atsCreateNotesRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplicationNote {
        AtsGetApplicationNoteResponse getApplicationNote(
            AtsGetApplicationNoteRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateApplicationNote {
        AtsUpdateApplicationNoteResponse updateApplicationNote(
            String xAccountId,
            String id,
            String subResourceId,
            AtsUpdateNotesRequestDto atsUpdateNotesRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplicationsScheduledInterviews {
        AtsListApplicationsScheduledInterviewsResponse listApplicationsScheduledInterviews(
            AtsListApplicationsScheduledInterviewsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplicationScheduledInterview {
        AtsGetApplicationScheduledInterviewResponse getApplicationScheduledInterview(
            AtsGetApplicationScheduledInterviewRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUploadApplicationDocument {
        AtsUploadApplicationDocumentResponse uploadApplicationDocument(
            String xAccountId,
            String id,
            UnifiedUploadRequestDto unifiedUploadRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsDownloadApplicationDocument {
        AtsDownloadApplicationDocumentResponse downloadApplicationDocument(
            AtsDownloadApplicationDocumentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplicationDocuments {
        AtsListApplicationDocumentsResponse listApplicationDocuments(
            AtsListApplicationDocumentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplicationDocument {
        AtsGetApplicationDocumentResponse getApplicationDocument(
            AtsGetApplicationDocumentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListCandidates {
        AtsListCandidatesResponse listCandidates(
            AtsListCandidatesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateCandidate {
        AtsCreateCandidateResponse createCandidate(
            String xAccountId,
            AtsCreateCandidateRequestDto atsCreateCandidateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetCandidate {
        AtsGetCandidateResponse getCandidate(
            AtsGetCandidateRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateCandidate {
        AtsUpdateCandidateResponse updateCandidate(
            String xAccountId,
            String id,
            AtsUpdateCandidateRequestDto atsUpdateCandidateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListCandidateNotes {
        AtsListCandidateNotesResponse listCandidateNotes(
            AtsListCandidateNotesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateCandidateNote {
        AtsCreateCandidateNoteResponse createCandidateNote(
            String xAccountId,
            String id,
            AtsCreateNotesRequestDto atsCreateNotesRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetCandidateNote {
        AtsGetCandidateNoteResponse getCandidateNote(
            AtsGetCandidateNoteRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListApplicationCustomFieldDefinitions {
        AtsListApplicationCustomFieldDefinitionsResponse listApplicationCustomFieldDefinitions(
            AtsListApplicationCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetApplicationCustomFieldDefinition {
        AtsGetApplicationCustomFieldDefinitionResponse getApplicationCustomFieldDefinition(
            AtsGetApplicationCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListCandidateCustomFieldDefinitions {
        AtsListCandidateCustomFieldDefinitionsResponse listCandidateCustomFieldDefinitions(
            AtsListCandidateCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetCandidateCustomFieldDefinition {
        AtsGetCandidateCustomFieldDefinitionResponse getCandidateCustomFieldDefinition(
            AtsGetCandidateCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListJobCustomFieldDefinitions {
        AtsListJobCustomFieldDefinitionsResponse listJobCustomFieldDefinitions(
            AtsListJobCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetJobCustomFieldDefinition {
        AtsGetJobCustomFieldDefinitionResponse getJobCustomFieldDefinition(
            AtsGetJobCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListDepartments {
        AtsListDepartmentsResponse listDepartments(
            AtsListDepartmentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetDepartment {
        AtsGetDepartmentResponse getDepartment(
            AtsGetDepartmentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListInterviewStages {
        AtsListInterviewStagesResponse listInterviewStages(
            AtsListInterviewStagesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetInterviewStage {
        AtsGetInterviewStageResponse getInterviewStage(
            AtsGetInterviewStageRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListInterviews {
        AtsListInterviewsResponse listInterviews(
            AtsListInterviewsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetInterview {
        AtsGetInterviewResponse getInterview(
            AtsGetInterviewRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListJobs {
        AtsListJobsResponse listJobs(
            AtsListJobsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateJob {
        AtsCreateJobResponse createJob(
            String xAccountId,
            AtsCreateJobRequestDto atsCreateJobRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetJob {
        AtsGetJobResponse getJob(
            AtsGetJobRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateJob {
        AtsUpdateJobResponse updateJob(
            String xAccountId,
            String id,
            AtsUpdateJobRequestDto atsUpdateJobRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListLists {
        AtsListListsResponse listLists(
            AtsListListsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetList {
        AtsGetListResponse getList(
            AtsGetListRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListLocations {
        AtsListLocationsResponse listLocations(
            AtsListLocationsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetLocation {
        AtsGetLocationResponse getLocation(
            AtsGetLocationRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListRejectedReasons {
        AtsListRejectedReasonsResponse listRejectedReasons(
            AtsListRejectedReasonsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetRejectedReason {
        AtsGetRejectedReasonResponse getRejectedReason(
            AtsGetRejectedReasonRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListUsers {
        AtsListUsersResponse listUsers(
            AtsListUsersRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetUser {
        AtsGetUserResponse getUser(
            AtsGetUserRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListJobPostings {
        AtsListJobPostingsResponse listJobPostings(
            AtsListJobPostingsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetJobPosting {
        AtsGetJobPostingResponse getJobPosting(
            AtsGetJobPostingRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListOffers {
        AtsListOffersResponse listOffers(
            AtsListOffersRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateOffer {
        AtsCreateOfferResponse createOffer(
            String xAccountId,
            AtsCreateOfferRequestDto atsCreateOfferRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetOffer {
        AtsGetOfferResponse getOffer(
            AtsGetOfferRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListAssessmentsPackages {
        AtsListAssessmentsPackagesResponse listAssessmentsPackages(
            AtsListAssessmentsPackagesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetAssessmentsPackage {
        AtsGetAssessmentsPackageResponse getAssessmentsPackage(
            AtsGetAssessmentsPackageRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsOrderAssessmentsRequest {
        AtsOrderAssessmentsRequestResponse orderAssessmentsRequest(
            String xAccountId,
            AtsCreateCandidatesAssessmentsRequestDto atsCreateCandidatesAssessmentsRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetAssessmentsRequest {
        AtsGetAssessmentsRequestResponse getAssessmentsRequest(
            AtsGetAssessmentsRequestRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateAssessmentsResult {
        AtsUpdateAssessmentsResultResponse updateAssessmentsResult(
            String xAccountId,
            String id,
            AtsUpdateCandidatesAssessmentsResultsRequestDto atsUpdateCandidatesAssessmentsResultsRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetAssessmentsResult {
        AtsGetAssessmentsResultResponse getAssessmentsResult(
            AtsGetAssessmentsResultRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListBackgroundCheckPackages {
        AtsListBackgroundCheckPackagesResponse listBackgroundCheckPackages(
            AtsListBackgroundCheckPackagesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsCreateBackgroundCheckPackage {
        AtsCreateBackgroundCheckPackageResponse createBackgroundCheckPackage(
            String xAccountId,
            AtsCreateBackgroundCheckPackagesRequestDto atsCreateBackgroundCheckPackagesRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetBackgroundCheckPackage {
        AtsGetBackgroundCheckPackageResponse getBackgroundCheckPackage(
            AtsGetBackgroundCheckPackageRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsDeleteBackgroundCheckPackage {
        AtsDeleteBackgroundCheckPackageResponse deleteBackgroundCheckPackage(
            String xAccountId,
            String id,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateBackgroundCheckPackage {
        AtsUpdateBackgroundCheckPackageResponse updateBackgroundCheckPackage(
            String xAccountId,
            String id,
            AtsUpdateBackgroundCheckPackagesRequestDto atsUpdateBackgroundCheckPackagesRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsListBackgroundCheckRequest {
        AtsListBackgroundCheckRequestResponse listBackgroundCheckRequest(
            AtsListBackgroundCheckRequestRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsOrderBackgroundCheckRequest {
        AtsOrderBackgroundCheckRequestResponse orderBackgroundCheckRequest(
            String xAccountId,
            AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetBackgroundCheckRequest {
        AtsGetBackgroundCheckRequestResponse getBackgroundCheckRequest(
            AtsGetBackgroundCheckRequestRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsUpdateBackgroundCheckResult {
        AtsUpdateBackgroundCheckResultResponse updateBackgroundCheckResult(
            String xAccountId,
            String id,
            AtsUpdateBackgroundCheckResultRequestDto atsUpdateBackgroundCheckResultRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallAtsGetBackgroundCheckResult {
        AtsGetBackgroundCheckResultResponse getBackgroundCheckResult(
            AtsGetBackgroundCheckResultRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmListContacts {
        CrmListContactsResponse listContacts(
            CrmListContactsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmCreateContact {
        CrmCreateContactResponse createContact(
            String xAccountId,
            CrmCreateContactRequestDto crmCreateContactRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmGetContact {
        CrmGetContactResponse getContact(
            CrmGetContactRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmUpdateContact {
        CrmUpdateContactResponse updateContact(
            String xAccountId,
            String id,
            CrmCreateContactRequestDto crmCreateContactRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmListAccounts {
        CrmListAccountsResponse listAccounts(
            CrmListAccountsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmGetAccount {
        CrmGetAccountResponse getAccount(
            CrmGetAccountRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmListLists {
        CrmListListsResponse listLists(
            CrmListListsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmGetList {
        CrmGetListResponse getList(
            CrmGetListRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmListContactCustomFieldDefinitions {
        CrmListContactCustomFieldDefinitionsResponse listContactCustomFieldDefinitions(
            CrmListContactCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallCrmGetContactCustomFieldDefinition {
        CrmGetContactCustomFieldDefinitionResponse getContactCustomFieldDefinition(
            CrmGetContactCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamListUsers {
        IamListUsersResponse listUsers(
            IamListUsersRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamGetUser {
        IamGetUserResponse getUser(
            IamGetUserRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamDeleteUser {
        IamDeleteUserResponse deleteUser(
            String xAccountId,
            String id,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamUpdateUser {
        IamUpdateUserResponse updateUser(
            String xAccountId,
            String id,
            IamUpdateUserRequestDto iamUpdateUserRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamListRoles {
        IamListRolesResponse listRoles(
            IamListRolesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamGetRole {
        IamGetRoleResponse getRole(
            IamGetRoleRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamListGroups {
        IamListGroupsResponse listGroups(
            IamListGroupsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamGetGroup {
        IamGetGroupResponse getGroup(
            IamGetGroupRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamListPolicies {
        IamListPoliciesResponse listPolicies(
            IamListPoliciesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallIamGetPolicy {
        IamGetPolicyResponse getPolicy(
            IamGetPolicyRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListEmailTemplates {
        MarketingListEmailTemplatesResponse listEmailTemplates(
            MarketingListEmailTemplatesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingCreateEmailTemplate {
        MarketingCreateEmailTemplateResponse createEmailTemplate(
            String xAccountId,
            MarketingCreateEmailTemplateRequestDto marketingCreateEmailTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetEmailTemplate {
        MarketingGetEmailTemplateResponse getEmailTemplate(
            MarketingGetEmailTemplateRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingUpdateEmailTemplate {
        MarketingUpdateEmailTemplateResponse updateEmailTemplate(
            String xAccountId,
            String id,
            MarketingCreateEmailTemplateRequestDto marketingCreateEmailTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListInAppTemplates {
        MarketingListInAppTemplatesResponse listInAppTemplates(
            MarketingListInAppTemplatesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingCreateInAppTemplate {
        MarketingCreateInAppTemplateResponse createInAppTemplate(
            String xAccountId,
            MarketingCreateInAppTemplateRequestDto marketingCreateInAppTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetInAppTemplate {
        MarketingGetInAppTemplateResponse getInAppTemplate(
            MarketingGetInAppTemplateRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingUpdateInAppTemplate {
        MarketingUpdateInAppTemplateResponse updateInAppTemplate(
            String xAccountId,
            String id,
            MarketingCreateInAppTemplateRequestDto marketingCreateInAppTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListSmsTemplates {
        MarketingListSmsTemplatesResponse listSmsTemplates(
            MarketingListSmsTemplatesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingCreateSmsTemplate {
        MarketingCreateSmsTemplateResponse createSmsTemplate(
            String xAccountId,
            MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetSmsTemplate {
        MarketingGetSmsTemplateResponse getSmsTemplate(
            MarketingGetSmsTemplateRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingUpdateSmsTemplate {
        MarketingUpdateSmsTemplateResponse updateSmsTemplate(
            String xAccountId,
            String id,
            MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListOmniChannelTemplates {
        MarketingListOmniChannelTemplatesResponse listOmniChannelTemplates(
            MarketingListOmniChannelTemplatesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingCreateOmniChannelTemplate {
        MarketingCreateOmniChannelTemplateResponse createOmniChannelTemplate(
            String xAccountId,
            MarketingCreateTemplateRequestDto marketingCreateTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetOmniChannelTemplate {
        MarketingGetOmniChannelTemplateResponse getOmniChannelTemplate(
            MarketingGetOmniChannelTemplateRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingUpdateOmniChannelTemplate {
        MarketingUpdateOmniChannelTemplateResponse updateOmniChannelTemplate(
            String xAccountId,
            String id,
            MarketingCreateTemplateRequestDto marketingCreateTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListPushTemplates {
        MarketingListPushTemplatesResponse listPushTemplates(
            MarketingListPushTemplatesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingCreatePushTemplate {
        MarketingCreatePushTemplateResponse createPushTemplate(
            String xAccountId,
            MarketingCreatePushTemplateRequestDto marketingCreatePushTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetPushTemplate {
        MarketingGetPushTemplateResponse getPushTemplate(
            MarketingGetPushTemplateRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingUpdatePushTemplate {
        MarketingUpdatePushTemplateResponse updatePushTemplate(
            String xAccountId,
            String id,
            MarketingCreatePushTemplateRequestDto marketingCreatePushTemplateRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListCampaigns {
        MarketingListCampaignsResponse listCampaigns(
            MarketingListCampaignsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetCampaign {
        MarketingGetCampaignResponse getCampaign(
            MarketingGetCampaignRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingListContentBlocks {
        MarketingListContentBlocksResponse listContentBlocks(
            MarketingListContentBlocksRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingCreateContentBlock {
        MarketingCreateContentBlockResponse createContentBlock(
            String xAccountId,
            MarketingCreateContentBlocksRequestDto marketingCreateContentBlocksRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingGetContentBlock {
        MarketingGetContentBlockResponse getContentBlock(
            MarketingGetContentBlockRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallMarketingUpdateContentBlock {
        MarketingUpdateContentBlockResponse updateContentBlock(
            String xAccountId,
            String id,
            MarketingCreateContentBlocksRequestDto marketingCreateContentBlocksRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsBatchUpsertCourse {
        LmsBatchUpsertCourseResponse batchUpsertCourse(
            String xAccountId,
            LmsBatchUpsertCourseRequestDto lmsBatchUpsertCourseRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListCourses {
        LmsListCoursesResponse listCourses(
            LmsListCoursesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsUpsertCourse {
        LmsUpsertCourseResponse upsertCourse(
            String xAccountId,
            LmsUpsertCourseRequestDto lmsUpsertCourseRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetCourse {
        LmsGetCourseResponse getCourse(
            LmsGetCourseRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListUserAssignments {
        LmsListUserAssignmentsResponse listUserAssignments(
            LmsListUserAssignmentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsCreateUserAssignment {
        LmsCreateUserAssignmentResponse createUserAssignment(
            String xAccountId,
            String id,
            LmsCreateAssignmentRequestDto lmsCreateAssignmentRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetUserAssignment {
        LmsGetUserAssignmentResponse getUserAssignment(
            LmsGetUserAssignmentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsBatchUpsertContent {
        LmsBatchUpsertContentResponse batchUpsertContent(
            String xAccountId,
            LmsBatchUpsertContentRequestDto lmsBatchUpsertContentRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListContent {
        LmsListContentResponse listContent(
            LmsListContentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsUpsertContent {
        LmsUpsertContentResponse upsertContent(
            String xAccountId,
            LmsUpsertContentRequestDto lmsUpsertContentRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetContent {
        LmsGetContentResponse getContent(
            LmsGetContentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsUpdateContent {
        LmsUpdateContentResponse updateContent(
            String xAccountId,
            String id,
            LmsCreateContentRequestDto lmsCreateContentRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListUserCompletions {
        LmsListUserCompletionsResponse listUserCompletions(
            LmsListUserCompletionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsCreateUserCompletion {
        LmsCreateUserCompletionResponse createUserCompletion(
            String xAccountId,
            String id,
            LmsCreateCompletionRequestDto lmsCreateCompletionRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetUserCompletion {
        LmsGetUserCompletionResponse getUserCompletion(
            LmsGetUserCompletionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsDeleteUserCompletion {
        LmsDeleteUserCompletionResponse deleteUserCompletion(
            String xAccountId,
            String id,
            String subResourceId,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListCompletions {
        LmsListCompletionsResponse listCompletions(
            LmsListCompletionsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetCompletion {
        LmsGetCompletionResponse getCompletion(
            LmsGetCompletionRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetCategory {
        LmsGetCategoryResponse getCategory(
            LmsGetCategoryRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListCategories {
        LmsListCategoriesResponse listCategories(
            LmsListCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListUsers {
        LmsListUsersResponse listUsers(
            LmsListUsersRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetUser {
        LmsGetUserResponse getUser(
            LmsGetUserRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetSkill {
        LmsGetSkillResponse getSkill(
            LmsGetSkillRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListSkills {
        LmsListSkillsResponse listSkills(
            LmsListSkillsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsListAssignments {
        LmsListAssignmentsResponse listAssignments(
            LmsListAssignmentsRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsGetAssignment {
        LmsGetAssignmentResponse getAssignment(
            LmsGetAssignmentRequest request,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsCreateCollection {
        LmsCreateCollectionResponse createCollection(
            String xAccountId,
            LmsCreateCollectionRequestDto lmsCreateCollectionRequestDto,
            Optional<Options> options) throws Exception;
    }

    public interface MethodCallLmsUpdateCollection {
        LmsUpdateCollectionResponse updateCollection(
            String xAccountId,
            String id,
            LmsCreateCollectionRequestDto lmsCreateCollectionRequestDto,
            Optional<Options> options) throws Exception;
    }
}
