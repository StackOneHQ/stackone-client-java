/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.stackone.stackone_client_java.models.operations;

import com.stackone.stackone_client_java.models.components.EntitySkillsCreateRequestDto;
import com.stackone.stackone_client_java.models.components.HrisBatchDocumentUploadRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateEmployeeRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateEmploymentRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateTimeOffRequestDto;
import com.stackone.stackone_client_java.models.components.HrisCreateWorkEligibilityRequestDto;
import com.stackone.stackone_client_java.models.components.HrisDocumentsUploadRequestDto;
import com.stackone.stackone_client_java.models.components.HrisInviteEmployeeRequestDto;
import com.stackone.stackone_client_java.models.components.HrisUpdateEmployeeRequestDto;
import com.stackone.stackone_client_java.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class SDKMethodInterfaces {


    public interface MethodCallHrisListCompanies {
        HrisListCompaniesResponse listCompanies(
            HrisListCompaniesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetCompany {
        HrisGetCompanyResponse getCompany(
            HrisGetCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeCustomFieldDefinitions {
        HrisListEmployeeCustomFieldDefinitionsResponse listEmployeeCustomFieldDefinitions(
            HrisListEmployeeCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeeCustomFieldDefinition {
        HrisGetEmployeeCustomFieldDefinitionResponse getEmployeeCustomFieldDefinition(
            HrisGetEmployeeCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployees {
        HrisListEmployeesResponse listEmployees(
            HrisListEmployeesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisCreateEmployee {
        HrisCreateEmployeeResponse createEmployee(
            String xAccountId,
            HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployee {
        HrisGetEmployeeResponse getEmployee(
            HrisGetEmployeeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisUpdateEmployee {
        HrisUpdateEmployeeResponse updateEmployee(
            String xAccountId,
            String id,
            HrisUpdateEmployeeRequestDto hrisUpdateEmployeeRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisInviteEmployee {
        HrisInviteEmployeeResponse inviteEmployee(
            String xAccountId,
            String id,
            HrisInviteEmployeeRequestDto hrisInviteEmployeeRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeTimeOffRequests {
        HrisListEmployeeTimeOffRequestsResponse listEmployeeTimeOffRequests(
            HrisListEmployeeTimeOffRequestsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisCreateEmployeeTimeOffRequest {
        HrisCreateEmployeeTimeOffRequestResponse createEmployeeTimeOffRequest(
            String xAccountId,
            String id,
            HrisCreateTimeOffRequestDto hrisCreateTimeOffRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeesTimeOffRequest {
        HrisGetEmployeesTimeOffRequestResponse getEmployeesTimeOffRequest(
            HrisGetEmployeesTimeOffRequestRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisBatchUploadEmployeeDocument {
        HrisBatchUploadEmployeeDocumentResponse batchUploadEmployeeDocument(
            String xAccountId,
            String id,
            HrisBatchDocumentUploadRequestDto hrisBatchDocumentUploadRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisUploadEmployeeDocument {
        HrisUploadEmployeeDocumentResponse uploadEmployeeDocument(
            String xAccountId,
            String id,
            HrisDocumentsUploadRequestDto hrisDocumentsUploadRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisDownloadEmployeeDocument {
        HrisDownloadEmployeeDocumentResponse downloadEmployeeDocument(
            String xAccountId,
            String id,
            String subResourceId,
            JsonNullable<String> format,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeDocuments {
        HrisListEmployeeDocumentsResponse listEmployeeDocuments(
            HrisListEmployeeDocumentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeeDocument {
        HrisGetEmployeeDocumentResponse getEmployeeDocument(
            HrisGetEmployeeDocumentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeCategories {
        HrisListEmployeeCategoriesResponse listEmployeeCategories(
            HrisListEmployeeCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeeDocumentCategory {
        HrisGetEmployeeDocumentCategoryResponse getEmployeeDocumentCategory(
            HrisGetEmployeeDocumentCategoryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeWorkEligibility {
        HrisListEmployeeWorkEligibilityResponse listEmployeeWorkEligibility(
            HrisListEmployeeWorkEligibilityRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisCreateEmployeeWorkEligibilityRequest {
        HrisCreateEmployeeWorkEligibilityRequestResponse createEmployeeWorkEligibilityRequest(
            String id,
            String xAccountId,
            HrisCreateWorkEligibilityRequestDto hrisCreateWorkEligibilityRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeesWorkEligibility {
        HrisGetEmployeesWorkEligibilityResponse getEmployeesWorkEligibility(
            HrisGetEmployeesWorkEligibilityRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisUpdateEmployeeWorkEligibilityRequest {
        HrisUpdateEmployeeWorkEligibilityRequestResponse updateEmployeeWorkEligibilityRequest(
            String id,
            String subResourceId,
            String xAccountId,
            HrisCreateWorkEligibilityRequestDto hrisCreateWorkEligibilityRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeTimeOffBalances {
        HrisListEmployeeTimeOffBalancesResponse listEmployeeTimeOffBalances(
            HrisListEmployeeTimeOffBalancesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeeTimeOffBalance {
        HrisGetEmployeeTimeOffBalanceResponse getEmployeeTimeOffBalance(
            HrisGetEmployeeTimeOffBalanceRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployments {
        HrisListEmploymentsResponse listEmployments(
            HrisListEmploymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployment {
        HrisGetEmploymentResponse getEmployment(
            HrisGetEmploymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeEmployments {
        HrisListEmployeeEmploymentsResponse listEmployeeEmployments(
            HrisListEmployeeEmploymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisCreateEmployeeEmployment {
        HrisCreateEmployeeEmploymentResponse createEmployeeEmployment(
            String xAccountId,
            String id,
            HrisCreateEmploymentRequestDto hrisCreateEmploymentRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeeEmployment {
        HrisGetEmployeeEmploymentResponse getEmployeeEmployment(
            HrisGetEmployeeEmploymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisUpdateEmployeeEmployment {
        HrisUpdateEmployeeEmploymentResponse updateEmployeeEmployment(
            String xAccountId,
            String id,
            String subResourceId,
            HrisCreateEmploymentRequestDto hrisCreateEmploymentRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListLocations {
        HrisListLocationsResponse listLocations(
            HrisListLocationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetLocation {
        HrisGetLocationResponse getLocation(
            HrisGetLocationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListTimeOffRequests {
        HrisListTimeOffRequestsResponse listTimeOffRequests(
            HrisListTimeOffRequestsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisCreateTimeOffRequest {
        HrisCreateTimeOffRequestResponse createTimeOffRequest(
            String xAccountId,
            HrisCreateTimeOffRequestDto hrisCreateTimeOffRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetTimeOffRequest {
        HrisGetTimeOffRequestResponse getTimeOffRequest(
            HrisGetTimeOffRequestRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisUpdateTimeOffRequest {
        HrisUpdateTimeOffRequestResponse updateTimeOffRequest(
            String xAccountId,
            String id,
            HrisCreateTimeOffRequestDto hrisCreateTimeOffRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListTimeOffTypes {
        HrisListTimeOffTypesResponse listTimeOffTypes(
            HrisListTimeOffTypesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetTimeOffType {
        HrisGetTimeOffTypeResponse getTimeOffType(
            HrisGetTimeOffTypeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListTimeEntries {
        HrisListTimeEntriesResponse listTimeEntries(
            HrisListTimeEntriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetTimeEntries {
        HrisGetTimeEntriesResponse getTimeEntries(
            HrisGetTimeEntriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListBenefits {
        HrisListBenefitsResponse listBenefits(
            HrisListBenefitsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetBenefit {
        HrisGetBenefitResponse getBenefit(
            HrisGetBenefitRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListGroups {
        HrisListGroupsResponse listGroups(
            HrisListGroupsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListDepartmentGroups {
        HrisListDepartmentGroupsResponse listDepartmentGroups(
            HrisListDepartmentGroupsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListCostCenterGroups {
        HrisListCostCenterGroupsResponse listCostCenterGroups(
            HrisListCostCenterGroupsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListTeamGroups {
        HrisListTeamGroupsResponse listTeamGroups(
            HrisListTeamGroupsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetGroup {
        HrisGetGroupResponse getGroup(
            HrisGetGroupRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetDepartmentGroup {
        HrisGetDepartmentGroupResponse getDepartmentGroup(
            HrisGetDepartmentGroupRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetCostCenterGroup {
        HrisGetCostCenterGroupResponse getCostCenterGroup(
            HrisGetCostCenterGroupRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetTeamGroup {
        HrisGetTeamGroupResponse getTeamGroup(
            HrisGetTeamGroupRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListJobs {
        HrisListJobsResponse listJobs(
            HrisListJobsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetJob {
        HrisGetJobResponse getJob(
            HrisGetJobRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListEmployeeSkills {
        HrisListEmployeeSkillsResponse listEmployeeSkills(
            HrisListEmployeeSkillsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisCreateEmployeeSkill {
        HrisCreateEmployeeSkillResponse createEmployeeSkill(
            String xAccountId,
            String id,
            EntitySkillsCreateRequestDto entitySkillsCreateRequestDto,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetEmployeeSkill {
        HrisGetEmployeeSkillResponse getEmployeeSkill(
            HrisGetEmployeeSkillRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisListTimeOffPolicies {
        HrisListTimeOffPoliciesResponse listTimeOffPolicies(
            HrisListTimeOffPoliciesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallHrisGetTimeOffPolicy {
        HrisGetTimeOffPolicyResponse getTimeOffPolicy(
            HrisGetTimeOffPolicyRequest request,
            Optional<Options> options) throws Exception;
    }


}
