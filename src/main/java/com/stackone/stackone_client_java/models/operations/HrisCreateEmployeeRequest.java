/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.stackone.stackone_client_java.models.components.HrisCreateEmployeeRequestDto;
import com.stackone.stackone_client_java.utils.SpeakeasyMetadata;
import com.stackone.stackone_client_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class HrisCreateEmployeeRequest {

    /**
     * The account identifier
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-account-id")
    private String xAccountId;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto;

    @JsonCreator
    public HrisCreateEmployeeRequest(
            String xAccountId,
            HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        Utils.checkNotNull(hrisCreateEmployeeRequestDto, "hrisCreateEmployeeRequestDto");
        this.xAccountId = xAccountId;
        this.hrisCreateEmployeeRequestDto = hrisCreateEmployeeRequestDto;
    }

    /**
     * The account identifier
     */
    @JsonIgnore
    public String xAccountId() {
        return xAccountId;
    }

    @JsonIgnore
    public HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto() {
        return hrisCreateEmployeeRequestDto;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The account identifier
     */
    public HrisCreateEmployeeRequest withXAccountId(String xAccountId) {
        Utils.checkNotNull(xAccountId, "xAccountId");
        this.xAccountId = xAccountId;
        return this;
    }

    public HrisCreateEmployeeRequest withHrisCreateEmployeeRequestDto(HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto) {
        Utils.checkNotNull(hrisCreateEmployeeRequestDto, "hrisCreateEmployeeRequestDto");
        this.hrisCreateEmployeeRequestDto = hrisCreateEmployeeRequestDto;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HrisCreateEmployeeRequest other = (HrisCreateEmployeeRequest) o;
        return 
            Objects.deepEquals(this.xAccountId, other.xAccountId) &&
            Objects.deepEquals(this.hrisCreateEmployeeRequestDto, other.hrisCreateEmployeeRequestDto);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            xAccountId,
            hrisCreateEmployeeRequestDto);
    }
    
    @Override
    public String toString() {
        return Utils.toString(HrisCreateEmployeeRequest.class,
                "xAccountId", xAccountId,
                "hrisCreateEmployeeRequestDto", hrisCreateEmployeeRequestDto);
    }
    
    public final static class Builder {
 
        private String xAccountId;
 
        private HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The account identifier
         */
        public Builder xAccountId(String xAccountId) {
            Utils.checkNotNull(xAccountId, "xAccountId");
            this.xAccountId = xAccountId;
            return this;
        }

        public Builder hrisCreateEmployeeRequestDto(HrisCreateEmployeeRequestDto hrisCreateEmployeeRequestDto) {
            Utils.checkNotNull(hrisCreateEmployeeRequestDto, "hrisCreateEmployeeRequestDto");
            this.hrisCreateEmployeeRequestDto = hrisCreateEmployeeRequestDto;
            return this;
        }
        
        public HrisCreateEmployeeRequest build() {
            return new HrisCreateEmployeeRequest(
                xAccountId,
                hrisCreateEmployeeRequestDto);
        }
    }
}
