/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java;

import static com.stackone.stackone_client_java.operations.Operations.RequestOperation;

import com.stackone.stackone_client_java.models.components.AtsCreateApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateBackgroundCheckOrderRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateBackgroundCheckPackagesRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateCandidateRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateCandidatesAssessmentsRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateJobRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateNotesRequestDto;
import com.stackone.stackone_client_java.models.components.AtsCreateOfferRequestDto;
import com.stackone.stackone_client_java.models.components.AtsMoveApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsRejectApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateApplicationRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateBackgroundCheckPackagesRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateBackgroundCheckResultRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateCandidateRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateCandidatesAssessmentsResultsRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateJobRequestDto;
import com.stackone.stackone_client_java.models.components.AtsUpdateNotesRequestDto;
import com.stackone.stackone_client_java.models.components.UnifiedUploadRequestDto;
import com.stackone.stackone_client_java.models.operations.AtsCreateApplicationNoteRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateApplicationNoteRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateApplicationNoteResponse;
import com.stackone.stackone_client_java.models.operations.AtsCreateApplicationRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateApplicationRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateApplicationResponse;
import com.stackone.stackone_client_java.models.operations.AtsCreateBackgroundCheckPackageRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateBackgroundCheckPackageRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateBackgroundCheckPackageResponse;
import com.stackone.stackone_client_java.models.operations.AtsCreateCandidateNoteRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateCandidateNoteRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateCandidateNoteResponse;
import com.stackone.stackone_client_java.models.operations.AtsCreateCandidateRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateCandidateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateCandidateResponse;
import com.stackone.stackone_client_java.models.operations.AtsCreateJobRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateJobRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateJobResponse;
import com.stackone.stackone_client_java.models.operations.AtsCreateOfferRequest;
import com.stackone.stackone_client_java.models.operations.AtsCreateOfferRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsCreateOfferResponse;
import com.stackone.stackone_client_java.models.operations.AtsDeleteBackgroundCheckPackageRequest;
import com.stackone.stackone_client_java.models.operations.AtsDeleteBackgroundCheckPackageRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsDeleteBackgroundCheckPackageResponse;
import com.stackone.stackone_client_java.models.operations.AtsDownloadApplicationDocumentRequest;
import com.stackone.stackone_client_java.models.operations.AtsDownloadApplicationDocumentRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsDownloadApplicationDocumentResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationCustomFieldDefinitionRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationCustomFieldDefinitionRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationCustomFieldDefinitionResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationDocumentRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationDocumentRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationDocumentResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationNoteRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationNoteRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationNoteResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationOfferRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationOfferRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationOfferResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationScheduledInterviewRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationScheduledInterviewRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationScheduledInterviewResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationScorecardRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationScorecardRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetApplicationScorecardResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetAssessmentsPackageRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetAssessmentsPackageRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetAssessmentsPackageResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetAssessmentsResultRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetAssessmentsResultRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetAssessmentsResultResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetBackgroundCheckPackageRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetBackgroundCheckPackageRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetBackgroundCheckPackageResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetBackgroundCheckResultRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetBackgroundCheckResultRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetBackgroundCheckResultResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateCustomFieldDefinitionRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateCustomFieldDefinitionRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateCustomFieldDefinitionResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateNoteRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateNoteRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateNoteResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetCandidateResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetDepartmentRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetDepartmentRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetDepartmentResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetInterviewRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetInterviewRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetInterviewResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetInterviewStageRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetInterviewStageRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetInterviewStageResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetJobCustomFieldDefinitionRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetJobCustomFieldDefinitionRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetJobCustomFieldDefinitionResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetJobPostingRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetJobPostingRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetJobPostingResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetJobRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetJobRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetJobResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetListRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetListRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetListResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetLocationRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetLocationRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetLocationResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetOfferRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetOfferRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetOfferResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetRejectedReasonRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetRejectedReasonRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetRejectedReasonResponse;
import com.stackone.stackone_client_java.models.operations.AtsGetUserRequest;
import com.stackone.stackone_client_java.models.operations.AtsGetUserRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsGetUserResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationChangesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationChangesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationChangesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationCustomFieldDefinitionsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationCustomFieldDefinitionsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationCustomFieldDefinitionsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationDocumentsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationDocumentsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationDocumentsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationNotesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationNotesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationNotesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationScorecardsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationScorecardsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationScorecardsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsOffersRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsOffersRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsOffersResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsScheduledInterviewsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsScheduledInterviewsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListApplicationsScheduledInterviewsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListAssessmentsPackagesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListAssessmentsPackagesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListAssessmentsPackagesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListBackgroundCheckPackagesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListBackgroundCheckPackagesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListBackgroundCheckPackagesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListCandidateCustomFieldDefinitionsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListCandidateCustomFieldDefinitionsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListCandidateCustomFieldDefinitionsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListCandidateNotesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListCandidateNotesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListCandidateNotesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListCandidatesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListCandidatesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListCandidatesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListDepartmentsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListDepartmentsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListDepartmentsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListInterviewStagesRequest;
import com.stackone.stackone_client_java.models.operations.AtsListInterviewStagesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListInterviewStagesResponse;
import com.stackone.stackone_client_java.models.operations.AtsListInterviewsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListInterviewsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListInterviewsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListJobCustomFieldDefinitionsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListJobCustomFieldDefinitionsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListJobCustomFieldDefinitionsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListJobPostingsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListJobPostingsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListJobPostingsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListJobsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListJobsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListJobsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListListsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListListsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListListsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListLocationsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListLocationsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListLocationsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListOffersRequest;
import com.stackone.stackone_client_java.models.operations.AtsListOffersRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListOffersResponse;
import com.stackone.stackone_client_java.models.operations.AtsListRejectedReasonsRequest;
import com.stackone.stackone_client_java.models.operations.AtsListRejectedReasonsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListRejectedReasonsResponse;
import com.stackone.stackone_client_java.models.operations.AtsListUsersRequest;
import com.stackone.stackone_client_java.models.operations.AtsListUsersRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsListUsersResponse;
import com.stackone.stackone_client_java.models.operations.AtsMoveApplicationRequest;
import com.stackone.stackone_client_java.models.operations.AtsMoveApplicationRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsMoveApplicationResponse;
import com.stackone.stackone_client_java.models.operations.AtsOrderAssessmentsRequestRequest;
import com.stackone.stackone_client_java.models.operations.AtsOrderAssessmentsRequestRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsOrderAssessmentsRequestResponse;
import com.stackone.stackone_client_java.models.operations.AtsOrderBackgroundCheckRequestRequest;
import com.stackone.stackone_client_java.models.operations.AtsOrderBackgroundCheckRequestRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsOrderBackgroundCheckRequestResponse;
import com.stackone.stackone_client_java.models.operations.AtsRejectApplicationRequest;
import com.stackone.stackone_client_java.models.operations.AtsRejectApplicationRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsRejectApplicationResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateApplicationNoteRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateApplicationNoteRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateApplicationNoteResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateApplicationRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateApplicationRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateApplicationResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateAssessmentsResultRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateAssessmentsResultRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateAssessmentsResultResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateBackgroundCheckPackageRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateBackgroundCheckPackageRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateBackgroundCheckPackageResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateBackgroundCheckResultRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateBackgroundCheckResultRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateBackgroundCheckResultResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateCandidateRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateCandidateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateCandidateResponse;
import com.stackone.stackone_client_java.models.operations.AtsUpdateJobRequest;
import com.stackone.stackone_client_java.models.operations.AtsUpdateJobRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUpdateJobResponse;
import com.stackone.stackone_client_java.models.operations.AtsUploadApplicationDocumentRequest;
import com.stackone.stackone_client_java.models.operations.AtsUploadApplicationDocumentRequestBuilder;
import com.stackone.stackone_client_java.models.operations.AtsUploadApplicationDocumentResponse;
import com.stackone.stackone_client_java.operations.AtsCreateApplicationNoteOperation;
import com.stackone.stackone_client_java.operations.AtsCreateApplicationOperation;
import com.stackone.stackone_client_java.operations.AtsCreateBackgroundCheckPackageOperation;
import com.stackone.stackone_client_java.operations.AtsCreateCandidateNoteOperation;
import com.stackone.stackone_client_java.operations.AtsCreateCandidateOperation;
import com.stackone.stackone_client_java.operations.AtsCreateJobOperation;
import com.stackone.stackone_client_java.operations.AtsCreateOfferOperation;
import com.stackone.stackone_client_java.operations.AtsDeleteBackgroundCheckPackageOperation;
import com.stackone.stackone_client_java.operations.AtsDownloadApplicationDocumentOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationCustomFieldDefinitionOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationDocumentOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationNoteOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationOfferOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationScheduledInterviewOperation;
import com.stackone.stackone_client_java.operations.AtsGetApplicationScorecardOperation;
import com.stackone.stackone_client_java.operations.AtsGetAssessmentsPackageOperation;
import com.stackone.stackone_client_java.operations.AtsGetAssessmentsResultOperation;
import com.stackone.stackone_client_java.operations.AtsGetBackgroundCheckPackageOperation;
import com.stackone.stackone_client_java.operations.AtsGetBackgroundCheckResultOperation;
import com.stackone.stackone_client_java.operations.AtsGetCandidateCustomFieldDefinitionOperation;
import com.stackone.stackone_client_java.operations.AtsGetCandidateNoteOperation;
import com.stackone.stackone_client_java.operations.AtsGetCandidateOperation;
import com.stackone.stackone_client_java.operations.AtsGetDepartmentOperation;
import com.stackone.stackone_client_java.operations.AtsGetInterviewOperation;
import com.stackone.stackone_client_java.operations.AtsGetInterviewStageOperation;
import com.stackone.stackone_client_java.operations.AtsGetJobCustomFieldDefinitionOperation;
import com.stackone.stackone_client_java.operations.AtsGetJobOperation;
import com.stackone.stackone_client_java.operations.AtsGetJobPostingOperation;
import com.stackone.stackone_client_java.operations.AtsGetListOperation;
import com.stackone.stackone_client_java.operations.AtsGetLocationOperation;
import com.stackone.stackone_client_java.operations.AtsGetOfferOperation;
import com.stackone.stackone_client_java.operations.AtsGetRejectedReasonOperation;
import com.stackone.stackone_client_java.operations.AtsGetUserOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationChangesOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationCustomFieldDefinitionsOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationDocumentsOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationNotesOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationScorecardsOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationsOffersOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationsOperation;
import com.stackone.stackone_client_java.operations.AtsListApplicationsScheduledInterviewsOperation;
import com.stackone.stackone_client_java.operations.AtsListAssessmentsPackagesOperation;
import com.stackone.stackone_client_java.operations.AtsListBackgroundCheckPackagesOperation;
import com.stackone.stackone_client_java.operations.AtsListCandidateCustomFieldDefinitionsOperation;
import com.stackone.stackone_client_java.operations.AtsListCandidateNotesOperation;
import com.stackone.stackone_client_java.operations.AtsListCandidatesOperation;
import com.stackone.stackone_client_java.operations.AtsListDepartmentsOperation;
import com.stackone.stackone_client_java.operations.AtsListInterviewStagesOperation;
import com.stackone.stackone_client_java.operations.AtsListInterviewsOperation;
import com.stackone.stackone_client_java.operations.AtsListJobCustomFieldDefinitionsOperation;
import com.stackone.stackone_client_java.operations.AtsListJobPostingsOperation;
import com.stackone.stackone_client_java.operations.AtsListJobsOperation;
import com.stackone.stackone_client_java.operations.AtsListListsOperation;
import com.stackone.stackone_client_java.operations.AtsListLocationsOperation;
import com.stackone.stackone_client_java.operations.AtsListOffersOperation;
import com.stackone.stackone_client_java.operations.AtsListRejectedReasonsOperation;
import com.stackone.stackone_client_java.operations.AtsListUsersOperation;
import com.stackone.stackone_client_java.operations.AtsMoveApplicationOperation;
import com.stackone.stackone_client_java.operations.AtsOrderAssessmentsRequestOperation;
import com.stackone.stackone_client_java.operations.AtsOrderBackgroundCheckRequestOperation;
import com.stackone.stackone_client_java.operations.AtsRejectApplicationOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateApplicationNoteOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateApplicationOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateAssessmentsResultOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateBackgroundCheckPackageOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateBackgroundCheckResultOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateCandidateOperation;
import com.stackone.stackone_client_java.operations.AtsUpdateJobOperation;
import com.stackone.stackone_client_java.operations.AtsUploadApplicationDocumentOperation;
import com.stackone.stackone_client_java.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class Ats {
    private final SDKConfiguration sdkConfiguration;

    Ats(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List Applications
     * 
     * @return The call builder
     */
    public AtsListApplicationsRequestBuilder listApplications() {
        return new AtsListApplicationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationsResponse listApplications(AtsListApplicationsRequest request) throws Exception {
        return listApplications(request, Optional.empty());
    }

    /**
     * List Applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationsResponse listApplications(
            AtsListApplicationsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationsRequest, AtsListApplicationsResponse> operation
              = new AtsListApplicationsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Application
     * 
     * @return The call builder
     */
    public AtsCreateApplicationRequestBuilder createApplication() {
        return new AtsCreateApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Application
     * 
     * @param xAccountId The account identifier
     * @param atsCreateApplicationRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateApplicationResponse createApplication(
            String xAccountId,
            AtsCreateApplicationRequestDto atsCreateApplicationRequestDto) throws Exception {
        return createApplication(xAccountId, atsCreateApplicationRequestDto, Optional.empty());
    }

    /**
     * Create Application
     * 
     * @param xAccountId The account identifier
     * @param atsCreateApplicationRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateApplicationResponse createApplication(
            String xAccountId,
            AtsCreateApplicationRequestDto atsCreateApplicationRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateApplicationRequest request =
            AtsCreateApplicationRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateApplicationRequestDto(atsCreateApplicationRequestDto)
                .build();
        RequestOperation<AtsCreateApplicationRequest, AtsCreateApplicationResponse> operation
              = new AtsCreateApplicationOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Application
     * 
     * @return The call builder
     */
    public AtsGetApplicationRequestBuilder getApplication() {
        return new AtsGetApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationResponse getApplication(AtsGetApplicationRequest request) throws Exception {
        return getApplication(request, Optional.empty());
    }

    /**
     * Get Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationResponse getApplication(
            AtsGetApplicationRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationRequest, AtsGetApplicationResponse> operation
              = new AtsGetApplicationOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an Application
     * 
     * @return The call builder
     */
    public AtsUpdateApplicationRequestBuilder updateApplication() {
        return new AtsUpdateApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an Application
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateApplicationRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateApplicationResponse updateApplication(
            String xAccountId,
            String id,
            AtsUpdateApplicationRequestDto atsUpdateApplicationRequestDto) throws Exception {
        return updateApplication(xAccountId, id, atsUpdateApplicationRequestDto, Optional.empty());
    }

    /**
     * Update an Application
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateApplicationRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateApplicationResponse updateApplication(
            String xAccountId,
            String id,
            AtsUpdateApplicationRequestDto atsUpdateApplicationRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateApplicationRequest request =
            AtsUpdateApplicationRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsUpdateApplicationRequestDto(atsUpdateApplicationRequestDto)
                .build();
        RequestOperation<AtsUpdateApplicationRequest, AtsUpdateApplicationResponse> operation
              = new AtsUpdateApplicationOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Application Offers
     * 
     * @return The call builder
     */
    public AtsListApplicationsOffersRequestBuilder listApplicationsOffers() {
        return new AtsListApplicationsOffersRequestBuilder(sdkConfiguration);
    }

    /**
     * List Application Offers
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationsOffersResponse listApplicationsOffers(AtsListApplicationsOffersRequest request) throws Exception {
        return listApplicationsOffers(request, Optional.empty());
    }

    /**
     * List Application Offers
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationsOffersResponse listApplicationsOffers(
            AtsListApplicationsOffersRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationsOffersRequest, AtsListApplicationsOffersResponse> operation
              = new AtsListApplicationsOffersOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Move Application
     * 
     * @return The call builder
     */
    public AtsMoveApplicationRequestBuilder moveApplication() {
        return new AtsMoveApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Move Application
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsMoveApplicationRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsMoveApplicationResponse moveApplication(
            String xAccountId,
            String id,
            AtsMoveApplicationRequestDto atsMoveApplicationRequestDto) throws Exception {
        return moveApplication(xAccountId, id, atsMoveApplicationRequestDto, Optional.empty());
    }

    /**
     * Move Application
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsMoveApplicationRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsMoveApplicationResponse moveApplication(
            String xAccountId,
            String id,
            AtsMoveApplicationRequestDto atsMoveApplicationRequestDto,
            Optional<Options> options) throws Exception {
        AtsMoveApplicationRequest request =
            AtsMoveApplicationRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsMoveApplicationRequestDto(atsMoveApplicationRequestDto)
                .build();
        RequestOperation<AtsMoveApplicationRequest, AtsMoveApplicationResponse> operation
              = new AtsMoveApplicationOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Reject Application
     * 
     * @return The call builder
     */
    public AtsRejectApplicationRequestBuilder rejectApplication() {
        return new AtsRejectApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Reject Application
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsRejectApplicationRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsRejectApplicationResponse rejectApplication(
            String xAccountId,
            String id,
            AtsRejectApplicationRequestDto atsRejectApplicationRequestDto) throws Exception {
        return rejectApplication(xAccountId, id, atsRejectApplicationRequestDto, Optional.empty());
    }

    /**
     * Reject Application
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsRejectApplicationRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsRejectApplicationResponse rejectApplication(
            String xAccountId,
            String id,
            AtsRejectApplicationRequestDto atsRejectApplicationRequestDto,
            Optional<Options> options) throws Exception {
        AtsRejectApplicationRequest request =
            AtsRejectApplicationRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsRejectApplicationRequestDto(atsRejectApplicationRequestDto)
                .build();
        RequestOperation<AtsRejectApplicationRequest, AtsRejectApplicationResponse> operation
              = new AtsRejectApplicationOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Application Offer
     * 
     * @return The call builder
     */
    public AtsGetApplicationOfferRequestBuilder getApplicationOffer() {
        return new AtsGetApplicationOfferRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application Offer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationOfferResponse getApplicationOffer(AtsGetApplicationOfferRequest request) throws Exception {
        return getApplicationOffer(request, Optional.empty());
    }

    /**
     * Get Application Offer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationOfferResponse getApplicationOffer(
            AtsGetApplicationOfferRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationOfferRequest, AtsGetApplicationOfferResponse> operation
              = new AtsGetApplicationOfferOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Application Scorecards
     * 
     * @return The call builder
     */
    public AtsListApplicationScorecardsRequestBuilder listApplicationScorecards() {
        return new AtsListApplicationScorecardsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Application Scorecards
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationScorecardsResponse listApplicationScorecards(AtsListApplicationScorecardsRequest request) throws Exception {
        return listApplicationScorecards(request, Optional.empty());
    }

    /**
     * List Application Scorecards
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationScorecardsResponse listApplicationScorecards(
            AtsListApplicationScorecardsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationScorecardsRequest, AtsListApplicationScorecardsResponse> operation
              = new AtsListApplicationScorecardsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Application Scorecard
     * 
     * @return The call builder
     */
    public AtsGetApplicationScorecardRequestBuilder getApplicationScorecard() {
        return new AtsGetApplicationScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application Scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationScorecardResponse getApplicationScorecard(AtsGetApplicationScorecardRequest request) throws Exception {
        return getApplicationScorecard(request, Optional.empty());
    }

    /**
     * Get Application Scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationScorecardResponse getApplicationScorecard(
            AtsGetApplicationScorecardRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationScorecardRequest, AtsGetApplicationScorecardResponse> operation
              = new AtsGetApplicationScorecardOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Application Changes
     * 
     * @return The call builder
     */
    public AtsListApplicationChangesRequestBuilder listApplicationChanges() {
        return new AtsListApplicationChangesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Application Changes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationChangesResponse listApplicationChanges(AtsListApplicationChangesRequest request) throws Exception {
        return listApplicationChanges(request, Optional.empty());
    }

    /**
     * List Application Changes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationChangesResponse listApplicationChanges(
            AtsListApplicationChangesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationChangesRequest, AtsListApplicationChangesResponse> operation
              = new AtsListApplicationChangesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Application Notes
     * 
     * @return The call builder
     */
    public AtsListApplicationNotesRequestBuilder listApplicationNotes() {
        return new AtsListApplicationNotesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Application Notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationNotesResponse listApplicationNotes(AtsListApplicationNotesRequest request) throws Exception {
        return listApplicationNotes(request, Optional.empty());
    }

    /**
     * List Application Notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationNotesResponse listApplicationNotes(
            AtsListApplicationNotesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationNotesRequest, AtsListApplicationNotesResponse> operation
              = new AtsListApplicationNotesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Application Note
     * 
     * @return The call builder
     */
    public AtsCreateApplicationNoteRequestBuilder createApplicationNote() {
        return new AtsCreateApplicationNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Application Note
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsCreateNotesRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateApplicationNoteResponse createApplicationNote(
            String xAccountId,
            String id,
            AtsCreateNotesRequestDto atsCreateNotesRequestDto) throws Exception {
        return createApplicationNote(xAccountId, id, atsCreateNotesRequestDto, Optional.empty());
    }

    /**
     * Create Application Note
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsCreateNotesRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateApplicationNoteResponse createApplicationNote(
            String xAccountId,
            String id,
            AtsCreateNotesRequestDto atsCreateNotesRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateApplicationNoteRequest request =
            AtsCreateApplicationNoteRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsCreateNotesRequestDto(atsCreateNotesRequestDto)
                .build();
        RequestOperation<AtsCreateApplicationNoteRequest, AtsCreateApplicationNoteResponse> operation
              = new AtsCreateApplicationNoteOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Application Note
     * 
     * @return The call builder
     */
    public AtsGetApplicationNoteRequestBuilder getApplicationNote() {
        return new AtsGetApplicationNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationNoteResponse getApplicationNote(AtsGetApplicationNoteRequest request) throws Exception {
        return getApplicationNote(request, Optional.empty());
    }

    /**
     * Get Application Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationNoteResponse getApplicationNote(
            AtsGetApplicationNoteRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationNoteRequest, AtsGetApplicationNoteResponse> operation
              = new AtsGetApplicationNoteOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an Application Note
     * 
     * @return The call builder
     */
    public AtsUpdateApplicationNoteRequestBuilder updateApplicationNote() {
        return new AtsUpdateApplicationNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an Application Note
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param subResourceId 
     * @param atsUpdateNotesRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateApplicationNoteResponse updateApplicationNote(
            String xAccountId,
            String id,
            String subResourceId,
            AtsUpdateNotesRequestDto atsUpdateNotesRequestDto) throws Exception {
        return updateApplicationNote(xAccountId, id, subResourceId, atsUpdateNotesRequestDto, Optional.empty());
    }

    /**
     * Update an Application Note
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param subResourceId 
     * @param atsUpdateNotesRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateApplicationNoteResponse updateApplicationNote(
            String xAccountId,
            String id,
            String subResourceId,
            AtsUpdateNotesRequestDto atsUpdateNotesRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateApplicationNoteRequest request =
            AtsUpdateApplicationNoteRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .subResourceId(subResourceId)
                .atsUpdateNotesRequestDto(atsUpdateNotesRequestDto)
                .build();
        RequestOperation<AtsUpdateApplicationNoteRequest, AtsUpdateApplicationNoteResponse> operation
              = new AtsUpdateApplicationNoteOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Applications scheduled interviews
     * 
     * @return The call builder
     */
    public AtsListApplicationsScheduledInterviewsRequestBuilder listApplicationsScheduledInterviews() {
        return new AtsListApplicationsScheduledInterviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Applications scheduled interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationsScheduledInterviewsResponse listApplicationsScheduledInterviews(AtsListApplicationsScheduledInterviewsRequest request) throws Exception {
        return listApplicationsScheduledInterviews(request, Optional.empty());
    }

    /**
     * List Applications scheduled interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationsScheduledInterviewsResponse listApplicationsScheduledInterviews(
            AtsListApplicationsScheduledInterviewsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationsScheduledInterviewsRequest, AtsListApplicationsScheduledInterviewsResponse> operation
              = new AtsListApplicationsScheduledInterviewsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Applications scheduled interview
     * 
     * @return The call builder
     */
    public AtsGetApplicationScheduledInterviewRequestBuilder getApplicationScheduledInterview() {
        return new AtsGetApplicationScheduledInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Applications scheduled interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationScheduledInterviewResponse getApplicationScheduledInterview(AtsGetApplicationScheduledInterviewRequest request) throws Exception {
        return getApplicationScheduledInterview(request, Optional.empty());
    }

    /**
     * Get Applications scheduled interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationScheduledInterviewResponse getApplicationScheduledInterview(
            AtsGetApplicationScheduledInterviewRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationScheduledInterviewRequest, AtsGetApplicationScheduledInterviewResponse> operation
              = new AtsGetApplicationScheduledInterviewOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Upload Application Document
     * 
     * @return The call builder
     */
    public AtsUploadApplicationDocumentRequestBuilder uploadApplicationDocument() {
        return new AtsUploadApplicationDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Upload Application Document
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param unifiedUploadRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUploadApplicationDocumentResponse uploadApplicationDocument(
            String xAccountId,
            String id,
            UnifiedUploadRequestDto unifiedUploadRequestDto) throws Exception {
        return uploadApplicationDocument(xAccountId, id, unifiedUploadRequestDto, Optional.empty());
    }

    /**
     * Upload Application Document
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param unifiedUploadRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUploadApplicationDocumentResponse uploadApplicationDocument(
            String xAccountId,
            String id,
            UnifiedUploadRequestDto unifiedUploadRequestDto,
            Optional<Options> options) throws Exception {
        AtsUploadApplicationDocumentRequest request =
            AtsUploadApplicationDocumentRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .unifiedUploadRequestDto(unifiedUploadRequestDto)
                .build();
        RequestOperation<AtsUploadApplicationDocumentRequest, AtsUploadApplicationDocumentResponse> operation
              = new AtsUploadApplicationDocumentOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Download Application Document
     * 
     * @return The call builder
     */
    public AtsDownloadApplicationDocumentRequestBuilder downloadApplicationDocument() {
        return new AtsDownloadApplicationDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Download Application Document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsDownloadApplicationDocumentResponse downloadApplicationDocument(AtsDownloadApplicationDocumentRequest request) throws Exception {
        return downloadApplicationDocument(request, Optional.empty());
    }

    /**
     * Download Application Document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsDownloadApplicationDocumentResponse downloadApplicationDocument(
            AtsDownloadApplicationDocumentRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsDownloadApplicationDocumentRequest, AtsDownloadApplicationDocumentResponse> operation
              = new AtsDownloadApplicationDocumentOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Application Documents
     * 
     * @return The call builder
     */
    public AtsListApplicationDocumentsRequestBuilder listApplicationDocuments() {
        return new AtsListApplicationDocumentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Application Documents
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationDocumentsResponse listApplicationDocuments(AtsListApplicationDocumentsRequest request) throws Exception {
        return listApplicationDocuments(request, Optional.empty());
    }

    /**
     * List Application Documents
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationDocumentsResponse listApplicationDocuments(
            AtsListApplicationDocumentsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationDocumentsRequest, AtsListApplicationDocumentsResponse> operation
              = new AtsListApplicationDocumentsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Application Document
     * 
     * @return The call builder
     */
    public AtsGetApplicationDocumentRequestBuilder getApplicationDocument() {
        return new AtsGetApplicationDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application Document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationDocumentResponse getApplicationDocument(AtsGetApplicationDocumentRequest request) throws Exception {
        return getApplicationDocument(request, Optional.empty());
    }

    /**
     * Get Application Document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationDocumentResponse getApplicationDocument(
            AtsGetApplicationDocumentRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationDocumentRequest, AtsGetApplicationDocumentResponse> operation
              = new AtsGetApplicationDocumentOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Candidates
     * 
     * @return The call builder
     */
    public AtsListCandidatesRequestBuilder listCandidates() {
        return new AtsListCandidatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Candidates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListCandidatesResponse listCandidates(AtsListCandidatesRequest request) throws Exception {
        return listCandidates(request, Optional.empty());
    }

    /**
     * List Candidates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListCandidatesResponse listCandidates(
            AtsListCandidatesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListCandidatesRequest, AtsListCandidatesResponse> operation
              = new AtsListCandidatesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Candidate
     * 
     * @return The call builder
     */
    public AtsCreateCandidateRequestBuilder createCandidate() {
        return new AtsCreateCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Candidate
     * 
     * @param xAccountId The account identifier
     * @param atsCreateCandidateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateCandidateResponse createCandidate(
            String xAccountId,
            AtsCreateCandidateRequestDto atsCreateCandidateRequestDto) throws Exception {
        return createCandidate(xAccountId, atsCreateCandidateRequestDto, Optional.empty());
    }

    /**
     * Create Candidate
     * 
     * @param xAccountId The account identifier
     * @param atsCreateCandidateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateCandidateResponse createCandidate(
            String xAccountId,
            AtsCreateCandidateRequestDto atsCreateCandidateRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateCandidateRequest request =
            AtsCreateCandidateRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateCandidateRequestDto(atsCreateCandidateRequestDto)
                .build();
        RequestOperation<AtsCreateCandidateRequest, AtsCreateCandidateResponse> operation
              = new AtsCreateCandidateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Candidate
     * 
     * @return The call builder
     */
    public AtsGetCandidateRequestBuilder getCandidate() {
        return new AtsGetCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetCandidateResponse getCandidate(AtsGetCandidateRequest request) throws Exception {
        return getCandidate(request, Optional.empty());
    }

    /**
     * Get Candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetCandidateResponse getCandidate(
            AtsGetCandidateRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetCandidateRequest, AtsGetCandidateResponse> operation
              = new AtsGetCandidateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Candidate
     * 
     * @return The call builder
     */
    public AtsUpdateCandidateRequestBuilder updateCandidate() {
        return new AtsUpdateCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Candidate
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateCandidateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateCandidateResponse updateCandidate(
            String xAccountId,
            String id,
            AtsUpdateCandidateRequestDto atsUpdateCandidateRequestDto) throws Exception {
        return updateCandidate(xAccountId, id, atsUpdateCandidateRequestDto, Optional.empty());
    }

    /**
     * Update Candidate
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateCandidateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateCandidateResponse updateCandidate(
            String xAccountId,
            String id,
            AtsUpdateCandidateRequestDto atsUpdateCandidateRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateCandidateRequest request =
            AtsUpdateCandidateRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsUpdateCandidateRequestDto(atsUpdateCandidateRequestDto)
                .build();
        RequestOperation<AtsUpdateCandidateRequest, AtsUpdateCandidateResponse> operation
              = new AtsUpdateCandidateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Candidate Notes
     * 
     * @return The call builder
     */
    public AtsListCandidateNotesRequestBuilder listCandidateNotes() {
        return new AtsListCandidateNotesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Candidate Notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListCandidateNotesResponse listCandidateNotes(AtsListCandidateNotesRequest request) throws Exception {
        return listCandidateNotes(request, Optional.empty());
    }

    /**
     * List Candidate Notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListCandidateNotesResponse listCandidateNotes(
            AtsListCandidateNotesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListCandidateNotesRequest, AtsListCandidateNotesResponse> operation
              = new AtsListCandidateNotesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Candidate Note
     * 
     * @return The call builder
     */
    public AtsCreateCandidateNoteRequestBuilder createCandidateNote() {
        return new AtsCreateCandidateNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Candidate Note
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsCreateNotesRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateCandidateNoteResponse createCandidateNote(
            String xAccountId,
            String id,
            AtsCreateNotesRequestDto atsCreateNotesRequestDto) throws Exception {
        return createCandidateNote(xAccountId, id, atsCreateNotesRequestDto, Optional.empty());
    }

    /**
     * Create Candidate Note
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsCreateNotesRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateCandidateNoteResponse createCandidateNote(
            String xAccountId,
            String id,
            AtsCreateNotesRequestDto atsCreateNotesRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateCandidateNoteRequest request =
            AtsCreateCandidateNoteRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsCreateNotesRequestDto(atsCreateNotesRequestDto)
                .build();
        RequestOperation<AtsCreateCandidateNoteRequest, AtsCreateCandidateNoteResponse> operation
              = new AtsCreateCandidateNoteOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Candidate Note
     * 
     * @return The call builder
     */
    public AtsGetCandidateNoteRequestBuilder getCandidateNote() {
        return new AtsGetCandidateNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Candidate Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetCandidateNoteResponse getCandidateNote(AtsGetCandidateNoteRequest request) throws Exception {
        return getCandidateNote(request, Optional.empty());
    }

    /**
     * Get Candidate Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetCandidateNoteResponse getCandidateNote(
            AtsGetCandidateNoteRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetCandidateNoteRequest, AtsGetCandidateNoteResponse> operation
              = new AtsGetCandidateNoteOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Application Custom Field Definitions
     * 
     * @return The call builder
     */
    public AtsListApplicationCustomFieldDefinitionsRequestBuilder listApplicationCustomFieldDefinitions() {
        return new AtsListApplicationCustomFieldDefinitionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Application Custom Field Definitions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationCustomFieldDefinitionsResponse listApplicationCustomFieldDefinitions(AtsListApplicationCustomFieldDefinitionsRequest request) throws Exception {
        return listApplicationCustomFieldDefinitions(request, Optional.empty());
    }

    /**
     * List Application Custom Field Definitions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListApplicationCustomFieldDefinitionsResponse listApplicationCustomFieldDefinitions(
            AtsListApplicationCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListApplicationCustomFieldDefinitionsRequest, AtsListApplicationCustomFieldDefinitionsResponse> operation
              = new AtsListApplicationCustomFieldDefinitionsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Application Custom Field Definition
     * 
     * @return The call builder
     */
    public AtsGetApplicationCustomFieldDefinitionRequestBuilder getApplicationCustomFieldDefinition() {
        return new AtsGetApplicationCustomFieldDefinitionRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application Custom Field Definition
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationCustomFieldDefinitionResponse getApplicationCustomFieldDefinition(AtsGetApplicationCustomFieldDefinitionRequest request) throws Exception {
        return getApplicationCustomFieldDefinition(request, Optional.empty());
    }

    /**
     * Get Application Custom Field Definition
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetApplicationCustomFieldDefinitionResponse getApplicationCustomFieldDefinition(
            AtsGetApplicationCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetApplicationCustomFieldDefinitionRequest, AtsGetApplicationCustomFieldDefinitionResponse> operation
              = new AtsGetApplicationCustomFieldDefinitionOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Candidate Custom Field Definitions
     * 
     * @return The call builder
     */
    public AtsListCandidateCustomFieldDefinitionsRequestBuilder listCandidateCustomFieldDefinitions() {
        return new AtsListCandidateCustomFieldDefinitionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Candidate Custom Field Definitions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListCandidateCustomFieldDefinitionsResponse listCandidateCustomFieldDefinitions(AtsListCandidateCustomFieldDefinitionsRequest request) throws Exception {
        return listCandidateCustomFieldDefinitions(request, Optional.empty());
    }

    /**
     * List Candidate Custom Field Definitions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListCandidateCustomFieldDefinitionsResponse listCandidateCustomFieldDefinitions(
            AtsListCandidateCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListCandidateCustomFieldDefinitionsRequest, AtsListCandidateCustomFieldDefinitionsResponse> operation
              = new AtsListCandidateCustomFieldDefinitionsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Candidate Custom Field Definition
     * 
     * @return The call builder
     */
    public AtsGetCandidateCustomFieldDefinitionRequestBuilder getCandidateCustomFieldDefinition() {
        return new AtsGetCandidateCustomFieldDefinitionRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Candidate Custom Field Definition
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetCandidateCustomFieldDefinitionResponse getCandidateCustomFieldDefinition(AtsGetCandidateCustomFieldDefinitionRequest request) throws Exception {
        return getCandidateCustomFieldDefinition(request, Optional.empty());
    }

    /**
     * Get Candidate Custom Field Definition
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetCandidateCustomFieldDefinitionResponse getCandidateCustomFieldDefinition(
            AtsGetCandidateCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetCandidateCustomFieldDefinitionRequest, AtsGetCandidateCustomFieldDefinitionResponse> operation
              = new AtsGetCandidateCustomFieldDefinitionOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Job Custom Field Definitions
     * 
     * @return The call builder
     */
    public AtsListJobCustomFieldDefinitionsRequestBuilder listJobCustomFieldDefinitions() {
        return new AtsListJobCustomFieldDefinitionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Job Custom Field Definitions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListJobCustomFieldDefinitionsResponse listJobCustomFieldDefinitions(AtsListJobCustomFieldDefinitionsRequest request) throws Exception {
        return listJobCustomFieldDefinitions(request, Optional.empty());
    }

    /**
     * List Job Custom Field Definitions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListJobCustomFieldDefinitionsResponse listJobCustomFieldDefinitions(
            AtsListJobCustomFieldDefinitionsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListJobCustomFieldDefinitionsRequest, AtsListJobCustomFieldDefinitionsResponse> operation
              = new AtsListJobCustomFieldDefinitionsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Job Custom Field Definition
     * 
     * @return The call builder
     */
    public AtsGetJobCustomFieldDefinitionRequestBuilder getJobCustomFieldDefinition() {
        return new AtsGetJobCustomFieldDefinitionRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Job Custom Field Definition
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetJobCustomFieldDefinitionResponse getJobCustomFieldDefinition(AtsGetJobCustomFieldDefinitionRequest request) throws Exception {
        return getJobCustomFieldDefinition(request, Optional.empty());
    }

    /**
     * Get Job Custom Field Definition
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetJobCustomFieldDefinitionResponse getJobCustomFieldDefinition(
            AtsGetJobCustomFieldDefinitionRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetJobCustomFieldDefinitionRequest, AtsGetJobCustomFieldDefinitionResponse> operation
              = new AtsGetJobCustomFieldDefinitionOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Departments
     * 
     * @return The call builder
     */
    public AtsListDepartmentsRequestBuilder listDepartments() {
        return new AtsListDepartmentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Departments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListDepartmentsResponse listDepartments(AtsListDepartmentsRequest request) throws Exception {
        return listDepartments(request, Optional.empty());
    }

    /**
     * List Departments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListDepartmentsResponse listDepartments(
            AtsListDepartmentsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListDepartmentsRequest, AtsListDepartmentsResponse> operation
              = new AtsListDepartmentsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Department
     * 
     * @return The call builder
     */
    public AtsGetDepartmentRequestBuilder getDepartment() {
        return new AtsGetDepartmentRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Department
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetDepartmentResponse getDepartment(AtsGetDepartmentRequest request) throws Exception {
        return getDepartment(request, Optional.empty());
    }

    /**
     * Get Department
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetDepartmentResponse getDepartment(
            AtsGetDepartmentRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetDepartmentRequest, AtsGetDepartmentResponse> operation
              = new AtsGetDepartmentOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Interview Stages
     * 
     * @return The call builder
     */
    public AtsListInterviewStagesRequestBuilder listInterviewStages() {
        return new AtsListInterviewStagesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Interview Stages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListInterviewStagesResponse listInterviewStages(AtsListInterviewStagesRequest request) throws Exception {
        return listInterviewStages(request, Optional.empty());
    }

    /**
     * List Interview Stages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListInterviewStagesResponse listInterviewStages(
            AtsListInterviewStagesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListInterviewStagesRequest, AtsListInterviewStagesResponse> operation
              = new AtsListInterviewStagesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Interview Stage
     * 
     * @return The call builder
     */
    public AtsGetInterviewStageRequestBuilder getInterviewStage() {
        return new AtsGetInterviewStageRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Interview Stage
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetInterviewStageResponse getInterviewStage(AtsGetInterviewStageRequest request) throws Exception {
        return getInterviewStage(request, Optional.empty());
    }

    /**
     * Get Interview Stage
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetInterviewStageResponse getInterviewStage(
            AtsGetInterviewStageRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetInterviewStageRequest, AtsGetInterviewStageResponse> operation
              = new AtsGetInterviewStageOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Interviews
     * 
     * @return The call builder
     */
    public AtsListInterviewsRequestBuilder listInterviews() {
        return new AtsListInterviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListInterviewsResponse listInterviews(AtsListInterviewsRequest request) throws Exception {
        return listInterviews(request, Optional.empty());
    }

    /**
     * List Interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListInterviewsResponse listInterviews(
            AtsListInterviewsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListInterviewsRequest, AtsListInterviewsResponse> operation
              = new AtsListInterviewsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Interview
     * 
     * @return The call builder
     */
    public AtsGetInterviewRequestBuilder getInterview() {
        return new AtsGetInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetInterviewResponse getInterview(AtsGetInterviewRequest request) throws Exception {
        return getInterview(request, Optional.empty());
    }

    /**
     * Get Interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetInterviewResponse getInterview(
            AtsGetInterviewRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetInterviewRequest, AtsGetInterviewResponse> operation
              = new AtsGetInterviewOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Jobs
     * 
     * @return The call builder
     */
    public AtsListJobsRequestBuilder listJobs() {
        return new AtsListJobsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListJobsResponse listJobs(AtsListJobsRequest request) throws Exception {
        return listJobs(request, Optional.empty());
    }

    /**
     * List Jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListJobsResponse listJobs(
            AtsListJobsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListJobsRequest, AtsListJobsResponse> operation
              = new AtsListJobsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Job
     * 
     * @return The call builder
     */
    public AtsCreateJobRequestBuilder createJob() {
        return new AtsCreateJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Job
     * 
     * @param xAccountId The account identifier
     * @param atsCreateJobRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateJobResponse createJob(
            String xAccountId,
            AtsCreateJobRequestDto atsCreateJobRequestDto) throws Exception {
        return createJob(xAccountId, atsCreateJobRequestDto, Optional.empty());
    }

    /**
     * Create Job
     * 
     * @param xAccountId The account identifier
     * @param atsCreateJobRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateJobResponse createJob(
            String xAccountId,
            AtsCreateJobRequestDto atsCreateJobRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateJobRequest request =
            AtsCreateJobRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateJobRequestDto(atsCreateJobRequestDto)
                .build();
        RequestOperation<AtsCreateJobRequest, AtsCreateJobResponse> operation
              = new AtsCreateJobOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Job
     * 
     * @return The call builder
     */
    public AtsGetJobRequestBuilder getJob() {
        return new AtsGetJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetJobResponse getJob(AtsGetJobRequest request) throws Exception {
        return getJob(request, Optional.empty());
    }

    /**
     * Get Job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetJobResponse getJob(
            AtsGetJobRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetJobRequest, AtsGetJobResponse> operation
              = new AtsGetJobOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Job
     * 
     * @return The call builder
     */
    public AtsUpdateJobRequestBuilder updateJob() {
        return new AtsUpdateJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Job
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateJobRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateJobResponse updateJob(
            String xAccountId,
            String id,
            AtsUpdateJobRequestDto atsUpdateJobRequestDto) throws Exception {
        return updateJob(xAccountId, id, atsUpdateJobRequestDto, Optional.empty());
    }

    /**
     * Update Job
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateJobRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateJobResponse updateJob(
            String xAccountId,
            String id,
            AtsUpdateJobRequestDto atsUpdateJobRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateJobRequest request =
            AtsUpdateJobRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsUpdateJobRequestDto(atsUpdateJobRequestDto)
                .build();
        RequestOperation<AtsUpdateJobRequest, AtsUpdateJobResponse> operation
              = new AtsUpdateJobOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get all Lists
     * 
     * @return The call builder
     */
    public AtsListListsRequestBuilder listLists() {
        return new AtsListListsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get all Lists
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListListsResponse listLists(AtsListListsRequest request) throws Exception {
        return listLists(request, Optional.empty());
    }

    /**
     * Get all Lists
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListListsResponse listLists(
            AtsListListsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListListsRequest, AtsListListsResponse> operation
              = new AtsListListsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get List
     * 
     * @return The call builder
     */
    public AtsGetListRequestBuilder getList() {
        return new AtsGetListRequestBuilder(sdkConfiguration);
    }

    /**
     * Get List
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetListResponse getList(AtsGetListRequest request) throws Exception {
        return getList(request, Optional.empty());
    }

    /**
     * Get List
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetListResponse getList(
            AtsGetListRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetListRequest, AtsGetListResponse> operation
              = new AtsGetListOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List locations
     * 
     * @return The call builder
     */
    public AtsListLocationsRequestBuilder listLocations() {
        return new AtsListLocationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListLocationsResponse listLocations(AtsListLocationsRequest request) throws Exception {
        return listLocations(request, Optional.empty());
    }

    /**
     * List locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListLocationsResponse listLocations(
            AtsListLocationsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListLocationsRequest, AtsListLocationsResponse> operation
              = new AtsListLocationsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Location
     * 
     * @return The call builder
     */
    public AtsGetLocationRequestBuilder getLocation() {
        return new AtsGetLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetLocationResponse getLocation(AtsGetLocationRequest request) throws Exception {
        return getLocation(request, Optional.empty());
    }

    /**
     * Get Location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetLocationResponse getLocation(
            AtsGetLocationRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetLocationRequest, AtsGetLocationResponse> operation
              = new AtsGetLocationOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Rejected Reasons
     * 
     * @return The call builder
     */
    public AtsListRejectedReasonsRequestBuilder listRejectedReasons() {
        return new AtsListRejectedReasonsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Rejected Reasons
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListRejectedReasonsResponse listRejectedReasons(AtsListRejectedReasonsRequest request) throws Exception {
        return listRejectedReasons(request, Optional.empty());
    }

    /**
     * List Rejected Reasons
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListRejectedReasonsResponse listRejectedReasons(
            AtsListRejectedReasonsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListRejectedReasonsRequest, AtsListRejectedReasonsResponse> operation
              = new AtsListRejectedReasonsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Rejected Reason
     * 
     * @return The call builder
     */
    public AtsGetRejectedReasonRequestBuilder getRejectedReason() {
        return new AtsGetRejectedReasonRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Rejected Reason
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetRejectedReasonResponse getRejectedReason(AtsGetRejectedReasonRequest request) throws Exception {
        return getRejectedReason(request, Optional.empty());
    }

    /**
     * Get Rejected Reason
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetRejectedReasonResponse getRejectedReason(
            AtsGetRejectedReasonRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetRejectedReasonRequest, AtsGetRejectedReasonResponse> operation
              = new AtsGetRejectedReasonOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Users
     * 
     * @return The call builder
     */
    public AtsListUsersRequestBuilder listUsers() {
        return new AtsListUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * List Users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListUsersResponse listUsers(AtsListUsersRequest request) throws Exception {
        return listUsers(request, Optional.empty());
    }

    /**
     * List Users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListUsersResponse listUsers(
            AtsListUsersRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListUsersRequest, AtsListUsersResponse> operation
              = new AtsListUsersOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get User
     * 
     * @return The call builder
     */
    public AtsGetUserRequestBuilder getUser() {
        return new AtsGetUserRequestBuilder(sdkConfiguration);
    }

    /**
     * Get User
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetUserResponse getUser(AtsGetUserRequest request) throws Exception {
        return getUser(request, Optional.empty());
    }

    /**
     * Get User
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetUserResponse getUser(
            AtsGetUserRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetUserRequest, AtsGetUserResponse> operation
              = new AtsGetUserOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Job Postings
     * 
     * @return The call builder
     */
    public AtsListJobPostingsRequestBuilder listJobPostings() {
        return new AtsListJobPostingsRequestBuilder(sdkConfiguration);
    }

    /**
     * List Job Postings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListJobPostingsResponse listJobPostings(AtsListJobPostingsRequest request) throws Exception {
        return listJobPostings(request, Optional.empty());
    }

    /**
     * List Job Postings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListJobPostingsResponse listJobPostings(
            AtsListJobPostingsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListJobPostingsRequest, AtsListJobPostingsResponse> operation
              = new AtsListJobPostingsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Job Posting
     * 
     * @return The call builder
     */
    public AtsGetJobPostingRequestBuilder getJobPosting() {
        return new AtsGetJobPostingRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Job Posting
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetJobPostingResponse getJobPosting(AtsGetJobPostingRequest request) throws Exception {
        return getJobPosting(request, Optional.empty());
    }

    /**
     * Get Job Posting
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetJobPostingResponse getJobPosting(
            AtsGetJobPostingRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetJobPostingRequest, AtsGetJobPostingResponse> operation
              = new AtsGetJobPostingOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Offers
     * 
     * @return The call builder
     */
    public AtsListOffersRequestBuilder listOffers() {
        return new AtsListOffersRequestBuilder(sdkConfiguration);
    }

    /**
     * List Offers
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListOffersResponse listOffers(AtsListOffersRequest request) throws Exception {
        return listOffers(request, Optional.empty());
    }

    /**
     * List Offers
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListOffersResponse listOffers(
            AtsListOffersRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListOffersRequest, AtsListOffersResponse> operation
              = new AtsListOffersOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Creates an offer
     * 
     * @return The call builder
     */
    public AtsCreateOfferRequestBuilder createOffer() {
        return new AtsCreateOfferRequestBuilder(sdkConfiguration);
    }

    /**
     * Creates an offer
     * 
     * @param xAccountId The account identifier
     * @param atsCreateOfferRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateOfferResponse createOffer(
            String xAccountId,
            AtsCreateOfferRequestDto atsCreateOfferRequestDto) throws Exception {
        return createOffer(xAccountId, atsCreateOfferRequestDto, Optional.empty());
    }

    /**
     * Creates an offer
     * 
     * @param xAccountId The account identifier
     * @param atsCreateOfferRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateOfferResponse createOffer(
            String xAccountId,
            AtsCreateOfferRequestDto atsCreateOfferRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateOfferRequest request =
            AtsCreateOfferRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateOfferRequestDto(atsCreateOfferRequestDto)
                .build();
        RequestOperation<AtsCreateOfferRequest, AtsCreateOfferResponse> operation
              = new AtsCreateOfferOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Offer
     * 
     * @return The call builder
     */
    public AtsGetOfferRequestBuilder getOffer() {
        return new AtsGetOfferRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Offer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetOfferResponse getOffer(AtsGetOfferRequest request) throws Exception {
        return getOffer(request, Optional.empty());
    }

    /**
     * Get Offer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetOfferResponse getOffer(
            AtsGetOfferRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetOfferRequest, AtsGetOfferResponse> operation
              = new AtsGetOfferOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Assessments Packages
     * 
     * @return The call builder
     */
    public AtsListAssessmentsPackagesRequestBuilder listAssessmentsPackages() {
        return new AtsListAssessmentsPackagesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Assessments Packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListAssessmentsPackagesResponse listAssessmentsPackages(AtsListAssessmentsPackagesRequest request) throws Exception {
        return listAssessmentsPackages(request, Optional.empty());
    }

    /**
     * List Assessments Packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListAssessmentsPackagesResponse listAssessmentsPackages(
            AtsListAssessmentsPackagesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListAssessmentsPackagesRequest, AtsListAssessmentsPackagesResponse> operation
              = new AtsListAssessmentsPackagesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Assessments Package
     * 
     * @return The call builder
     */
    public AtsGetAssessmentsPackageRequestBuilder getAssessmentsPackage() {
        return new AtsGetAssessmentsPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Assessments Package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetAssessmentsPackageResponse getAssessmentsPackage(AtsGetAssessmentsPackageRequest request) throws Exception {
        return getAssessmentsPackage(request, Optional.empty());
    }

    /**
     * Get Assessments Package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetAssessmentsPackageResponse getAssessmentsPackage(
            AtsGetAssessmentsPackageRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetAssessmentsPackageRequest, AtsGetAssessmentsPackageResponse> operation
              = new AtsGetAssessmentsPackageOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Order Assessments Request
     * 
     * @return The call builder
     */
    public AtsOrderAssessmentsRequestRequestBuilder orderAssessmentsRequest() {
        return new AtsOrderAssessmentsRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Order Assessments Request
     * 
     * @param xAccountId The account identifier
     * @param atsCreateCandidatesAssessmentsRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsOrderAssessmentsRequestResponse orderAssessmentsRequest(
            String xAccountId,
            AtsCreateCandidatesAssessmentsRequestDto atsCreateCandidatesAssessmentsRequestDto) throws Exception {
        return orderAssessmentsRequest(xAccountId, atsCreateCandidatesAssessmentsRequestDto, Optional.empty());
    }

    /**
     * Order Assessments Request
     * 
     * @param xAccountId The account identifier
     * @param atsCreateCandidatesAssessmentsRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsOrderAssessmentsRequestResponse orderAssessmentsRequest(
            String xAccountId,
            AtsCreateCandidatesAssessmentsRequestDto atsCreateCandidatesAssessmentsRequestDto,
            Optional<Options> options) throws Exception {
        AtsOrderAssessmentsRequestRequest request =
            AtsOrderAssessmentsRequestRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateCandidatesAssessmentsRequestDto(atsCreateCandidatesAssessmentsRequestDto)
                .build();
        RequestOperation<AtsOrderAssessmentsRequestRequest, AtsOrderAssessmentsRequestResponse> operation
              = new AtsOrderAssessmentsRequestOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Assessments Result
     * 
     * @return The call builder
     */
    public AtsUpdateAssessmentsResultRequestBuilder updateAssessmentsResult() {
        return new AtsUpdateAssessmentsResultRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Assessments Result
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateCandidatesAssessmentsResultsRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateAssessmentsResultResponse updateAssessmentsResult(
            String xAccountId,
            String id,
            AtsUpdateCandidatesAssessmentsResultsRequestDto atsUpdateCandidatesAssessmentsResultsRequestDto) throws Exception {
        return updateAssessmentsResult(xAccountId, id, atsUpdateCandidatesAssessmentsResultsRequestDto, Optional.empty());
    }

    /**
     * Update Assessments Result
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateCandidatesAssessmentsResultsRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateAssessmentsResultResponse updateAssessmentsResult(
            String xAccountId,
            String id,
            AtsUpdateCandidatesAssessmentsResultsRequestDto atsUpdateCandidatesAssessmentsResultsRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateAssessmentsResultRequest request =
            AtsUpdateAssessmentsResultRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsUpdateCandidatesAssessmentsResultsRequestDto(atsUpdateCandidatesAssessmentsResultsRequestDto)
                .build();
        RequestOperation<AtsUpdateAssessmentsResultRequest, AtsUpdateAssessmentsResultResponse> operation
              = new AtsUpdateAssessmentsResultOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Assessments Results
     * 
     * @return The call builder
     */
    public AtsGetAssessmentsResultRequestBuilder getAssessmentsResult() {
        return new AtsGetAssessmentsResultRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Assessments Results
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetAssessmentsResultResponse getAssessmentsResult(AtsGetAssessmentsResultRequest request) throws Exception {
        return getAssessmentsResult(request, Optional.empty());
    }

    /**
     * Get Assessments Results
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetAssessmentsResultResponse getAssessmentsResult(
            AtsGetAssessmentsResultRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetAssessmentsResultRequest, AtsGetAssessmentsResultResponse> operation
              = new AtsGetAssessmentsResultOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Background Check Packages
     * 
     * @return The call builder
     */
    public AtsListBackgroundCheckPackagesRequestBuilder listBackgroundCheckPackages() {
        return new AtsListBackgroundCheckPackagesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Background Check Packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListBackgroundCheckPackagesResponse listBackgroundCheckPackages(AtsListBackgroundCheckPackagesRequest request) throws Exception {
        return listBackgroundCheckPackages(request, Optional.empty());
    }

    /**
     * List Background Check Packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsListBackgroundCheckPackagesResponse listBackgroundCheckPackages(
            AtsListBackgroundCheckPackagesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsListBackgroundCheckPackagesRequest, AtsListBackgroundCheckPackagesResponse> operation
              = new AtsListBackgroundCheckPackagesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Background Check Package
     * 
     * @return The call builder
     */
    public AtsCreateBackgroundCheckPackageRequestBuilder createBackgroundCheckPackage() {
        return new AtsCreateBackgroundCheckPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Background Check Package
     * 
     * @param xAccountId The account identifier
     * @param atsCreateBackgroundCheckPackagesRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateBackgroundCheckPackageResponse createBackgroundCheckPackage(
            String xAccountId,
            AtsCreateBackgroundCheckPackagesRequestDto atsCreateBackgroundCheckPackagesRequestDto) throws Exception {
        return createBackgroundCheckPackage(xAccountId, atsCreateBackgroundCheckPackagesRequestDto, Optional.empty());
    }

    /**
     * Create Background Check Package
     * 
     * @param xAccountId The account identifier
     * @param atsCreateBackgroundCheckPackagesRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsCreateBackgroundCheckPackageResponse createBackgroundCheckPackage(
            String xAccountId,
            AtsCreateBackgroundCheckPackagesRequestDto atsCreateBackgroundCheckPackagesRequestDto,
            Optional<Options> options) throws Exception {
        AtsCreateBackgroundCheckPackageRequest request =
            AtsCreateBackgroundCheckPackageRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateBackgroundCheckPackagesRequestDto(atsCreateBackgroundCheckPackagesRequestDto)
                .build();
        RequestOperation<AtsCreateBackgroundCheckPackageRequest, AtsCreateBackgroundCheckPackageResponse> operation
              = new AtsCreateBackgroundCheckPackageOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Background Check Package
     * 
     * @return The call builder
     */
    public AtsGetBackgroundCheckPackageRequestBuilder getBackgroundCheckPackage() {
        return new AtsGetBackgroundCheckPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Background Check Package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetBackgroundCheckPackageResponse getBackgroundCheckPackage(AtsGetBackgroundCheckPackageRequest request) throws Exception {
        return getBackgroundCheckPackage(request, Optional.empty());
    }

    /**
     * Get Background Check Package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetBackgroundCheckPackageResponse getBackgroundCheckPackage(
            AtsGetBackgroundCheckPackageRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetBackgroundCheckPackageRequest, AtsGetBackgroundCheckPackageResponse> operation
              = new AtsGetBackgroundCheckPackageOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Delete Background Check Package
     * 
     * @return The call builder
     */
    public AtsDeleteBackgroundCheckPackageRequestBuilder deleteBackgroundCheckPackage() {
        return new AtsDeleteBackgroundCheckPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Background Check Package
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsDeleteBackgroundCheckPackageResponse deleteBackgroundCheckPackage(
            String xAccountId,
            String id) throws Exception {
        return deleteBackgroundCheckPackage(xAccountId, id, Optional.empty());
    }

    /**
     * Delete Background Check Package
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsDeleteBackgroundCheckPackageResponse deleteBackgroundCheckPackage(
            String xAccountId,
            String id,
            Optional<Options> options) throws Exception {
        AtsDeleteBackgroundCheckPackageRequest request =
            AtsDeleteBackgroundCheckPackageRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .build();
        RequestOperation<AtsDeleteBackgroundCheckPackageRequest, AtsDeleteBackgroundCheckPackageResponse> operation
              = new AtsDeleteBackgroundCheckPackageOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Background Check Package
     * 
     * @return The call builder
     */
    public AtsUpdateBackgroundCheckPackageRequestBuilder updateBackgroundCheckPackage() {
        return new AtsUpdateBackgroundCheckPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Background Check Package
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateBackgroundCheckPackagesRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateBackgroundCheckPackageResponse updateBackgroundCheckPackage(
            String xAccountId,
            String id,
            AtsUpdateBackgroundCheckPackagesRequestDto atsUpdateBackgroundCheckPackagesRequestDto) throws Exception {
        return updateBackgroundCheckPackage(xAccountId, id, atsUpdateBackgroundCheckPackagesRequestDto, Optional.empty());
    }

    /**
     * Update Background Check Package
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateBackgroundCheckPackagesRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateBackgroundCheckPackageResponse updateBackgroundCheckPackage(
            String xAccountId,
            String id,
            AtsUpdateBackgroundCheckPackagesRequestDto atsUpdateBackgroundCheckPackagesRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateBackgroundCheckPackageRequest request =
            AtsUpdateBackgroundCheckPackageRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsUpdateBackgroundCheckPackagesRequestDto(atsUpdateBackgroundCheckPackagesRequestDto)
                .build();
        RequestOperation<AtsUpdateBackgroundCheckPackageRequest, AtsUpdateBackgroundCheckPackageResponse> operation
              = new AtsUpdateBackgroundCheckPackageOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Order Background Check Request
     * 
     * @return The call builder
     */
    public AtsOrderBackgroundCheckRequestRequestBuilder orderBackgroundCheckRequest() {
        return new AtsOrderBackgroundCheckRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Order Background Check Request
     * 
     * @param xAccountId The account identifier
     * @param atsCreateBackgroundCheckOrderRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsOrderBackgroundCheckRequestResponse orderBackgroundCheckRequest(
            String xAccountId,
            AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto) throws Exception {
        return orderBackgroundCheckRequest(xAccountId, atsCreateBackgroundCheckOrderRequestDto, Optional.empty());
    }

    /**
     * Order Background Check Request
     * 
     * @param xAccountId The account identifier
     * @param atsCreateBackgroundCheckOrderRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsOrderBackgroundCheckRequestResponse orderBackgroundCheckRequest(
            String xAccountId,
            AtsCreateBackgroundCheckOrderRequestDto atsCreateBackgroundCheckOrderRequestDto,
            Optional<Options> options) throws Exception {
        AtsOrderBackgroundCheckRequestRequest request =
            AtsOrderBackgroundCheckRequestRequest
                .builder()
                .xAccountId(xAccountId)
                .atsCreateBackgroundCheckOrderRequestDto(atsCreateBackgroundCheckOrderRequestDto)
                .build();
        RequestOperation<AtsOrderBackgroundCheckRequestRequest, AtsOrderBackgroundCheckRequestResponse> operation
              = new AtsOrderBackgroundCheckRequestOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Background Check Result
     * 
     * @return The call builder
     */
    public AtsUpdateBackgroundCheckResultRequestBuilder updateBackgroundCheckResult() {
        return new AtsUpdateBackgroundCheckResultRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Background Check Result
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateBackgroundCheckResultRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateBackgroundCheckResultResponse updateBackgroundCheckResult(
            String xAccountId,
            String id,
            AtsUpdateBackgroundCheckResultRequestDto atsUpdateBackgroundCheckResultRequestDto) throws Exception {
        return updateBackgroundCheckResult(xAccountId, id, atsUpdateBackgroundCheckResultRequestDto, Optional.empty());
    }

    /**
     * Update Background Check Result
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param atsUpdateBackgroundCheckResultRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsUpdateBackgroundCheckResultResponse updateBackgroundCheckResult(
            String xAccountId,
            String id,
            AtsUpdateBackgroundCheckResultRequestDto atsUpdateBackgroundCheckResultRequestDto,
            Optional<Options> options) throws Exception {
        AtsUpdateBackgroundCheckResultRequest request =
            AtsUpdateBackgroundCheckResultRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .atsUpdateBackgroundCheckResultRequestDto(atsUpdateBackgroundCheckResultRequestDto)
                .build();
        RequestOperation<AtsUpdateBackgroundCheckResultRequest, AtsUpdateBackgroundCheckResultResponse> operation
              = new AtsUpdateBackgroundCheckResultOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Background Check Results
     * 
     * @return The call builder
     */
    public AtsGetBackgroundCheckResultRequestBuilder getBackgroundCheckResult() {
        return new AtsGetBackgroundCheckResultRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Background Check Results
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetBackgroundCheckResultResponse getBackgroundCheckResult(AtsGetBackgroundCheckResultRequest request) throws Exception {
        return getBackgroundCheckResult(request, Optional.empty());
    }

    /**
     * Get Background Check Results
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsGetBackgroundCheckResultResponse getBackgroundCheckResult(
            AtsGetBackgroundCheckResultRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AtsGetBackgroundCheckResultRequest, AtsGetBackgroundCheckResultResponse> operation
              = new AtsGetBackgroundCheckResultOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
