/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.stackone.stackone_client_java;

import static com.stackone.stackone_client_java.operations.Operations.RequestOperation;

import com.stackone.stackone_client_java.models.components.MarketingCreateContentBlocksRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateEmailTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateInAppTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreatePushTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateSmsTemplateRequestDto;
import com.stackone.stackone_client_java.models.components.MarketingCreateTemplateRequestDto;
import com.stackone.stackone_client_java.models.operations.MarketingCreateContentBlockRequest;
import com.stackone.stackone_client_java.models.operations.MarketingCreateContentBlockRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingCreateContentBlockResponse;
import com.stackone.stackone_client_java.models.operations.MarketingCreateEmailTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingCreateEmailTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingCreateEmailTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingCreateInAppTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingCreateInAppTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingCreateInAppTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingCreateOmniChannelTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingCreateOmniChannelTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingCreateOmniChannelTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingCreatePushTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingCreatePushTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingCreatePushTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingCreateSmsTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingCreateSmsTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingCreateSmsTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetCampaignRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetCampaignRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetCampaignResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetContentBlockRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetContentBlockRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetContentBlockResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetEmailTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetEmailTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetEmailTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetInAppTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetInAppTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetInAppTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetOmniChannelTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetOmniChannelTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetOmniChannelTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetPushTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetPushTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetPushTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingGetSmsTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingGetSmsTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingGetSmsTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListCampaignsRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListCampaignsRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListCampaignsResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListContentBlocksRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListContentBlocksRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListContentBlocksResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListEmailTemplatesRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListEmailTemplatesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListEmailTemplatesResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListInAppTemplatesRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListInAppTemplatesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListInAppTemplatesResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListOmniChannelTemplatesRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListOmniChannelTemplatesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListOmniChannelTemplatesResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListPushTemplatesRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListPushTemplatesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListPushTemplatesResponse;
import com.stackone.stackone_client_java.models.operations.MarketingListSmsTemplatesRequest;
import com.stackone.stackone_client_java.models.operations.MarketingListSmsTemplatesRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingListSmsTemplatesResponse;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateContentBlockRequest;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateContentBlockRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateContentBlockResponse;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateEmailTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateEmailTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateEmailTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateInAppTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateInAppTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateInAppTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateOmniChannelTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateOmniChannelTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateOmniChannelTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingUpdatePushTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingUpdatePushTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingUpdatePushTemplateResponse;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateSmsTemplateRequest;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateSmsTemplateRequestBuilder;
import com.stackone.stackone_client_java.models.operations.MarketingUpdateSmsTemplateResponse;
import com.stackone.stackone_client_java.operations.MarketingCreateContentBlockOperation;
import com.stackone.stackone_client_java.operations.MarketingCreateEmailTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingCreateInAppTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingCreateOmniChannelTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingCreatePushTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingCreateSmsTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingGetCampaignOperation;
import com.stackone.stackone_client_java.operations.MarketingGetContentBlockOperation;
import com.stackone.stackone_client_java.operations.MarketingGetEmailTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingGetInAppTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingGetOmniChannelTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingGetPushTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingGetSmsTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingListCampaignsOperation;
import com.stackone.stackone_client_java.operations.MarketingListContentBlocksOperation;
import com.stackone.stackone_client_java.operations.MarketingListEmailTemplatesOperation;
import com.stackone.stackone_client_java.operations.MarketingListInAppTemplatesOperation;
import com.stackone.stackone_client_java.operations.MarketingListOmniChannelTemplatesOperation;
import com.stackone.stackone_client_java.operations.MarketingListPushTemplatesOperation;
import com.stackone.stackone_client_java.operations.MarketingListSmsTemplatesOperation;
import com.stackone.stackone_client_java.operations.MarketingUpdateContentBlockOperation;
import com.stackone.stackone_client_java.operations.MarketingUpdateEmailTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingUpdateInAppTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingUpdateOmniChannelTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingUpdatePushTemplateOperation;
import com.stackone.stackone_client_java.operations.MarketingUpdateSmsTemplateOperation;
import com.stackone.stackone_client_java.utils.Options;
import java.lang.Deprecated;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class Marketing {
    private final SDKConfiguration sdkConfiguration;

    Marketing(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List Email Templates
     * 
     * @return The call builder
     */
    public MarketingListEmailTemplatesRequestBuilder listEmailTemplates() {
        return new MarketingListEmailTemplatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Email Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListEmailTemplatesResponse listEmailTemplates(MarketingListEmailTemplatesRequest request) throws Exception {
        return listEmailTemplates(request, Optional.empty());
    }

    /**
     * List Email Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListEmailTemplatesResponse listEmailTemplates(
            MarketingListEmailTemplatesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListEmailTemplatesRequest, MarketingListEmailTemplatesResponse> operation
              = new MarketingListEmailTemplatesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Email Templates
     * 
     * @return The call builder
     */
    public MarketingCreateEmailTemplateRequestBuilder createEmailTemplate() {
        return new MarketingCreateEmailTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Email Templates
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateEmailTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateEmailTemplateResponse createEmailTemplate(
            String xAccountId,
            MarketingCreateEmailTemplateRequestDto marketingCreateEmailTemplateRequestDto) throws Exception {
        return createEmailTemplate(xAccountId, marketingCreateEmailTemplateRequestDto, Optional.empty());
    }

    /**
     * Create Email Templates
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateEmailTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateEmailTemplateResponse createEmailTemplate(
            String xAccountId,
            MarketingCreateEmailTemplateRequestDto marketingCreateEmailTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingCreateEmailTemplateRequest request =
            MarketingCreateEmailTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .marketingCreateEmailTemplateRequestDto(marketingCreateEmailTemplateRequestDto)
                .build();
        RequestOperation<MarketingCreateEmailTemplateRequest, MarketingCreateEmailTemplateResponse> operation
              = new MarketingCreateEmailTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Email Templates
     * 
     * @return The call builder
     */
    public MarketingGetEmailTemplateRequestBuilder getEmailTemplate() {
        return new MarketingGetEmailTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Email Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetEmailTemplateResponse getEmailTemplate(MarketingGetEmailTemplateRequest request) throws Exception {
        return getEmailTemplate(request, Optional.empty());
    }

    /**
     * Get Email Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetEmailTemplateResponse getEmailTemplate(
            MarketingGetEmailTemplateRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetEmailTemplateRequest, MarketingGetEmailTemplateResponse> operation
              = new MarketingGetEmailTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Email Templates
     * 
     * @return The call builder
     */
    public MarketingUpdateEmailTemplateRequestBuilder updateEmailTemplate() {
        return new MarketingUpdateEmailTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Email Templates
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateEmailTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateEmailTemplateResponse updateEmailTemplate(
            String xAccountId,
            String id,
            MarketingCreateEmailTemplateRequestDto marketingCreateEmailTemplateRequestDto) throws Exception {
        return updateEmailTemplate(xAccountId, id, marketingCreateEmailTemplateRequestDto, Optional.empty());
    }

    /**
     * Update Email Templates
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateEmailTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateEmailTemplateResponse updateEmailTemplate(
            String xAccountId,
            String id,
            MarketingCreateEmailTemplateRequestDto marketingCreateEmailTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingUpdateEmailTemplateRequest request =
            MarketingUpdateEmailTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .marketingCreateEmailTemplateRequestDto(marketingCreateEmailTemplateRequestDto)
                .build();
        RequestOperation<MarketingUpdateEmailTemplateRequest, MarketingUpdateEmailTemplateResponse> operation
              = new MarketingUpdateEmailTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List In-App Templates
     * 
     * @return The call builder
     */
    public MarketingListInAppTemplatesRequestBuilder listInAppTemplates() {
        return new MarketingListInAppTemplatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List In-App Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListInAppTemplatesResponse listInAppTemplates(MarketingListInAppTemplatesRequest request) throws Exception {
        return listInAppTemplates(request, Optional.empty());
    }

    /**
     * List In-App Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListInAppTemplatesResponse listInAppTemplates(
            MarketingListInAppTemplatesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListInAppTemplatesRequest, MarketingListInAppTemplatesResponse> operation
              = new MarketingListInAppTemplatesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create In-App Template
     * 
     * @return The call builder
     */
    public MarketingCreateInAppTemplateRequestBuilder createInAppTemplate() {
        return new MarketingCreateInAppTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create In-App Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateInAppTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateInAppTemplateResponse createInAppTemplate(
            String xAccountId,
            MarketingCreateInAppTemplateRequestDto marketingCreateInAppTemplateRequestDto) throws Exception {
        return createInAppTemplate(xAccountId, marketingCreateInAppTemplateRequestDto, Optional.empty());
    }

    /**
     * Create In-App Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateInAppTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateInAppTemplateResponse createInAppTemplate(
            String xAccountId,
            MarketingCreateInAppTemplateRequestDto marketingCreateInAppTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingCreateInAppTemplateRequest request =
            MarketingCreateInAppTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .marketingCreateInAppTemplateRequestDto(marketingCreateInAppTemplateRequestDto)
                .build();
        RequestOperation<MarketingCreateInAppTemplateRequest, MarketingCreateInAppTemplateResponse> operation
              = new MarketingCreateInAppTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get In-App Template
     * 
     * @return The call builder
     */
    public MarketingGetInAppTemplateRequestBuilder getInAppTemplate() {
        return new MarketingGetInAppTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Get In-App Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetInAppTemplateResponse getInAppTemplate(MarketingGetInAppTemplateRequest request) throws Exception {
        return getInAppTemplate(request, Optional.empty());
    }

    /**
     * Get In-App Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetInAppTemplateResponse getInAppTemplate(
            MarketingGetInAppTemplateRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetInAppTemplateRequest, MarketingGetInAppTemplateResponse> operation
              = new MarketingGetInAppTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update In-App Template
     * 
     * @return The call builder
     */
    public MarketingUpdateInAppTemplateRequestBuilder updateInAppTemplate() {
        return new MarketingUpdateInAppTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update In-App Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateInAppTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateInAppTemplateResponse updateInAppTemplate(
            String xAccountId,
            String id,
            MarketingCreateInAppTemplateRequestDto marketingCreateInAppTemplateRequestDto) throws Exception {
        return updateInAppTemplate(xAccountId, id, marketingCreateInAppTemplateRequestDto, Optional.empty());
    }

    /**
     * Update In-App Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateInAppTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateInAppTemplateResponse updateInAppTemplate(
            String xAccountId,
            String id,
            MarketingCreateInAppTemplateRequestDto marketingCreateInAppTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingUpdateInAppTemplateRequest request =
            MarketingUpdateInAppTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .marketingCreateInAppTemplateRequestDto(marketingCreateInAppTemplateRequestDto)
                .build();
        RequestOperation<MarketingUpdateInAppTemplateRequest, MarketingUpdateInAppTemplateResponse> operation
              = new MarketingUpdateInAppTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List SMS Templates
     * 
     * @return The call builder
     */
    public MarketingListSmsTemplatesRequestBuilder listSmsTemplates() {
        return new MarketingListSmsTemplatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List SMS Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListSmsTemplatesResponse listSmsTemplates(MarketingListSmsTemplatesRequest request) throws Exception {
        return listSmsTemplates(request, Optional.empty());
    }

    /**
     * List SMS Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListSmsTemplatesResponse listSmsTemplates(
            MarketingListSmsTemplatesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListSmsTemplatesRequest, MarketingListSmsTemplatesResponse> operation
              = new MarketingListSmsTemplatesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create SMS Template
     * 
     * @return The call builder
     */
    public MarketingCreateSmsTemplateRequestBuilder createSmsTemplate() {
        return new MarketingCreateSmsTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create SMS Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateSmsTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateSmsTemplateResponse createSmsTemplate(
            String xAccountId,
            MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto) throws Exception {
        return createSmsTemplate(xAccountId, marketingCreateSmsTemplateRequestDto, Optional.empty());
    }

    /**
     * Create SMS Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateSmsTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateSmsTemplateResponse createSmsTemplate(
            String xAccountId,
            MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingCreateSmsTemplateRequest request =
            MarketingCreateSmsTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .marketingCreateSmsTemplateRequestDto(marketingCreateSmsTemplateRequestDto)
                .build();
        RequestOperation<MarketingCreateSmsTemplateRequest, MarketingCreateSmsTemplateResponse> operation
              = new MarketingCreateSmsTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get SMS Template
     * 
     * @return The call builder
     */
    public MarketingGetSmsTemplateRequestBuilder getSmsTemplate() {
        return new MarketingGetSmsTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Get SMS Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetSmsTemplateResponse getSmsTemplate(MarketingGetSmsTemplateRequest request) throws Exception {
        return getSmsTemplate(request, Optional.empty());
    }

    /**
     * Get SMS Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetSmsTemplateResponse getSmsTemplate(
            MarketingGetSmsTemplateRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetSmsTemplateRequest, MarketingGetSmsTemplateResponse> operation
              = new MarketingGetSmsTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update SMS Template
     * 
     * @return The call builder
     */
    public MarketingUpdateSmsTemplateRequestBuilder updateSmsTemplate() {
        return new MarketingUpdateSmsTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update SMS Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateSmsTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateSmsTemplateResponse updateSmsTemplate(
            String xAccountId,
            String id,
            MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto) throws Exception {
        return updateSmsTemplate(xAccountId, id, marketingCreateSmsTemplateRequestDto, Optional.empty());
    }

    /**
     * Update SMS Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateSmsTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateSmsTemplateResponse updateSmsTemplate(
            String xAccountId,
            String id,
            MarketingCreateSmsTemplateRequestDto marketingCreateSmsTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingUpdateSmsTemplateRequest request =
            MarketingUpdateSmsTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .marketingCreateSmsTemplateRequestDto(marketingCreateSmsTemplateRequestDto)
                .build();
        RequestOperation<MarketingUpdateSmsTemplateRequest, MarketingUpdateSmsTemplateResponse> operation
              = new MarketingUpdateSmsTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Omni-Channel Templates
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingListOmniChannelTemplatesRequestBuilder listOmniChannelTemplates() {
        return new MarketingListOmniChannelTemplatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Omni-Channel Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingListOmniChannelTemplatesResponse listOmniChannelTemplates(MarketingListOmniChannelTemplatesRequest request) throws Exception {
        return listOmniChannelTemplates(request, Optional.empty());
    }

    /**
     * List Omni-Channel Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingListOmniChannelTemplatesResponse listOmniChannelTemplates(
            MarketingListOmniChannelTemplatesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListOmniChannelTemplatesRequest, MarketingListOmniChannelTemplatesResponse> operation
              = new MarketingListOmniChannelTemplatesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Omni-Channel Template
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingCreateOmniChannelTemplateRequestBuilder createOmniChannelTemplate() {
        return new MarketingCreateOmniChannelTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Omni-Channel Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingCreateOmniChannelTemplateResponse createOmniChannelTemplate(
            String xAccountId,
            MarketingCreateTemplateRequestDto marketingCreateTemplateRequestDto) throws Exception {
        return createOmniChannelTemplate(xAccountId, marketingCreateTemplateRequestDto, Optional.empty());
    }

    /**
     * Create Omni-Channel Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingCreateOmniChannelTemplateResponse createOmniChannelTemplate(
            String xAccountId,
            MarketingCreateTemplateRequestDto marketingCreateTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingCreateOmniChannelTemplateRequest request =
            MarketingCreateOmniChannelTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .marketingCreateTemplateRequestDto(marketingCreateTemplateRequestDto)
                .build();
        RequestOperation<MarketingCreateOmniChannelTemplateRequest, MarketingCreateOmniChannelTemplateResponse> operation
              = new MarketingCreateOmniChannelTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Omni-Channel Template
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingGetOmniChannelTemplateRequestBuilder getOmniChannelTemplate() {
        return new MarketingGetOmniChannelTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Omni-Channel Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingGetOmniChannelTemplateResponse getOmniChannelTemplate(MarketingGetOmniChannelTemplateRequest request) throws Exception {
        return getOmniChannelTemplate(request, Optional.empty());
    }

    /**
     * Get Omni-Channel Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingGetOmniChannelTemplateResponse getOmniChannelTemplate(
            MarketingGetOmniChannelTemplateRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetOmniChannelTemplateRequest, MarketingGetOmniChannelTemplateResponse> operation
              = new MarketingGetOmniChannelTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Omni-Channel Template
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingUpdateOmniChannelTemplateRequestBuilder updateOmniChannelTemplate() {
        return new MarketingUpdateOmniChannelTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Omni-Channel Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingUpdateOmniChannelTemplateResponse updateOmniChannelTemplate(
            String xAccountId,
            String id,
            MarketingCreateTemplateRequestDto marketingCreateTemplateRequestDto) throws Exception {
        return updateOmniChannelTemplate(xAccountId, id, marketingCreateTemplateRequestDto, Optional.empty());
    }

    /**
     * Update Omni-Channel Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public MarketingUpdateOmniChannelTemplateResponse updateOmniChannelTemplate(
            String xAccountId,
            String id,
            MarketingCreateTemplateRequestDto marketingCreateTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingUpdateOmniChannelTemplateRequest request =
            MarketingUpdateOmniChannelTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .marketingCreateTemplateRequestDto(marketingCreateTemplateRequestDto)
                .build();
        RequestOperation<MarketingUpdateOmniChannelTemplateRequest, MarketingUpdateOmniChannelTemplateResponse> operation
              = new MarketingUpdateOmniChannelTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Push Templates
     * 
     * @return The call builder
     */
    public MarketingListPushTemplatesRequestBuilder listPushTemplates() {
        return new MarketingListPushTemplatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List Push Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListPushTemplatesResponse listPushTemplates(MarketingListPushTemplatesRequest request) throws Exception {
        return listPushTemplates(request, Optional.empty());
    }

    /**
     * List Push Templates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListPushTemplatesResponse listPushTemplates(
            MarketingListPushTemplatesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListPushTemplatesRequest, MarketingListPushTemplatesResponse> operation
              = new MarketingListPushTemplatesOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Push Template
     * 
     * @return The call builder
     */
    public MarketingCreatePushTemplateRequestBuilder createPushTemplate() {
        return new MarketingCreatePushTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Push Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreatePushTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreatePushTemplateResponse createPushTemplate(
            String xAccountId,
            MarketingCreatePushTemplateRequestDto marketingCreatePushTemplateRequestDto) throws Exception {
        return createPushTemplate(xAccountId, marketingCreatePushTemplateRequestDto, Optional.empty());
    }

    /**
     * Create Push Template
     * 
     * @param xAccountId The account identifier
     * @param marketingCreatePushTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreatePushTemplateResponse createPushTemplate(
            String xAccountId,
            MarketingCreatePushTemplateRequestDto marketingCreatePushTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingCreatePushTemplateRequest request =
            MarketingCreatePushTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .marketingCreatePushTemplateRequestDto(marketingCreatePushTemplateRequestDto)
                .build();
        RequestOperation<MarketingCreatePushTemplateRequest, MarketingCreatePushTemplateResponse> operation
              = new MarketingCreatePushTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Push Template
     * 
     * @return The call builder
     */
    public MarketingGetPushTemplateRequestBuilder getPushTemplate() {
        return new MarketingGetPushTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Push Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetPushTemplateResponse getPushTemplate(MarketingGetPushTemplateRequest request) throws Exception {
        return getPushTemplate(request, Optional.empty());
    }

    /**
     * Get Push Template
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetPushTemplateResponse getPushTemplate(
            MarketingGetPushTemplateRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetPushTemplateRequest, MarketingGetPushTemplateResponse> operation
              = new MarketingGetPushTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Push Template
     * 
     * @return The call builder
     */
    public MarketingUpdatePushTemplateRequestBuilder updatePushTemplate() {
        return new MarketingUpdatePushTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Push Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreatePushTemplateRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdatePushTemplateResponse updatePushTemplate(
            String xAccountId,
            String id,
            MarketingCreatePushTemplateRequestDto marketingCreatePushTemplateRequestDto) throws Exception {
        return updatePushTemplate(xAccountId, id, marketingCreatePushTemplateRequestDto, Optional.empty());
    }

    /**
     * Update Push Template
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreatePushTemplateRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdatePushTemplateResponse updatePushTemplate(
            String xAccountId,
            String id,
            MarketingCreatePushTemplateRequestDto marketingCreatePushTemplateRequestDto,
            Optional<Options> options) throws Exception {
        MarketingUpdatePushTemplateRequest request =
            MarketingUpdatePushTemplateRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .marketingCreatePushTemplateRequestDto(marketingCreatePushTemplateRequestDto)
                .build();
        RequestOperation<MarketingUpdatePushTemplateRequest, MarketingUpdatePushTemplateResponse> operation
              = new MarketingUpdatePushTemplateOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List campaigns
     * 
     * @return The call builder
     */
    public MarketingListCampaignsRequestBuilder listCampaigns() {
        return new MarketingListCampaignsRequestBuilder(sdkConfiguration);
    }

    /**
     * List campaigns
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListCampaignsResponse listCampaigns(MarketingListCampaignsRequest request) throws Exception {
        return listCampaigns(request, Optional.empty());
    }

    /**
     * List campaigns
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListCampaignsResponse listCampaigns(
            MarketingListCampaignsRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListCampaignsRequest, MarketingListCampaignsResponse> operation
              = new MarketingListCampaignsOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get campaign
     * 
     * @return The call builder
     */
    public MarketingGetCampaignRequestBuilder getCampaign() {
        return new MarketingGetCampaignRequestBuilder(sdkConfiguration);
    }

    /**
     * Get campaign
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetCampaignResponse getCampaign(MarketingGetCampaignRequest request) throws Exception {
        return getCampaign(request, Optional.empty());
    }

    /**
     * Get campaign
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetCampaignResponse getCampaign(
            MarketingGetCampaignRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetCampaignRequest, MarketingGetCampaignResponse> operation
              = new MarketingGetCampaignOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Content Blocks
     * 
     * @return The call builder
     */
    public MarketingListContentBlocksRequestBuilder listContentBlocks() {
        return new MarketingListContentBlocksRequestBuilder(sdkConfiguration);
    }

    /**
     * List Content Blocks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListContentBlocksResponse listContentBlocks(MarketingListContentBlocksRequest request) throws Exception {
        return listContentBlocks(request, Optional.empty());
    }

    /**
     * List Content Blocks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingListContentBlocksResponse listContentBlocks(
            MarketingListContentBlocksRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingListContentBlocksRequest, MarketingListContentBlocksResponse> operation
              = new MarketingListContentBlocksOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create Content Block
     * 
     * @return The call builder
     */
    public MarketingCreateContentBlockRequestBuilder createContentBlock() {
        return new MarketingCreateContentBlockRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Content Block
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateContentBlocksRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateContentBlockResponse createContentBlock(
            String xAccountId,
            MarketingCreateContentBlocksRequestDto marketingCreateContentBlocksRequestDto) throws Exception {
        return createContentBlock(xAccountId, marketingCreateContentBlocksRequestDto, Optional.empty());
    }

    /**
     * Create Content Block
     * 
     * @param xAccountId The account identifier
     * @param marketingCreateContentBlocksRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingCreateContentBlockResponse createContentBlock(
            String xAccountId,
            MarketingCreateContentBlocksRequestDto marketingCreateContentBlocksRequestDto,
            Optional<Options> options) throws Exception {
        MarketingCreateContentBlockRequest request =
            MarketingCreateContentBlockRequest
                .builder()
                .xAccountId(xAccountId)
                .marketingCreateContentBlocksRequestDto(marketingCreateContentBlocksRequestDto)
                .build();
        RequestOperation<MarketingCreateContentBlockRequest, MarketingCreateContentBlockResponse> operation
              = new MarketingCreateContentBlockOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get Content Blocks
     * 
     * @return The call builder
     */
    public MarketingGetContentBlockRequestBuilder getContentBlock() {
        return new MarketingGetContentBlockRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Content Blocks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetContentBlockResponse getContentBlock(MarketingGetContentBlockRequest request) throws Exception {
        return getContentBlock(request, Optional.empty());
    }

    /**
     * Get Content Blocks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingGetContentBlockResponse getContentBlock(
            MarketingGetContentBlockRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<MarketingGetContentBlockRequest, MarketingGetContentBlockResponse> operation
              = new MarketingGetContentBlockOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Content Block
     * 
     * @return The call builder
     */
    public MarketingUpdateContentBlockRequestBuilder updateContentBlock() {
        return new MarketingUpdateContentBlockRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Content Block
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateContentBlocksRequestDto 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateContentBlockResponse updateContentBlock(
            String xAccountId,
            String id,
            MarketingCreateContentBlocksRequestDto marketingCreateContentBlocksRequestDto) throws Exception {
        return updateContentBlock(xAccountId, id, marketingCreateContentBlocksRequestDto, Optional.empty());
    }

    /**
     * Update Content Block
     * 
     * @param xAccountId The account identifier
     * @param id 
     * @param marketingCreateContentBlocksRequestDto 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarketingUpdateContentBlockResponse updateContentBlock(
            String xAccountId,
            String id,
            MarketingCreateContentBlocksRequestDto marketingCreateContentBlocksRequestDto,
            Optional<Options> options) throws Exception {
        MarketingUpdateContentBlockRequest request =
            MarketingUpdateContentBlockRequest
                .builder()
                .xAccountId(xAccountId)
                .id(id)
                .marketingCreateContentBlocksRequestDto(marketingCreateContentBlocksRequestDto)
                .build();
        RequestOperation<MarketingUpdateContentBlockRequest, MarketingUpdateContentBlockResponse> operation
              = new MarketingUpdateContentBlockOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
